---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: contactpoints.alerting.grafana.crossplane.io
spec:
  group: alerting.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: ContactPoint
    listKind: ContactPointList
    plural: contactpoints
    singular: contactpoint
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ContactPoint is the Schema for the ContactPoints API. Manages
          Grafana Alerting contact points. Official documentation https://grafana.com/docs/grafana/next/alerting/fundamentals/notifications/contact-points/HTTP
          API https://grafana.com/docs/grafana/latest/developers/http_api/alerting_provisioning/#contact-points
          This resource requires Grafana 9.1.0 or later.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ContactPointSpec defines the desired state of ContactPoint
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  alertmanager:
                    description: |-
                      (Block Set) A contact point that sends notifications to other Alertmanager instances. (see below for nested schema)
                      A contact point that sends notifications to other Alertmanager instances.
                    items:
                      properties:
                        basicAuthPasswordSecretRef:
                          description: |-
                            (String, Sensitive) The password component of the basic auth credentials to use.
                            The password component of the basic auth credentials to use.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        basicAuthUser:
                          description: |-
                            (String) The username component of the basic auth credentials to use.
                            The username component of the basic auth credentials to use.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        settingsSecretRef:
                          description: |-
                            (Map of String, Sensitive) Additional custom properties to attach to the notifier. Defaults to map[].
                            Additional custom properties to attach to the notifier. Defaults to `map[]`.
                          properties:
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        url:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            The URL of the Alertmanager instance.
                          type: string
                      type: object
                    type: array
                  dingding:
                    description: |-
                      (Block Set) A contact point that sends notifications to DingDing. (see below for nested schema)
                      A contact point that sends notifications to DingDing.
                    items:
                      properties:
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        message:
                          description: |-
                            (String) The templated content of the message.
                            The templated content of the message.
                          type: string
                        messageType:
                          description: |-
                            either 'link' or 'actionCard'
                            The format of message to send - either 'link' or 'actionCard'
                          type: string
                        settingsSecretRef:
                          description: |-
                            (Map of String, Sensitive) Additional custom properties to attach to the notifier. Defaults to map[].
                            Additional custom properties to attach to the notifier. Defaults to `map[]`.
                          properties:
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        title:
                          description: |-
                            (String) The templated title of the message.
                            The templated title of the message.
                          type: string
                        url:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            The DingDing webhook URL.
                          type: string
                      type: object
                    type: array
                  disableProvenance:
                    description: Defaults to false. Defaults to `false`.
                    type: boolean
                  discord:
                    description: |-
                      (Block Set) A contact point that sends notifications as Discord messages (see below for nested schema)
                      A contact point that sends notifications as Discord messages
                    items:
                      properties:
                        avatarUrl:
                          description: |-
                            (String) The URL of a custom avatar image to use. Defaults to “.
                            The URL of a custom avatar image to use. Defaults to “.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        message:
                          description: |-
                            (String) The templated content of the message.
                            The templated content of the message. Defaults to “.
                          type: string
                        settingsSecretRef:
                          description: |-
                            (Map of String, Sensitive) Additional custom properties to attach to the notifier. Defaults to map[].
                            Additional custom properties to attach to the notifier. Defaults to `map[]`.
                          properties:
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        title:
                          description: |-
                            (String) The templated title of the message.
                            The templated content of the title.
                          type: string
                        urlSecretRef:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            The discord webhook URL.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        useDiscordUsername:
                          description: |-
                            (Boolean) Whether to use the bot account's plain username instead of "Grafana." Defaults to false.
                            Whether to use the bot account's plain username instead of "Grafana." Defaults to `false`.
                          type: boolean
                      type: object
                    type: array
                  email:
                    description: |-
                      (Block Set) A contact point that sends notifications to an email address. (see below for nested schema)
                      A contact point that sends notifications to an email address.
                    items:
                      properties:
                        addresses:
                          description: |-
                            (List of String) The addresses to send emails to.
                            The addresses to send emails to.
                          items:
                            type: string
                          type: array
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        message:
                          description: |-
                            (String) The templated content of the message.
                            The templated content of the email. Defaults to “.
                          type: string
                        settingsSecretRef:
                          description: |-
                            (Map of String, Sensitive) Additional custom properties to attach to the notifier. Defaults to map[].
                            Additional custom properties to attach to the notifier. Defaults to `map[]`.
                          properties:
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        singleEmail:
                          description: |-
                            (Boolean) Whether to send a single email CC'ing all addresses, rather than a separate email to each address. Defaults to false.
                            Whether to send a single email CC'ing all addresses, rather than a separate email to each address. Defaults to `false`.
                          type: boolean
                        subject:
                          description: |-
                            (String) The templated subject line of the email. Defaults to “.
                            The templated subject line of the email. Defaults to “.
                          type: string
                      type: object
                    type: array
                  googlechat:
                    description: |-
                      (Block Set) A contact point that sends notifications to Google Chat. (see below for nested schema)
                      A contact point that sends notifications to Google Chat.
                    items:
                      properties:
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        message:
                          description: |-
                            (String) The templated content of the message.
                            The templated content of the message.
                          type: string
                        settingsSecretRef:
                          description: |-
                            (Map of String, Sensitive) Additional custom properties to attach to the notifier. Defaults to map[].
                            Additional custom properties to attach to the notifier. Defaults to `map[]`.
                          properties:
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        title:
                          description: |-
                            (String) The templated title of the message.
                            The templated content of the title.
                          type: string
                        urlSecretRef:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            The Google Chat webhook URL.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      type: object
                    type: array
                  kafka:
                    description: |-
                      (Block Set) A contact point that publishes notifications to Apache Kafka topics. (see below for nested schema)
                      A contact point that publishes notifications to Apache Kafka topics.
                    items:
                      properties:
                        apiVersion:
                          description: |-
                            (String) The API version to use when contacting the Kafka REST Server. Supported: v2 (default) and v3. Defaults to v2.
                            The API version to use when contacting the Kafka REST Server. Supported: v2 (default) and v3. Defaults to `v2`.
                          type: string
                        clusterId:
                          description: |-
                            (String) The Id of cluster to use when contacting the Kafka REST Server. Required api_version to be 'v3'
                            The Id of cluster to use when contacting the Kafka REST Server. Required api_version to be 'v3'
                          type: string
                        description:
                          description: |-
                            (String) The templated description of the Kafka message.
                            The templated description of the Kafka message.
                          type: string
                        details:
                          description: |-
                            (String) The templated details to include with the message.
                            The templated details to include with the message.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        passwordSecretRef:
                          description: |-
                            (String, Sensitive) The password to use when making a call to the Kafka REST Proxy
                            The password to use when making a call to the Kafka REST Proxy
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        restProxyUrlSecretRef:
                          description: |-
                            (String, Sensitive) The URL of the Kafka REST proxy to send requests to.
                            The URL of the Kafka REST proxy to send requests to.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        settingsSecretRef:
                          description: |-
                            (Map of String, Sensitive) Additional custom properties to attach to the notifier. Defaults to map[].
                            Additional custom properties to attach to the notifier. Defaults to `map[]`.
                          properties:
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        topic:
                          description: |-
                            (String) The name of the Kafka topic to publish to.
                            The name of the Kafka topic to publish to.
                          type: string
                        username:
                          description: |-
                            (String) The user name to use when making a call to the Kafka REST Proxy
                            The user name to use when making a call to the Kafka REST Proxy
                          type: string
                      type: object
                    type: array
                  line:
                    description: |-
                      (Block Set) A contact point that sends notifications to LINE.me. (see below for nested schema)
                      A contact point that sends notifications to LINE.me.
                    items:
                      properties:
                        description:
                          description: |-
                            (String) The templated description of the Kafka message.
                            The templated description of the message.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        settingsSecretRef:
                          description: |-
                            (Map of String, Sensitive) Additional custom properties to attach to the notifier. Defaults to map[].
                            Additional custom properties to attach to the notifier. Defaults to `map[]`.
                          properties:
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        title:
                          description: |-
                            (String) The templated title of the message.
                            The templated title of the message.
                          type: string
                        tokenSecretRef:
                          description: |-
                            (String, Sensitive) The bearer token used to authorize the client.
                            The bearer token used to authorize the client.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      type: object
                    type: array
                  name:
                    description: |-
                      (String) The name of the contact point.
                      The name of the contact point.
                    type: string
                  oncall:
                    description: |-
                      Call. (see below for nested schema)
                      A contact point that sends notifications to Grafana On-Call.
                    items:
                      properties:
                        authorizationCredentialsSecretRef:
                          description: |-
                            attaches an auth header with this value. Do not use in conjunction with basic auth parameters.
                            Allows a custom authorization scheme - attaches an auth header with this value. Do not use in conjunction with basic auth parameters.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        authorizationScheme:
                          description: |-
                            attaches an auth header with this name. Do not use in conjunction with basic auth parameters.
                            Allows a custom authorization scheme - attaches an auth header with this name. Do not use in conjunction with basic auth parameters.
                          type: string
                        basicAuthPasswordSecretRef:
                          description: |-
                            (String, Sensitive) The password component of the basic auth credentials to use.
                            The username to use in basic auth headers attached to the request. If omitted, basic auth will not be used.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        basicAuthUser:
                          description: |-
                            (String) The username component of the basic auth credentials to use.
                            The username to use in basic auth headers attached to the request. If omitted, basic auth will not be used.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        httpMethod:
                          description: |-
                            (String) The HTTP method to use in the request. Defaults to POST.
                            The HTTP method to use in the request. Defaults to `POST`.
                          type: string
                        maxAlerts:
                          description: |-
                            (Number) The maximum number of alerts to send in a single request. This can be helpful in limiting the size of the request body. The default is 0, which indicates no limit.
                            The maximum number of alerts to send in a single request. This can be helpful in limiting the size of the request body. The default is 0, which indicates no limit.
                          type: number
                        message:
                          description: |-
                            (String) The templated content of the message.
                            Custom message. You can use template variables.
                          type: string
                        settingsSecretRef:
                          description: |-
                            (Map of String, Sensitive) Additional custom properties to attach to the notifier. Defaults to map[].
                            Additional custom properties to attach to the notifier. Defaults to `map[]`.
                          properties:
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        title:
                          description: |-
                            (String) The templated title of the message.
                            Templated title of the message.
                          type: string
                        url:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            The URL to send webhook requests to.
                          type: string
                      type: object
                    type: array
                  opsgenie:
                    description: |-
                      (Block Set) A contact point that sends notifications to OpsGenie. (see below for nested schema)
                      A contact point that sends notifications to OpsGenie.
                    items:
                      properties:
                        apiKeySecretRef:
                          description: |-
                            (String, Sensitive) The OpsGenie API key to use.
                            The OpsGenie API key to use.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        autoClose:
                          description: |-
                            close alerts in OpsGenie when they resolve in the Alertmanager.
                            Whether to auto-close alerts in OpsGenie when they resolve in the Alertmanager.
                          type: boolean
                        description:
                          description: |-
                            (String) The templated description of the Kafka message.
                            A templated high-level description to use for the alert.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        message:
                          description: |-
                            (String) The templated content of the message.
                            The templated content of the message.
                          type: string
                        overridePriority:
                          description: |-
                            (Boolean) Whether to allow the alert priority to be configured via the value of the og_priority annotation on the alert.
                            Whether to allow the alert priority to be configured via the value of the `og_priority` annotation on the alert.
                          type: boolean
                        responders:
                          description: |-
                            (Block List) Teams, users, escalations and schedules that the alert will be routed to send notifications. If the API Key belongs to a team integration, this field will be overwritten with the owner team. This feature is available from Grafana 10.3+. (see below for nested schema)
                            Teams, users, escalations and schedules that the alert will be routed to send notifications. If the API Key belongs to a team integration, this field will be overwritten with the owner team. This feature is available from Grafana 10.3+.
                          items:
                            properties:
                              id:
                                description: |-
                                  (String) The ID of this resource.
                                  ID of the responder. Must be specified if name and username are empty.
                                type: string
                              name:
                                description: |-
                                  (String) The name of the contact point.
                                  Name of the responder. Must be specified if username and id are empty.
                                type: string
                              type:
                                description: |-
                                  (String) Type of the responder. Supported: team, teams, user, escalation, schedule or a template that is expanded to one of these values.
                                  Type of the responder. Supported: team, teams, user, escalation, schedule or a template that is expanded to one of these values.
                                type: string
                              username:
                                description: |-
                                  (String) The user name to use when making a call to the Kafka REST Proxy
                                  User name of the responder. Must be specified if name and id are empty.
                                type: string
                            type: object
                          type: array
                        sendTagsAs:
                          description: |-
                            (String) Whether to send annotations to OpsGenie as Tags, Details, or both. Supported values are tags, details, both, or empty to use the default behavior of Tags.
                            Whether to send annotations to OpsGenie as Tags, Details, or both. Supported values are `tags`, `details`, `both`, or empty to use the default behavior of Tags.
                          type: string
                        settingsSecretRef:
                          description: |-
                            (Map of String, Sensitive) Additional custom properties to attach to the notifier. Defaults to map[].
                            Additional custom properties to attach to the notifier. Defaults to `map[]`.
                          properties:
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        url:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            Allows customization of the OpsGenie API URL.
                          type: string
                      type: object
                    type: array
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  pagerduty:
                    description: |-
                      (Block Set) A contact point that sends notifications to PagerDuty. (see below for nested schema)
                      A contact point that sends notifications to PagerDuty.
                    items:
                      properties:
                        class:
                          description: |-
                            (String) The class or type of event, for example ping failure.
                            The class or type of event, for example `ping failure`.
                          type: string
                        client:
                          description: |-
                            (String) The name of the monitoring client that is triggering this event.
                            The name of the monitoring client that is triggering this event.
                          type: string
                        clientUrl:
                          description: |-
                            (String) The URL of the monitoring client that is triggering this event.
                            The URL of the monitoring client that is triggering this event.
                          type: string
                        component:
                          description: |-
                            (String) The component being affected by the event.
                            The component being affected by the event.
                          type: string
                        details:
                          additionalProperties:
                            type: string
                          description: |-
                            (String) The templated details to include with the message.
                            A set of arbitrary key/value pairs that provide further detail about the incident.
                          type: object
                          x-kubernetes-map-type: granular
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        group:
                          description: |-
                            (String) The group to which the provided component belongs to.
                            The group to which the provided component belongs to.
                          type: string
                        integrationKeySecretRef:
                          description: |-
                            (String, Sensitive) The PagerDuty API key.
                            The PagerDuty API key.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        settingsSecretRef:
                          description: |-
                            (Map of String, Sensitive) Additional custom properties to attach to the notifier. Defaults to map[].
                            Additional custom properties to attach to the notifier. Defaults to `map[]`.
                          properties:
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        severity:
                          description: |-
                            (String) The PagerDuty event severity level. Default is critical.
                            The PagerDuty event severity level. Default is `critical`.
                          type: string
                        source:
                          description: |-
                            (String) The unique location of the affected system.
                            The unique location of the affected system.
                          type: string
                        summary:
                          description: |-
                            (String) The templated summary message of the event.
                            The templated summary message of the event.
                          type: string
                        url:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            The URL to send API requests to
                          type: string
                      type: object
                    type: array
                  pushover:
                    description: |-
                      (Block Set) A contact point that sends notifications to Pushover. (see below for nested schema)
                      A contact point that sends notifications to Pushover.
                    items:
                      properties:
                        apiTokenSecretRef:
                          description: |-
                            (String, Sensitive) The Pushover API token.
                            The Pushover API token.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        device:
                          description: |-
                            separated list of devices to which the event is associated.
                            Comma-separated list of devices to which the event is associated.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        expire:
                          description: |-
                            (Number) How many seconds for which the notification will continue to be retried by Pushover.
                            How many seconds for which the notification will continue to be retried by Pushover.
                          type: number
                        message:
                          description: |-
                            (String) The templated content of the message.
                            The templated notification message content.
                          type: string
                        okPriority:
                          description: |-
                            (Number) The priority level of the resolved event.
                            The priority level of the resolved event.
                          type: number
                        okSound:
                          description: |-
                            (String) The sound associated with the resolved notification.
                            The sound associated with the resolved notification.
                          type: string
                        priority:
                          description: |-
                            (Number) The priority level of the event.
                            The priority level of the event.
                          type: number
                        retry:
                          description: |-
                            (Number) How often, in seconds, the Pushover servers will send the same notification to the user.
                            How often, in seconds, the Pushover servers will send the same notification to the user.
                          type: number
                        settingsSecretRef:
                          description: |-
                            (Map of String, Sensitive) Additional custom properties to attach to the notifier. Defaults to map[].
                            Additional custom properties to attach to the notifier. Defaults to `map[]`.
                          properties:
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        sound:
                          description: |-
                            (String) The sound associated with the notification.
                            The sound associated with the notification.
                          type: string
                        title:
                          description: |-
                            (String) The templated title of the message.
                            The templated title of the message.
                          type: string
                        uploadImage:
                          description: |-
                            (Boolean) Whether to send images in the notification or not. Default is true. Requires Grafana to be configured to send images in notifications.
                            Whether to send images in the notification or not. Default is true. Requires Grafana to be configured to send images in notifications.
                          type: boolean
                        userKeySecretRef:
                          description: |-
                            (String, Sensitive) The Pushover user key.
                            The Pushover user key.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      type: object
                    type: array
                  sensugo:
                    description: |-
                      (Block Set) A contact point that sends notifications to SensuGo. (see below for nested schema)
                      A contact point that sends notifications to SensuGo.
                    items:
                      properties:
                        apiKeySecretRef:
                          description: |-
                            (String, Sensitive) The OpsGenie API key to use.
                            The SensuGo API key.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        check:
                          description: |-
                            (String) The SensuGo check to which the event should be routed.
                            The SensuGo check to which the event should be routed.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        entity:
                          description: |-
                            (String) The entity being monitored.
                            The entity being monitored.
                          type: string
                        handler:
                          description: |-
                            (String) A custom handler to execute in addition to the check.
                            A custom handler to execute in addition to the check.
                          type: string
                        message:
                          description: |-
                            (String) The templated content of the message.
                            Templated message content describing the alert.
                          type: string
                        namespace:
                          description: |-
                            (String) The namespace in which the check resides.
                            The namespace in which the check resides.
                          type: string
                        settingsSecretRef:
                          description: |-
                            (Map of String, Sensitive) Additional custom properties to attach to the notifier. Defaults to map[].
                            Additional custom properties to attach to the notifier. Defaults to `map[]`.
                          properties:
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        url:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            The SensuGo URL to send requests to.
                          type: string
                      type: object
                    type: array
                  slack:
                    description: |-
                      (Block Set) A contact point that sends notifications to Slack. (see below for nested schema)
                      A contact point that sends notifications to Slack.
                    items:
                      properties:
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        endpointUrl:
                          description: |-
                            (String) Use this to override the Slack API endpoint URL to send requests to.
                            Use this to override the Slack API endpoint URL to send requests to.
                          type: string
                        iconEmoji:
                          description: |-
                            (String) The name of a Slack workspace emoji to use as the bot icon.
                            The name of a Slack workspace emoji to use as the bot icon.
                          type: string
                        iconUrl:
                          description: |-
                            (String) A URL of an image to use as the bot icon.
                            A URL of an image to use as the bot icon.
                          type: string
                        mentionChannel:
                          description: |-
                            (String) Describes how to ping the slack channel that messages are being sent to. Options are here for an @here ping, channel for @channel, or empty for no ping.
                            Describes how to ping the slack channel that messages are being sent to. Options are `here` for an @here ping, `channel` for @channel, or empty for no ping.
                          type: string
                        mentionGroups:
                          description: |-
                            separated list of groups to mention in the message.
                            Comma-separated list of groups to mention in the message.
                          type: string
                        mentionUsers:
                          description: |-
                            separated list of users to mention in the message.
                            Comma-separated list of users to mention in the message.
                          type: string
                        recipient:
                          description: |-
                            (String) Channel, private group, or IM channel (can be an encoded ID or a name) to send messages to.
                            Channel, private group, or IM channel (can be an encoded ID or a name) to send messages to.
                          type: string
                        settingsSecretRef:
                          description: |-
                            (Map of String, Sensitive) Additional custom properties to attach to the notifier. Defaults to map[].
                            Additional custom properties to attach to the notifier. Defaults to `map[]`.
                          properties:
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        text:
                          description: |-
                            (String) Templated content of the message.
                            Templated content of the message.
                          type: string
                        title:
                          description: |-
                            (String) The templated title of the message.
                            Templated title of the message.
                          type: string
                        tokenSecretRef:
                          description: |-
                            (String, Sensitive) The bearer token used to authorize the client.
                            A Slack API token,for sending messages directly without the webhook method.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        urlSecretRef:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            A Slack webhook URL,for sending messages via the webhook method.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        username:
                          description: |-
                            (String) The user name to use when making a call to the Kafka REST Proxy
                            Username for the bot to use.
                          type: string
                      type: object
                    type: array
                  sns:
                    description: |-
                      (Block Set) A contact point that sends notifications to Amazon SNS. Requires Amazon Managed Grafana. (see below for nested schema)
                      A contact point that sends notifications to Amazon SNS. Requires Amazon Managed Grafana.
                    items:
                      properties:
                        accessKeySecretRef:
                          description: |-
                            (String, Sensitive) AWS access key ID used to authenticate with Amazon SNS.
                            AWS access key ID used to authenticate with Amazon SNS.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        assumeRoleArn:
                          description: |-
                            (String) The Amazon Resource Name (ARN) of the role to assume to send notifications to Amazon SNS.
                            The Amazon Resource Name (ARN) of the role to assume to send notifications to Amazon SNS.
                          type: string
                        authProvider:
                          description: |-
                            (String) The authentication provider to use. Valid values are default, arn and keys. Default is default. Defaults to default.
                            The authentication provider to use. Valid values are `default`, `arn` and `keys`. Default is `default`. Defaults to `default`.
                          type: string
                        body:
                          description: (String)
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        externalId:
                          description: |-
                            (String) The external ID to use when assuming the role.
                            The external ID to use when assuming the role.
                          type: string
                        messageFormat:
                          description: |-
                            (String) The format of the message to send. Valid values are text, body and json. Default is text. Defaults to text.
                            The format of the message to send. Valid values are `text`, `body` and `json`. Default is `text`. Defaults to `text`.
                          type: string
                        secretKeySecretRef:
                          description: |-
                            (String, Sensitive) AWS secret access key used to authenticate with Amazon SNS.
                            AWS secret access key used to authenticate with Amazon SNS.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        settingsSecretRef:
                          description: |-
                            (Map of String, Sensitive) Additional custom properties to attach to the notifier. Defaults to map[].
                            Additional custom properties to attach to the notifier. Defaults to `map[]`.
                          properties:
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        subject:
                          description: (String) The templated subject line of the
                            email. Defaults to “.
                          type: string
                        topic:
                          description: |-
                            (String) The name of the Kafka topic to publish to.
                            The Amazon SNS topic to send notifications to.
                          type: string
                      type: object
                    type: array
                  teams:
                    description: |-
                      (Block Set) A contact point that sends notifications to Microsoft Teams. (see below for nested schema)
                      A contact point that sends notifications to Microsoft Teams.
                    items:
                      properties:
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        message:
                          description: |-
                            (String) The templated content of the message.
                            The templated message content to send.
                          type: string
                        sectionTitle:
                          description: |-
                            (String) The templated subtitle for each message section.
                            The templated subtitle for each message section.
                          type: string
                        settingsSecretRef:
                          description: |-
                            (Map of String, Sensitive) Additional custom properties to attach to the notifier. Defaults to map[].
                            Additional custom properties to attach to the notifier. Defaults to `map[]`.
                          properties:
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        title:
                          description: |-
                            (String) The templated title of the message.
                            The templated title of the message.
                          type: string
                        urlSecretRef:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            A Teams webhook URL.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      type: object
                    type: array
                  telegram:
                    description: |-
                      (Block Set) A contact point that sends notifications to Telegram. (see below for nested schema)
                      A contact point that sends notifications to Telegram.
                    items:
                      properties:
                        chatId:
                          description: |-
                            (String) The chat ID to send messages to.
                            The chat ID to send messages to.
                          type: string
                        disableNotifications:
                          description: |-
                            (Boolean) When set users will receive a notification with no sound.
                            When set users will receive a notification with no sound.
                          type: boolean
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        disableWebPagePreview:
                          description: |-
                            (Boolean) When set it disables link previews for links in the message.
                            When set it disables link previews for links in the message.
                          type: boolean
                        message:
                          description: |-
                            (String) The templated content of the message.
                            The templated content of the message.
                          type: string
                        messageThreadId:
                          description: |-
                            (String) The ID of the message thread to send the message to.
                            The ID of the message thread to send the message to.
                          type: string
                        parseMode:
                          description: |-
                            (String) Mode for parsing entities in the message text. Supported: None, Markdown, MarkdownV2, and HTML. HTML is the default.
                            Mode for parsing entities in the message text. Supported: None, Markdown, MarkdownV2, and HTML. HTML is the default.
                          type: string
                        protectContent:
                          description: |-
                            (Boolean) When set it protects the contents of the message from forwarding and saving.
                            When set it protects the contents of the message from forwarding and saving.
                          type: boolean
                        settingsSecretRef:
                          description: |-
                            (Map of String, Sensitive) Additional custom properties to attach to the notifier. Defaults to map[].
                            Additional custom properties to attach to the notifier. Defaults to `map[]`.
                          properties:
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        tokenSecretRef:
                          description: |-
                            (String, Sensitive) The bearer token used to authorize the client.
                            The Telegram bot token.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      type: object
                    type: array
                  threema:
                    description: |-
                      (Block Set) A contact point that sends notifications to Threema. (see below for nested schema)
                      A contact point that sends notifications to Threema.
                    items:
                      properties:
                        apiSecretSecretRef:
                          description: |-
                            (String, Sensitive) The Threema API key.
                            The Threema API key.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        description:
                          description: |-
                            (String) The templated description of the Kafka message.
                            The templated description of the message.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        gatewayId:
                          description: |-
                            (String) The Threema gateway ID.
                            The Threema gateway ID.
                          type: string
                        recipientId:
                          description: |-
                            (String) The ID of the recipient of the message.
                            The ID of the recipient of the message.
                          type: string
                        settingsSecretRef:
                          description: |-
                            (Map of String, Sensitive) Additional custom properties to attach to the notifier. Defaults to map[].
                            Additional custom properties to attach to the notifier. Defaults to `map[]`.
                          properties:
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        title:
                          description: |-
                            (String) The templated title of the message.
                            The templated title of the message.
                          type: string
                      type: object
                    type: array
                  victorops:
                    description: |-
                      (Block Set) A contact point that sends notifications to VictorOps (now known as Splunk OnCall). (see below for nested schema)
                      A contact point that sends notifications to VictorOps (now known as Splunk OnCall).
                    items:
                      properties:
                        description:
                          description: |-
                            (String) The templated description of the Kafka message.
                            Templated description of the message.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        messageType:
                          description: |-
                            either 'link' or 'actionCard'
                            The VictorOps alert state - typically either `CRITICAL` or `RECOVERY`.
                          type: string
                        settingsSecretRef:
                          description: |-
                            (Map of String, Sensitive) Additional custom properties to attach to the notifier. Defaults to map[].
                            Additional custom properties to attach to the notifier. Defaults to `map[]`.
                          properties:
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        title:
                          description: |-
                            (String) The templated title of the message.
                            Templated title to display.
                          type: string
                        url:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            The VictorOps webhook URL.
                          type: string
                      type: object
                    type: array
                  webex:
                    description: |-
                      (Block Set) A contact point that sends notifications to Cisco Webex. (see below for nested schema)
                      A contact point that sends notifications to Cisco Webex.
                    items:
                      properties:
                        apiUrl:
                          description: |-
                            (String) The URL to send webhook requests to.
                            The URL to send webhook requests to.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        message:
                          description: |-
                            (String) The templated content of the message.
                            The templated title of the message to send.
                          type: string
                        roomId:
                          description: |-
                            (String) ID of the Webex Teams room where to send the messages.
                            ID of the Webex Teams room where to send the messages.
                          type: string
                        settingsSecretRef:
                          description: |-
                            (Map of String, Sensitive) Additional custom properties to attach to the notifier. Defaults to map[].
                            Additional custom properties to attach to the notifier. Defaults to `map[]`.
                          properties:
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        tokenSecretRef:
                          description: |-
                            (String, Sensitive) The bearer token used to authorize the client.
                            The bearer token used to authorize the client.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      type: object
                    type: array
                  webhook:
                    description: |-
                      (Block Set) A contact point that sends notifications to an arbitrary webhook, using the Prometheus webhook format defined here: https://prometheus.io/docs/alerting/latest/configuration/#webhook_config (see below for nested schema)
                      A contact point that sends notifications to an arbitrary webhook, using the Prometheus webhook format defined here: https://prometheus.io/docs/alerting/latest/configuration/#webhook_config
                    items:
                      properties:
                        authorizationCredentialsSecretRef:
                          description: |-
                            attaches an auth header with this value. Do not use in conjunction with basic auth parameters.
                            Allows a custom authorization scheme - attaches an auth header with this value. Do not use in conjunction with basic auth parameters.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        authorizationScheme:
                          description: |-
                            attaches an auth header with this name. Do not use in conjunction with basic auth parameters.
                            Allows a custom authorization scheme - attaches an auth header with this name. Do not use in conjunction with basic auth parameters.
                          type: string
                        basicAuthPasswordSecretRef:
                          description: |-
                            (String, Sensitive) The password component of the basic auth credentials to use.
                            The username to use in basic auth headers attached to the request. If omitted, basic auth will not be used.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        basicAuthUser:
                          description: |-
                            (String) The username component of the basic auth credentials to use.
                            The username to use in basic auth headers attached to the request. If omitted, basic auth will not be used.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        httpMethod:
                          description: |-
                            (String) The HTTP method to use in the request. Defaults to POST.
                            The HTTP method to use in the request. Defaults to `POST`.
                          type: string
                        maxAlerts:
                          description: |-
                            (Number) The maximum number of alerts to send in a single request. This can be helpful in limiting the size of the request body. The default is 0, which indicates no limit.
                            The maximum number of alerts to send in a single request. This can be helpful in limiting the size of the request body. The default is 0, which indicates no limit.
                          type: number
                        message:
                          description: |-
                            (String) The templated content of the message.
                            Custom message. You can use template variables.
                          type: string
                        settingsSecretRef:
                          description: |-
                            (Map of String, Sensitive) Additional custom properties to attach to the notifier. Defaults to map[].
                            Additional custom properties to attach to the notifier. Defaults to `map[]`.
                          properties:
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        title:
                          description: |-
                            (String) The templated title of the message.
                            Templated title of the message.
                          type: string
                        url:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            The URL to send webhook requests to.
                          type: string
                      type: object
                    type: array
                  wecom:
                    description: |-
                      (Block Set) A contact point that sends notifications to WeCom. (see below for nested schema)
                      A contact point that sends notifications to WeCom.
                    items:
                      properties:
                        agentId:
                          description: |-
                            (String) Agent ID added to the request payload when using APIAPP.
                            Agent ID added to the request payload when using APIAPP.
                          type: string
                        corpId:
                          description: |-
                            (String) Corp ID used to get token when using APIAPP.
                            Corp ID used to get token when using APIAPP.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        message:
                          description: |-
                            (String) The templated content of the message.
                            The templated content of the message to send.
                          type: string
                        msgType:
                          description: |-
                            (String) The type of them message. Supported: markdown, text. Default: text.
                            The type of them message. Supported: markdown, text. Default: text.
                          type: string
                        secretSecretRef:
                          description: |-
                            (String, Sensitive) The secret key required to obtain access token when using APIAPP. See https://work.weixin.qq.com/wework_admin/frame#apps to create APIAPP.
                            The secret key required to obtain access token when using APIAPP. See https://work.weixin.qq.com/wework_admin/frame#apps to create APIAPP.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        settingsSecretRef:
                          description: |-
                            (Map of String, Sensitive) Additional custom properties to attach to the notifier. Defaults to map[].
                            Additional custom properties to attach to the notifier. Defaults to `map[]`.
                          properties:
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        title:
                          description: |-
                            (String) The templated title of the message.
                            The templated title of the message to send.
                          type: string
                        toUser:
                          description: |-
                            (String) The ID of user that should receive the message. Multiple entries should be separated by '|'. Default: @all.
                            The ID of user that should receive the message. Multiple entries should be separated by '|'. Default: @all.
                          type: string
                        urlSecretRef:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            The WeCom webhook URL. Required if using GroupRobot.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  alertmanager:
                    description: |-
                      (Block Set) A contact point that sends notifications to other Alertmanager instances. (see below for nested schema)
                      A contact point that sends notifications to other Alertmanager instances.
                    items:
                      properties:
                        basicAuthPasswordSecretRef:
                          description: |-
                            (String, Sensitive) The password component of the basic auth credentials to use.
                            The password component of the basic auth credentials to use.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        basicAuthUser:
                          description: |-
                            (String) The username component of the basic auth credentials to use.
                            The username component of the basic auth credentials to use.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        settingsSecretRef:
                          additionalProperties:
                            type: string
                          type: object
                        url:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            The URL of the Alertmanager instance.
                          type: string
                      type: object
                    type: array
                  dingding:
                    description: |-
                      (Block Set) A contact point that sends notifications to DingDing. (see below for nested schema)
                      A contact point that sends notifications to DingDing.
                    items:
                      properties:
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        message:
                          description: |-
                            (String) The templated content of the message.
                            The templated content of the message.
                          type: string
                        messageType:
                          description: |-
                            either 'link' or 'actionCard'
                            The format of message to send - either 'link' or 'actionCard'
                          type: string
                        settingsSecretRef:
                          additionalProperties:
                            type: string
                          type: object
                        title:
                          description: |-
                            (String) The templated title of the message.
                            The templated title of the message.
                          type: string
                        url:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            The DingDing webhook URL.
                          type: string
                      type: object
                    type: array
                  disableProvenance:
                    description: Defaults to false. Defaults to `false`.
                    type: boolean
                  discord:
                    description: |-
                      (Block Set) A contact point that sends notifications as Discord messages (see below for nested schema)
                      A contact point that sends notifications as Discord messages
                    items:
                      properties:
                        avatarUrl:
                          description: |-
                            (String) The URL of a custom avatar image to use. Defaults to “.
                            The URL of a custom avatar image to use. Defaults to “.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        message:
                          description: |-
                            (String) The templated content of the message.
                            The templated content of the message. Defaults to “.
                          type: string
                        settingsSecretRef:
                          additionalProperties:
                            type: string
                          type: object
                        title:
                          description: |-
                            (String) The templated title of the message.
                            The templated content of the title.
                          type: string
                        urlSecretRef:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            The discord webhook URL.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        useDiscordUsername:
                          description: |-
                            (Boolean) Whether to use the bot account's plain username instead of "Grafana." Defaults to false.
                            Whether to use the bot account's plain username instead of "Grafana." Defaults to `false`.
                          type: boolean
                      required:
                      - urlSecretRef
                      type: object
                    type: array
                  email:
                    description: |-
                      (Block Set) A contact point that sends notifications to an email address. (see below for nested schema)
                      A contact point that sends notifications to an email address.
                    items:
                      properties:
                        addresses:
                          description: |-
                            (List of String) The addresses to send emails to.
                            The addresses to send emails to.
                          items:
                            type: string
                          type: array
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        message:
                          description: |-
                            (String) The templated content of the message.
                            The templated content of the email. Defaults to “.
                          type: string
                        settingsSecretRef:
                          additionalProperties:
                            type: string
                          type: object
                        singleEmail:
                          description: |-
                            (Boolean) Whether to send a single email CC'ing all addresses, rather than a separate email to each address. Defaults to false.
                            Whether to send a single email CC'ing all addresses, rather than a separate email to each address. Defaults to `false`.
                          type: boolean
                        subject:
                          description: |-
                            (String) The templated subject line of the email. Defaults to “.
                            The templated subject line of the email. Defaults to “.
                          type: string
                      type: object
                    type: array
                  googlechat:
                    description: |-
                      (Block Set) A contact point that sends notifications to Google Chat. (see below for nested schema)
                      A contact point that sends notifications to Google Chat.
                    items:
                      properties:
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        message:
                          description: |-
                            (String) The templated content of the message.
                            The templated content of the message.
                          type: string
                        settingsSecretRef:
                          additionalProperties:
                            type: string
                          type: object
                        title:
                          description: |-
                            (String) The templated title of the message.
                            The templated content of the title.
                          type: string
                        urlSecretRef:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            The Google Chat webhook URL.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      required:
                      - urlSecretRef
                      type: object
                    type: array
                  kafka:
                    description: |-
                      (Block Set) A contact point that publishes notifications to Apache Kafka topics. (see below for nested schema)
                      A contact point that publishes notifications to Apache Kafka topics.
                    items:
                      properties:
                        apiVersion:
                          description: |-
                            (String) The API version to use when contacting the Kafka REST Server. Supported: v2 (default) and v3. Defaults to v2.
                            The API version to use when contacting the Kafka REST Server. Supported: v2 (default) and v3. Defaults to `v2`.
                          type: string
                        clusterId:
                          description: |-
                            (String) The Id of cluster to use when contacting the Kafka REST Server. Required api_version to be 'v3'
                            The Id of cluster to use when contacting the Kafka REST Server. Required api_version to be 'v3'
                          type: string
                        description:
                          description: |-
                            (String) The templated description of the Kafka message.
                            The templated description of the Kafka message.
                          type: string
                        details:
                          description: |-
                            (String) The templated details to include with the message.
                            The templated details to include with the message.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        passwordSecretRef:
                          description: |-
                            (String, Sensitive) The password to use when making a call to the Kafka REST Proxy
                            The password to use when making a call to the Kafka REST Proxy
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        restProxyUrlSecretRef:
                          description: |-
                            (String, Sensitive) The URL of the Kafka REST proxy to send requests to.
                            The URL of the Kafka REST proxy to send requests to.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        settingsSecretRef:
                          additionalProperties:
                            type: string
                          type: object
                        topic:
                          description: |-
                            (String) The name of the Kafka topic to publish to.
                            The name of the Kafka topic to publish to.
                          type: string
                        username:
                          description: |-
                            (String) The user name to use when making a call to the Kafka REST Proxy
                            The user name to use when making a call to the Kafka REST Proxy
                          type: string
                      required:
                      - restProxyUrlSecretRef
                      type: object
                    type: array
                  line:
                    description: |-
                      (Block Set) A contact point that sends notifications to LINE.me. (see below for nested schema)
                      A contact point that sends notifications to LINE.me.
                    items:
                      properties:
                        description:
                          description: |-
                            (String) The templated description of the Kafka message.
                            The templated description of the message.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        settingsSecretRef:
                          additionalProperties:
                            type: string
                          type: object
                        title:
                          description: |-
                            (String) The templated title of the message.
                            The templated title of the message.
                          type: string
                        tokenSecretRef:
                          description: |-
                            (String, Sensitive) The bearer token used to authorize the client.
                            The bearer token used to authorize the client.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      required:
                      - tokenSecretRef
                      type: object
                    type: array
                  name:
                    description: |-
                      (String) The name of the contact point.
                      The name of the contact point.
                    type: string
                  oncall:
                    description: |-
                      Call. (see below for nested schema)
                      A contact point that sends notifications to Grafana On-Call.
                    items:
                      properties:
                        authorizationCredentialsSecretRef:
                          description: |-
                            attaches an auth header with this value. Do not use in conjunction with basic auth parameters.
                            Allows a custom authorization scheme - attaches an auth header with this value. Do not use in conjunction with basic auth parameters.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        authorizationScheme:
                          description: |-
                            attaches an auth header with this name. Do not use in conjunction with basic auth parameters.
                            Allows a custom authorization scheme - attaches an auth header with this name. Do not use in conjunction with basic auth parameters.
                          type: string
                        basicAuthPasswordSecretRef:
                          description: |-
                            (String, Sensitive) The password component of the basic auth credentials to use.
                            The username to use in basic auth headers attached to the request. If omitted, basic auth will not be used.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        basicAuthUser:
                          description: |-
                            (String) The username component of the basic auth credentials to use.
                            The username to use in basic auth headers attached to the request. If omitted, basic auth will not be used.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        httpMethod:
                          description: |-
                            (String) The HTTP method to use in the request. Defaults to POST.
                            The HTTP method to use in the request. Defaults to `POST`.
                          type: string
                        maxAlerts:
                          description: |-
                            (Number) The maximum number of alerts to send in a single request. This can be helpful in limiting the size of the request body. The default is 0, which indicates no limit.
                            The maximum number of alerts to send in a single request. This can be helpful in limiting the size of the request body. The default is 0, which indicates no limit.
                          type: number
                        message:
                          description: |-
                            (String) The templated content of the message.
                            Custom message. You can use template variables.
                          type: string
                        settingsSecretRef:
                          additionalProperties:
                            type: string
                          type: object
                        title:
                          description: |-
                            (String) The templated title of the message.
                            Templated title of the message.
                          type: string
                        url:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            The URL to send webhook requests to.
                          type: string
                      type: object
                    type: array
                  opsgenie:
                    description: |-
                      (Block Set) A contact point that sends notifications to OpsGenie. (see below for nested schema)
                      A contact point that sends notifications to OpsGenie.
                    items:
                      properties:
                        apiKeySecretRef:
                          description: |-
                            (String, Sensitive) The OpsGenie API key to use.
                            The OpsGenie API key to use.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        autoClose:
                          description: |-
                            close alerts in OpsGenie when they resolve in the Alertmanager.
                            Whether to auto-close alerts in OpsGenie when they resolve in the Alertmanager.
                          type: boolean
                        description:
                          description: |-
                            (String) The templated description of the Kafka message.
                            A templated high-level description to use for the alert.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        message:
                          description: |-
                            (String) The templated content of the message.
                            The templated content of the message.
                          type: string
                        overridePriority:
                          description: |-
                            (Boolean) Whether to allow the alert priority to be configured via the value of the og_priority annotation on the alert.
                            Whether to allow the alert priority to be configured via the value of the `og_priority` annotation on the alert.
                          type: boolean
                        responders:
                          description: |-
                            (Block List) Teams, users, escalations and schedules that the alert will be routed to send notifications. If the API Key belongs to a team integration, this field will be overwritten with the owner team. This feature is available from Grafana 10.3+. (see below for nested schema)
                            Teams, users, escalations and schedules that the alert will be routed to send notifications. If the API Key belongs to a team integration, this field will be overwritten with the owner team. This feature is available from Grafana 10.3+.
                          items:
                            properties:
                              id:
                                description: |-
                                  (String) The ID of this resource.
                                  ID of the responder. Must be specified if name and username are empty.
                                type: string
                              name:
                                description: |-
                                  (String) The name of the contact point.
                                  Name of the responder. Must be specified if username and id are empty.
                                type: string
                              type:
                                description: |-
                                  (String) Type of the responder. Supported: team, teams, user, escalation, schedule or a template that is expanded to one of these values.
                                  Type of the responder. Supported: team, teams, user, escalation, schedule or a template that is expanded to one of these values.
                                type: string
                              username:
                                description: |-
                                  (String) The user name to use when making a call to the Kafka REST Proxy
                                  User name of the responder. Must be specified if name and id are empty.
                                type: string
                            type: object
                          type: array
                        sendTagsAs:
                          description: |-
                            (String) Whether to send annotations to OpsGenie as Tags, Details, or both. Supported values are tags, details, both, or empty to use the default behavior of Tags.
                            Whether to send annotations to OpsGenie as Tags, Details, or both. Supported values are `tags`, `details`, `both`, or empty to use the default behavior of Tags.
                          type: string
                        settingsSecretRef:
                          additionalProperties:
                            type: string
                          type: object
                        url:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            Allows customization of the OpsGenie API URL.
                          type: string
                      required:
                      - apiKeySecretRef
                      type: object
                    type: array
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  pagerduty:
                    description: |-
                      (Block Set) A contact point that sends notifications to PagerDuty. (see below for nested schema)
                      A contact point that sends notifications to PagerDuty.
                    items:
                      properties:
                        class:
                          description: |-
                            (String) The class or type of event, for example ping failure.
                            The class or type of event, for example `ping failure`.
                          type: string
                        client:
                          description: |-
                            (String) The name of the monitoring client that is triggering this event.
                            The name of the monitoring client that is triggering this event.
                          type: string
                        clientUrl:
                          description: |-
                            (String) The URL of the monitoring client that is triggering this event.
                            The URL of the monitoring client that is triggering this event.
                          type: string
                        component:
                          description: |-
                            (String) The component being affected by the event.
                            The component being affected by the event.
                          type: string
                        details:
                          additionalProperties:
                            type: string
                          description: |-
                            (String) The templated details to include with the message.
                            A set of arbitrary key/value pairs that provide further detail about the incident.
                          type: object
                          x-kubernetes-map-type: granular
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        group:
                          description: |-
                            (String) The group to which the provided component belongs to.
                            The group to which the provided component belongs to.
                          type: string
                        integrationKeySecretRef:
                          description: |-
                            (String, Sensitive) The PagerDuty API key.
                            The PagerDuty API key.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        settingsSecretRef:
                          additionalProperties:
                            type: string
                          type: object
                        severity:
                          description: |-
                            (String) The PagerDuty event severity level. Default is critical.
                            The PagerDuty event severity level. Default is `critical`.
                          type: string
                        source:
                          description: |-
                            (String) The unique location of the affected system.
                            The unique location of the affected system.
                          type: string
                        summary:
                          description: |-
                            (String) The templated summary message of the event.
                            The templated summary message of the event.
                          type: string
                        url:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            The URL to send API requests to
                          type: string
                      required:
                      - integrationKeySecretRef
                      type: object
                    type: array
                  pushover:
                    description: |-
                      (Block Set) A contact point that sends notifications to Pushover. (see below for nested schema)
                      A contact point that sends notifications to Pushover.
                    items:
                      properties:
                        apiTokenSecretRef:
                          description: |-
                            (String, Sensitive) The Pushover API token.
                            The Pushover API token.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        device:
                          description: |-
                            separated list of devices to which the event is associated.
                            Comma-separated list of devices to which the event is associated.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        expire:
                          description: |-
                            (Number) How many seconds for which the notification will continue to be retried by Pushover.
                            How many seconds for which the notification will continue to be retried by Pushover.
                          type: number
                        message:
                          description: |-
                            (String) The templated content of the message.
                            The templated notification message content.
                          type: string
                        okPriority:
                          description: |-
                            (Number) The priority level of the resolved event.
                            The priority level of the resolved event.
                          type: number
                        okSound:
                          description: |-
                            (String) The sound associated with the resolved notification.
                            The sound associated with the resolved notification.
                          type: string
                        priority:
                          description: |-
                            (Number) The priority level of the event.
                            The priority level of the event.
                          type: number
                        retry:
                          description: |-
                            (Number) How often, in seconds, the Pushover servers will send the same notification to the user.
                            How often, in seconds, the Pushover servers will send the same notification to the user.
                          type: number
                        settingsSecretRef:
                          additionalProperties:
                            type: string
                          type: object
                        sound:
                          description: |-
                            (String) The sound associated with the notification.
                            The sound associated with the notification.
                          type: string
                        title:
                          description: |-
                            (String) The templated title of the message.
                            The templated title of the message.
                          type: string
                        uploadImage:
                          description: |-
                            (Boolean) Whether to send images in the notification or not. Default is true. Requires Grafana to be configured to send images in notifications.
                            Whether to send images in the notification or not. Default is true. Requires Grafana to be configured to send images in notifications.
                          type: boolean
                        userKeySecretRef:
                          description: |-
                            (String, Sensitive) The Pushover user key.
                            The Pushover user key.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      required:
                      - apiTokenSecretRef
                      - userKeySecretRef
                      type: object
                    type: array
                  sensugo:
                    description: |-
                      (Block Set) A contact point that sends notifications to SensuGo. (see below for nested schema)
                      A contact point that sends notifications to SensuGo.
                    items:
                      properties:
                        apiKeySecretRef:
                          description: |-
                            (String, Sensitive) The OpsGenie API key to use.
                            The SensuGo API key.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        check:
                          description: |-
                            (String) The SensuGo check to which the event should be routed.
                            The SensuGo check to which the event should be routed.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        entity:
                          description: |-
                            (String) The entity being monitored.
                            The entity being monitored.
                          type: string
                        handler:
                          description: |-
                            (String) A custom handler to execute in addition to the check.
                            A custom handler to execute in addition to the check.
                          type: string
                        message:
                          description: |-
                            (String) The templated content of the message.
                            Templated message content describing the alert.
                          type: string
                        namespace:
                          description: |-
                            (String) The namespace in which the check resides.
                            The namespace in which the check resides.
                          type: string
                        settingsSecretRef:
                          additionalProperties:
                            type: string
                          type: object
                        url:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            The SensuGo URL to send requests to.
                          type: string
                      required:
                      - apiKeySecretRef
                      type: object
                    type: array
                  slack:
                    description: |-
                      (Block Set) A contact point that sends notifications to Slack. (see below for nested schema)
                      A contact point that sends notifications to Slack.
                    items:
                      properties:
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        endpointUrl:
                          description: |-
                            (String) Use this to override the Slack API endpoint URL to send requests to.
                            Use this to override the Slack API endpoint URL to send requests to.
                          type: string
                        iconEmoji:
                          description: |-
                            (String) The name of a Slack workspace emoji to use as the bot icon.
                            The name of a Slack workspace emoji to use as the bot icon.
                          type: string
                        iconUrl:
                          description: |-
                            (String) A URL of an image to use as the bot icon.
                            A URL of an image to use as the bot icon.
                          type: string
                        mentionChannel:
                          description: |-
                            (String) Describes how to ping the slack channel that messages are being sent to. Options are here for an @here ping, channel for @channel, or empty for no ping.
                            Describes how to ping the slack channel that messages are being sent to. Options are `here` for an @here ping, `channel` for @channel, or empty for no ping.
                          type: string
                        mentionGroups:
                          description: |-
                            separated list of groups to mention in the message.
                            Comma-separated list of groups to mention in the message.
                          type: string
                        mentionUsers:
                          description: |-
                            separated list of users to mention in the message.
                            Comma-separated list of users to mention in the message.
                          type: string
                        recipient:
                          description: |-
                            (String) Channel, private group, or IM channel (can be an encoded ID or a name) to send messages to.
                            Channel, private group, or IM channel (can be an encoded ID or a name) to send messages to.
                          type: string
                        settingsSecretRef:
                          additionalProperties:
                            type: string
                          type: object
                        text:
                          description: |-
                            (String) Templated content of the message.
                            Templated content of the message.
                          type: string
                        title:
                          description: |-
                            (String) The templated title of the message.
                            Templated title of the message.
                          type: string
                        tokenSecretRef:
                          description: |-
                            (String, Sensitive) The bearer token used to authorize the client.
                            A Slack API token,for sending messages directly without the webhook method.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        urlSecretRef:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            A Slack webhook URL,for sending messages via the webhook method.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        username:
                          description: |-
                            (String) The user name to use when making a call to the Kafka REST Proxy
                            Username for the bot to use.
                          type: string
                      type: object
                    type: array
                  sns:
                    description: |-
                      (Block Set) A contact point that sends notifications to Amazon SNS. Requires Amazon Managed Grafana. (see below for nested schema)
                      A contact point that sends notifications to Amazon SNS. Requires Amazon Managed Grafana.
                    items:
                      properties:
                        accessKeySecretRef:
                          description: |-
                            (String, Sensitive) AWS access key ID used to authenticate with Amazon SNS.
                            AWS access key ID used to authenticate with Amazon SNS.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        assumeRoleArn:
                          description: |-
                            (String) The Amazon Resource Name (ARN) of the role to assume to send notifications to Amazon SNS.
                            The Amazon Resource Name (ARN) of the role to assume to send notifications to Amazon SNS.
                          type: string
                        authProvider:
                          description: |-
                            (String) The authentication provider to use. Valid values are default, arn and keys. Default is default. Defaults to default.
                            The authentication provider to use. Valid values are `default`, `arn` and `keys`. Default is `default`. Defaults to `default`.
                          type: string
                        body:
                          description: (String)
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        externalId:
                          description: |-
                            (String) The external ID to use when assuming the role.
                            The external ID to use when assuming the role.
                          type: string
                        messageFormat:
                          description: |-
                            (String) The format of the message to send. Valid values are text, body and json. Default is text. Defaults to text.
                            The format of the message to send. Valid values are `text`, `body` and `json`. Default is `text`. Defaults to `text`.
                          type: string
                        secretKeySecretRef:
                          description: |-
                            (String, Sensitive) AWS secret access key used to authenticate with Amazon SNS.
                            AWS secret access key used to authenticate with Amazon SNS.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        settingsSecretRef:
                          additionalProperties:
                            type: string
                          type: object
                        subject:
                          description: (String) The templated subject line of the
                            email. Defaults to “.
                          type: string
                        topic:
                          description: |-
                            (String) The name of the Kafka topic to publish to.
                            The Amazon SNS topic to send notifications to.
                          type: string
                      type: object
                    type: array
                  teams:
                    description: |-
                      (Block Set) A contact point that sends notifications to Microsoft Teams. (see below for nested schema)
                      A contact point that sends notifications to Microsoft Teams.
                    items:
                      properties:
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        message:
                          description: |-
                            (String) The templated content of the message.
                            The templated message content to send.
                          type: string
                        sectionTitle:
                          description: |-
                            (String) The templated subtitle for each message section.
                            The templated subtitle for each message section.
                          type: string
                        settingsSecretRef:
                          additionalProperties:
                            type: string
                          type: object
                        title:
                          description: |-
                            (String) The templated title of the message.
                            The templated title of the message.
                          type: string
                        urlSecretRef:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            A Teams webhook URL.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      required:
                      - urlSecretRef
                      type: object
                    type: array
                  telegram:
                    description: |-
                      (Block Set) A contact point that sends notifications to Telegram. (see below for nested schema)
                      A contact point that sends notifications to Telegram.
                    items:
                      properties:
                        chatId:
                          description: |-
                            (String) The chat ID to send messages to.
                            The chat ID to send messages to.
                          type: string
                        disableNotifications:
                          description: |-
                            (Boolean) When set users will receive a notification with no sound.
                            When set users will receive a notification with no sound.
                          type: boolean
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        disableWebPagePreview:
                          description: |-
                            (Boolean) When set it disables link previews for links in the message.
                            When set it disables link previews for links in the message.
                          type: boolean
                        message:
                          description: |-
                            (String) The templated content of the message.
                            The templated content of the message.
                          type: string
                        messageThreadId:
                          description: |-
                            (String) The ID of the message thread to send the message to.
                            The ID of the message thread to send the message to.
                          type: string
                        parseMode:
                          description: |-
                            (String) Mode for parsing entities in the message text. Supported: None, Markdown, MarkdownV2, and HTML. HTML is the default.
                            Mode for parsing entities in the message text. Supported: None, Markdown, MarkdownV2, and HTML. HTML is the default.
                          type: string
                        protectContent:
                          description: |-
                            (Boolean) When set it protects the contents of the message from forwarding and saving.
                            When set it protects the contents of the message from forwarding and saving.
                          type: boolean
                        settingsSecretRef:
                          additionalProperties:
                            type: string
                          type: object
                        tokenSecretRef:
                          description: |-
                            (String, Sensitive) The bearer token used to authorize the client.
                            The Telegram bot token.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      required:
                      - tokenSecretRef
                      type: object
                    type: array
                  threema:
                    description: |-
                      (Block Set) A contact point that sends notifications to Threema. (see below for nested schema)
                      A contact point that sends notifications to Threema.
                    items:
                      properties:
                        apiSecretSecretRef:
                          description: |-
                            (String, Sensitive) The Threema API key.
                            The Threema API key.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        description:
                          description: |-
                            (String) The templated description of the Kafka message.
                            The templated description of the message.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        gatewayId:
                          description: |-
                            (String) The Threema gateway ID.
                            The Threema gateway ID.
                          type: string
                        recipientId:
                          description: |-
                            (String) The ID of the recipient of the message.
                            The ID of the recipient of the message.
                          type: string
                        settingsSecretRef:
                          additionalProperties:
                            type: string
                          type: object
                        title:
                          description: |-
                            (String) The templated title of the message.
                            The templated title of the message.
                          type: string
                      required:
                      - apiSecretSecretRef
                      type: object
                    type: array
                  victorops:
                    description: |-
                      (Block Set) A contact point that sends notifications to VictorOps (now known as Splunk OnCall). (see below for nested schema)
                      A contact point that sends notifications to VictorOps (now known as Splunk OnCall).
                    items:
                      properties:
                        description:
                          description: |-
                            (String) The templated description of the Kafka message.
                            Templated description of the message.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        messageType:
                          description: |-
                            either 'link' or 'actionCard'
                            The VictorOps alert state - typically either `CRITICAL` or `RECOVERY`.
                          type: string
                        settingsSecretRef:
                          additionalProperties:
                            type: string
                          type: object
                        title:
                          description: |-
                            (String) The templated title of the message.
                            Templated title to display.
                          type: string
                        url:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            The VictorOps webhook URL.
                          type: string
                      type: object
                    type: array
                  webex:
                    description: |-
                      (Block Set) A contact point that sends notifications to Cisco Webex. (see below for nested schema)
                      A contact point that sends notifications to Cisco Webex.
                    items:
                      properties:
                        apiUrl:
                          description: |-
                            (String) The URL to send webhook requests to.
                            The URL to send webhook requests to.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        message:
                          description: |-
                            (String) The templated content of the message.
                            The templated title of the message to send.
                          type: string
                        roomId:
                          description: |-
                            (String) ID of the Webex Teams room where to send the messages.
                            ID of the Webex Teams room where to send the messages.
                          type: string
                        settingsSecretRef:
                          additionalProperties:
                            type: string
                          type: object
                        tokenSecretRef:
                          description: |-
                            (String, Sensitive) The bearer token used to authorize the client.
                            The bearer token used to authorize the client.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      type: object
                    type: array
                  webhook:
                    description: |-
                      (Block Set) A contact point that sends notifications to an arbitrary webhook, using the Prometheus webhook format defined here: https://prometheus.io/docs/alerting/latest/configuration/#webhook_config (see below for nested schema)
                      A contact point that sends notifications to an arbitrary webhook, using the Prometheus webhook format defined here: https://prometheus.io/docs/alerting/latest/configuration/#webhook_config
                    items:
                      properties:
                        authorizationCredentialsSecretRef:
                          description: |-
                            attaches an auth header with this value. Do not use in conjunction with basic auth parameters.
                            Allows a custom authorization scheme - attaches an auth header with this value. Do not use in conjunction with basic auth parameters.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        authorizationScheme:
                          description: |-
                            attaches an auth header with this name. Do not use in conjunction with basic auth parameters.
                            Allows a custom authorization scheme - attaches an auth header with this name. Do not use in conjunction with basic auth parameters.
                          type: string
                        basicAuthPasswordSecretRef:
                          description: |-
                            (String, Sensitive) The password component of the basic auth credentials to use.
                            The username to use in basic auth headers attached to the request. If omitted, basic auth will not be used.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        basicAuthUser:
                          description: |-
                            (String) The username component of the basic auth credentials to use.
                            The username to use in basic auth headers attached to the request. If omitted, basic auth will not be used.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        httpMethod:
                          description: |-
                            (String) The HTTP method to use in the request. Defaults to POST.
                            The HTTP method to use in the request. Defaults to `POST`.
                          type: string
                        maxAlerts:
                          description: |-
                            (Number) The maximum number of alerts to send in a single request. This can be helpful in limiting the size of the request body. The default is 0, which indicates no limit.
                            The maximum number of alerts to send in a single request. This can be helpful in limiting the size of the request body. The default is 0, which indicates no limit.
                          type: number
                        message:
                          description: |-
                            (String) The templated content of the message.
                            Custom message. You can use template variables.
                          type: string
                        settingsSecretRef:
                          additionalProperties:
                            type: string
                          type: object
                        title:
                          description: |-
                            (String) The templated title of the message.
                            Templated title of the message.
                          type: string
                        url:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            The URL to send webhook requests to.
                          type: string
                      type: object
                    type: array
                  wecom:
                    description: |-
                      (Block Set) A contact point that sends notifications to WeCom. (see below for nested schema)
                      A contact point that sends notifications to WeCom.
                    items:
                      properties:
                        agentId:
                          description: |-
                            (String) Agent ID added to the request payload when using APIAPP.
                            Agent ID added to the request payload when using APIAPP.
                          type: string
                        corpId:
                          description: |-
                            (String) Corp ID used to get token when using APIAPP.
                            Corp ID used to get token when using APIAPP.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        message:
                          description: |-
                            (String) The templated content of the message.
                            The templated content of the message to send.
                          type: string
                        msgType:
                          description: |-
                            (String) The type of them message. Supported: markdown, text. Default: text.
                            The type of them message. Supported: markdown, text. Default: text.
                          type: string
                        secretSecretRef:
                          description: |-
                            (String, Sensitive) The secret key required to obtain access token when using APIAPP. See https://work.weixin.qq.com/wework_admin/frame#apps to create APIAPP.
                            The secret key required to obtain access token when using APIAPP. See https://work.weixin.qq.com/wework_admin/frame#apps to create APIAPP.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        settingsSecretRef:
                          additionalProperties:
                            type: string
                          type: object
                        title:
                          description: |-
                            (String) The templated title of the message.
                            The templated title of the message to send.
                          type: string
                        toUser:
                          description: |-
                            (String) The ID of user that should receive the message. Multiple entries should be separated by '|'. Default: @all.
                            The ID of user that should receive the message. Multiple entries should be separated by '|'. Default: @all.
                          type: string
                        urlSecretRef:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            The WeCom webhook URL. Required if using GroupRobot.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: ContactPointStatus defines the observed state of ContactPoint.
            properties:
              atProvider:
                properties:
                  alertmanager:
                    description: |-
                      (Block Set) A contact point that sends notifications to other Alertmanager instances. (see below for nested schema)
                      A contact point that sends notifications to other Alertmanager instances.
                    items:
                      properties:
                        basicAuthUser:
                          description: |-
                            (String) The username component of the basic auth credentials to use.
                            The username component of the basic auth credentials to use.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        uid:
                          description: |-
                            (String) The UID of the contact point.
                            The UID of the contact point.
                          type: string
                        url:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            The URL of the Alertmanager instance.
                          type: string
                      type: object
                    type: array
                  dingding:
                    description: |-
                      (Block Set) A contact point that sends notifications to DingDing. (see below for nested schema)
                      A contact point that sends notifications to DingDing.
                    items:
                      properties:
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        message:
                          description: |-
                            (String) The templated content of the message.
                            The templated content of the message.
                          type: string
                        messageType:
                          description: |-
                            either 'link' or 'actionCard'
                            The format of message to send - either 'link' or 'actionCard'
                          type: string
                        title:
                          description: |-
                            (String) The templated title of the message.
                            The templated title of the message.
                          type: string
                        uid:
                          description: |-
                            (String) The UID of the contact point.
                            The UID of the contact point.
                          type: string
                        url:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            The DingDing webhook URL.
                          type: string
                      type: object
                    type: array
                  disableProvenance:
                    description: Defaults to false. Defaults to `false`.
                    type: boolean
                  discord:
                    description: |-
                      (Block Set) A contact point that sends notifications as Discord messages (see below for nested schema)
                      A contact point that sends notifications as Discord messages
                    items:
                      properties:
                        avatarUrl:
                          description: |-
                            (String) The URL of a custom avatar image to use. Defaults to “.
                            The URL of a custom avatar image to use. Defaults to “.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        message:
                          description: |-
                            (String) The templated content of the message.
                            The templated content of the message. Defaults to “.
                          type: string
                        title:
                          description: |-
                            (String) The templated title of the message.
                            The templated content of the title.
                          type: string
                        uid:
                          description: |-
                            (String) The UID of the contact point.
                            The UID of the contact point.
                          type: string
                        useDiscordUsername:
                          description: |-
                            (Boolean) Whether to use the bot account's plain username instead of "Grafana." Defaults to false.
                            Whether to use the bot account's plain username instead of "Grafana." Defaults to `false`.
                          type: boolean
                      type: object
                    type: array
                  email:
                    description: |-
                      (Block Set) A contact point that sends notifications to an email address. (see below for nested schema)
                      A contact point that sends notifications to an email address.
                    items:
                      properties:
                        addresses:
                          description: |-
                            (List of String) The addresses to send emails to.
                            The addresses to send emails to.
                          items:
                            type: string
                          type: array
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        message:
                          description: |-
                            (String) The templated content of the message.
                            The templated content of the email. Defaults to “.
                          type: string
                        singleEmail:
                          description: |-
                            (Boolean) Whether to send a single email CC'ing all addresses, rather than a separate email to each address. Defaults to false.
                            Whether to send a single email CC'ing all addresses, rather than a separate email to each address. Defaults to `false`.
                          type: boolean
                        subject:
                          description: |-
                            (String) The templated subject line of the email. Defaults to “.
                            The templated subject line of the email. Defaults to “.
                          type: string
                        uid:
                          description: |-
                            (String) The UID of the contact point.
                            The UID of the contact point.
                          type: string
                      type: object
                    type: array
                  googlechat:
                    description: |-
                      (Block Set) A contact point that sends notifications to Google Chat. (see below for nested schema)
                      A contact point that sends notifications to Google Chat.
                    items:
                      properties:
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        message:
                          description: |-
                            (String) The templated content of the message.
                            The templated content of the message.
                          type: string
                        title:
                          description: |-
                            (String) The templated title of the message.
                            The templated content of the title.
                          type: string
                        uid:
                          description: |-
                            (String) The UID of the contact point.
                            The UID of the contact point.
                          type: string
                      type: object
                    type: array
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  kafka:
                    description: |-
                      (Block Set) A contact point that publishes notifications to Apache Kafka topics. (see below for nested schema)
                      A contact point that publishes notifications to Apache Kafka topics.
                    items:
                      properties:
                        apiVersion:
                          description: |-
                            (String) The API version to use when contacting the Kafka REST Server. Supported: v2 (default) and v3. Defaults to v2.
                            The API version to use when contacting the Kafka REST Server. Supported: v2 (default) and v3. Defaults to `v2`.
                          type: string
                        clusterId:
                          description: |-
                            (String) The Id of cluster to use when contacting the Kafka REST Server. Required api_version to be 'v3'
                            The Id of cluster to use when contacting the Kafka REST Server. Required api_version to be 'v3'
                          type: string
                        description:
                          description: |-
                            (String) The templated description of the Kafka message.
                            The templated description of the Kafka message.
                          type: string
                        details:
                          description: |-
                            (String) The templated details to include with the message.
                            The templated details to include with the message.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        topic:
                          description: |-
                            (String) The name of the Kafka topic to publish to.
                            The name of the Kafka topic to publish to.
                          type: string
                        uid:
                          description: |-
                            (String) The UID of the contact point.
                            The UID of the contact point.
                          type: string
                        username:
                          description: |-
                            (String) The user name to use when making a call to the Kafka REST Proxy
                            The user name to use when making a call to the Kafka REST Proxy
                          type: string
                      type: object
                    type: array
                  line:
                    description: |-
                      (Block Set) A contact point that sends notifications to LINE.me. (see below for nested schema)
                      A contact point that sends notifications to LINE.me.
                    items:
                      properties:
                        description:
                          description: |-
                            (String) The templated description of the Kafka message.
                            The templated description of the message.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        title:
                          description: |-
                            (String) The templated title of the message.
                            The templated title of the message.
                          type: string
                        uid:
                          description: |-
                            (String) The UID of the contact point.
                            The UID of the contact point.
                          type: string
                      type: object
                    type: array
                  name:
                    description: |-
                      (String) The name of the contact point.
                      The name of the contact point.
                    type: string
                  oncall:
                    description: |-
                      Call. (see below for nested schema)
                      A contact point that sends notifications to Grafana On-Call.
                    items:
                      properties:
                        authorizationScheme:
                          description: |-
                            attaches an auth header with this name. Do not use in conjunction with basic auth parameters.
                            Allows a custom authorization scheme - attaches an auth header with this name. Do not use in conjunction with basic auth parameters.
                          type: string
                        basicAuthUser:
                          description: |-
                            (String) The username component of the basic auth credentials to use.
                            The username to use in basic auth headers attached to the request. If omitted, basic auth will not be used.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        httpMethod:
                          description: |-
                            (String) The HTTP method to use in the request. Defaults to POST.
                            The HTTP method to use in the request. Defaults to `POST`.
                          type: string
                        maxAlerts:
                          description: |-
                            (Number) The maximum number of alerts to send in a single request. This can be helpful in limiting the size of the request body. The default is 0, which indicates no limit.
                            The maximum number of alerts to send in a single request. This can be helpful in limiting the size of the request body. The default is 0, which indicates no limit.
                          type: number
                        message:
                          description: |-
                            (String) The templated content of the message.
                            Custom message. You can use template variables.
                          type: string
                        title:
                          description: |-
                            (String) The templated title of the message.
                            Templated title of the message.
                          type: string
                        uid:
                          description: |-
                            (String) The UID of the contact point.
                            The UID of the contact point.
                          type: string
                        url:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            The URL to send webhook requests to.
                          type: string
                      type: object
                    type: array
                  opsgenie:
                    description: |-
                      (Block Set) A contact point that sends notifications to OpsGenie. (see below for nested schema)
                      A contact point that sends notifications to OpsGenie.
                    items:
                      properties:
                        autoClose:
                          description: |-
                            close alerts in OpsGenie when they resolve in the Alertmanager.
                            Whether to auto-close alerts in OpsGenie when they resolve in the Alertmanager.
                          type: boolean
                        description:
                          description: |-
                            (String) The templated description of the Kafka message.
                            A templated high-level description to use for the alert.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        message:
                          description: |-
                            (String) The templated content of the message.
                            The templated content of the message.
                          type: string
                        overridePriority:
                          description: |-
                            (Boolean) Whether to allow the alert priority to be configured via the value of the og_priority annotation on the alert.
                            Whether to allow the alert priority to be configured via the value of the `og_priority` annotation on the alert.
                          type: boolean
                        responders:
                          description: |-
                            (Block List) Teams, users, escalations and schedules that the alert will be routed to send notifications. If the API Key belongs to a team integration, this field will be overwritten with the owner team. This feature is available from Grafana 10.3+. (see below for nested schema)
                            Teams, users, escalations and schedules that the alert will be routed to send notifications. If the API Key belongs to a team integration, this field will be overwritten with the owner team. This feature is available from Grafana 10.3+.
                          items:
                            properties:
                              id:
                                description: |-
                                  (String) The ID of this resource.
                                  ID of the responder. Must be specified if name and username are empty.
                                type: string
                              name:
                                description: |-
                                  (String) The name of the contact point.
                                  Name of the responder. Must be specified if username and id are empty.
                                type: string
                              type:
                                description: |-
                                  (String) Type of the responder. Supported: team, teams, user, escalation, schedule or a template that is expanded to one of these values.
                                  Type of the responder. Supported: team, teams, user, escalation, schedule or a template that is expanded to one of these values.
                                type: string
                              username:
                                description: |-
                                  (String) The user name to use when making a call to the Kafka REST Proxy
                                  User name of the responder. Must be specified if name and id are empty.
                                type: string
                            type: object
                          type: array
                        sendTagsAs:
                          description: |-
                            (String) Whether to send annotations to OpsGenie as Tags, Details, or both. Supported values are tags, details, both, or empty to use the default behavior of Tags.
                            Whether to send annotations to OpsGenie as Tags, Details, or both. Supported values are `tags`, `details`, `both`, or empty to use the default behavior of Tags.
                          type: string
                        uid:
                          description: |-
                            (String) The UID of the contact point.
                            The UID of the contact point.
                          type: string
                        url:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            Allows customization of the OpsGenie API URL.
                          type: string
                      type: object
                    type: array
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  pagerduty:
                    description: |-
                      (Block Set) A contact point that sends notifications to PagerDuty. (see below for nested schema)
                      A contact point that sends notifications to PagerDuty.
                    items:
                      properties:
                        class:
                          description: |-
                            (String) The class or type of event, for example ping failure.
                            The class or type of event, for example `ping failure`.
                          type: string
                        client:
                          description: |-
                            (String) The name of the monitoring client that is triggering this event.
                            The name of the monitoring client that is triggering this event.
                          type: string
                        clientUrl:
                          description: |-
                            (String) The URL of the monitoring client that is triggering this event.
                            The URL of the monitoring client that is triggering this event.
                          type: string
                        component:
                          description: |-
                            (String) The component being affected by the event.
                            The component being affected by the event.
                          type: string
                        details:
                          additionalProperties:
                            type: string
                          description: |-
                            (String) The templated details to include with the message.
                            A set of arbitrary key/value pairs that provide further detail about the incident.
                          type: object
                          x-kubernetes-map-type: granular
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        group:
                          description: |-
                            (String) The group to which the provided component belongs to.
                            The group to which the provided component belongs to.
                          type: string
                        severity:
                          description: |-
                            (String) The PagerDuty event severity level. Default is critical.
                            The PagerDuty event severity level. Default is `critical`.
                          type: string
                        source:
                          description: |-
                            (String) The unique location of the affected system.
                            The unique location of the affected system.
                          type: string
                        summary:
                          description: |-
                            (String) The templated summary message of the event.
                            The templated summary message of the event.
                          type: string
                        uid:
                          description: |-
                            (String) The UID of the contact point.
                            The UID of the contact point.
                          type: string
                        url:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            The URL to send API requests to
                          type: string
                      type: object
                    type: array
                  pushover:
                    description: |-
                      (Block Set) A contact point that sends notifications to Pushover. (see below for nested schema)
                      A contact point that sends notifications to Pushover.
                    items:
                      properties:
                        device:
                          description: |-
                            separated list of devices to which the event is associated.
                            Comma-separated list of devices to which the event is associated.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        expire:
                          description: |-
                            (Number) How many seconds for which the notification will continue to be retried by Pushover.
                            How many seconds for which the notification will continue to be retried by Pushover.
                          type: number
                        message:
                          description: |-
                            (String) The templated content of the message.
                            The templated notification message content.
                          type: string
                        okPriority:
                          description: |-
                            (Number) The priority level of the resolved event.
                            The priority level of the resolved event.
                          type: number
                        okSound:
                          description: |-
                            (String) The sound associated with the resolved notification.
                            The sound associated with the resolved notification.
                          type: string
                        priority:
                          description: |-
                            (Number) The priority level of the event.
                            The priority level of the event.
                          type: number
                        retry:
                          description: |-
                            (Number) How often, in seconds, the Pushover servers will send the same notification to the user.
                            How often, in seconds, the Pushover servers will send the same notification to the user.
                          type: number
                        sound:
                          description: |-
                            (String) The sound associated with the notification.
                            The sound associated with the notification.
                          type: string
                        title:
                          description: |-
                            (String) The templated title of the message.
                            The templated title of the message.
                          type: string
                        uid:
                          description: |-
                            (String) The UID of the contact point.
                            The UID of the contact point.
                          type: string
                        uploadImage:
                          description: |-
                            (Boolean) Whether to send images in the notification or not. Default is true. Requires Grafana to be configured to send images in notifications.
                            Whether to send images in the notification or not. Default is true. Requires Grafana to be configured to send images in notifications.
                          type: boolean
                      type: object
                    type: array
                  sensugo:
                    description: |-
                      (Block Set) A contact point that sends notifications to SensuGo. (see below for nested schema)
                      A contact point that sends notifications to SensuGo.
                    items:
                      properties:
                        check:
                          description: |-
                            (String) The SensuGo check to which the event should be routed.
                            The SensuGo check to which the event should be routed.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        entity:
                          description: |-
                            (String) The entity being monitored.
                            The entity being monitored.
                          type: string
                        handler:
                          description: |-
                            (String) A custom handler to execute in addition to the check.
                            A custom handler to execute in addition to the check.
                          type: string
                        message:
                          description: |-
                            (String) The templated content of the message.
                            Templated message content describing the alert.
                          type: string
                        namespace:
                          description: |-
                            (String) The namespace in which the check resides.
                            The namespace in which the check resides.
                          type: string
                        uid:
                          description: |-
                            (String) The UID of the contact point.
                            The UID of the contact point.
                          type: string
                        url:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            The SensuGo URL to send requests to.
                          type: string
                      type: object
                    type: array
                  slack:
                    description: |-
                      (Block Set) A contact point that sends notifications to Slack. (see below for nested schema)
                      A contact point that sends notifications to Slack.
                    items:
                      properties:
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        endpointUrl:
                          description: |-
                            (String) Use this to override the Slack API endpoint URL to send requests to.
                            Use this to override the Slack API endpoint URL to send requests to.
                          type: string
                        iconEmoji:
                          description: |-
                            (String) The name of a Slack workspace emoji to use as the bot icon.
                            The name of a Slack workspace emoji to use as the bot icon.
                          type: string
                        iconUrl:
                          description: |-
                            (String) A URL of an image to use as the bot icon.
                            A URL of an image to use as the bot icon.
                          type: string
                        mentionChannel:
                          description: |-
                            (String) Describes how to ping the slack channel that messages are being sent to. Options are here for an @here ping, channel for @channel, or empty for no ping.
                            Describes how to ping the slack channel that messages are being sent to. Options are `here` for an @here ping, `channel` for @channel, or empty for no ping.
                          type: string
                        mentionGroups:
                          description: |-
                            separated list of groups to mention in the message.
                            Comma-separated list of groups to mention in the message.
                          type: string
                        mentionUsers:
                          description: |-
                            separated list of users to mention in the message.
                            Comma-separated list of users to mention in the message.
                          type: string
                        recipient:
                          description: |-
                            (String) Channel, private group, or IM channel (can be an encoded ID or a name) to send messages to.
                            Channel, private group, or IM channel (can be an encoded ID or a name) to send messages to.
                          type: string
                        text:
                          description: |-
                            (String) Templated content of the message.
                            Templated content of the message.
                          type: string
                        title:
                          description: |-
                            (String) The templated title of the message.
                            Templated title of the message.
                          type: string
                        uid:
                          description: |-
                            (String) The UID of the contact point.
                            The UID of the contact point.
                          type: string
                        username:
                          description: |-
                            (String) The user name to use when making a call to the Kafka REST Proxy
                            Username for the bot to use.
                          type: string
                      type: object
                    type: array
                  sns:
                    description: |-
                      (Block Set) A contact point that sends notifications to Amazon SNS. Requires Amazon Managed Grafana. (see below for nested schema)
                      A contact point that sends notifications to Amazon SNS. Requires Amazon Managed Grafana.
                    items:
                      properties:
                        assumeRoleArn:
                          description: |-
                            (String) The Amazon Resource Name (ARN) of the role to assume to send notifications to Amazon SNS.
                            The Amazon Resource Name (ARN) of the role to assume to send notifications to Amazon SNS.
                          type: string
                        authProvider:
                          description: |-
                            (String) The authentication provider to use. Valid values are default, arn and keys. Default is default. Defaults to default.
                            The authentication provider to use. Valid values are `default`, `arn` and `keys`. Default is `default`. Defaults to `default`.
                          type: string
                        body:
                          description: (String)
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        externalId:
                          description: |-
                            (String) The external ID to use when assuming the role.
                            The external ID to use when assuming the role.
                          type: string
                        messageFormat:
                          description: |-
                            (String) The format of the message to send. Valid values are text, body and json. Default is text. Defaults to text.
                            The format of the message to send. Valid values are `text`, `body` and `json`. Default is `text`. Defaults to `text`.
                          type: string
                        subject:
                          description: (String) The templated subject line of the
                            email. Defaults to “.
                          type: string
                        topic:
                          description: |-
                            (String) The name of the Kafka topic to publish to.
                            The Amazon SNS topic to send notifications to.
                          type: string
                        uid:
                          description: |-
                            (String) The UID of the contact point.
                            The UID of the contact point.
                          type: string
                      type: object
                    type: array
                  teams:
                    description: |-
                      (Block Set) A contact point that sends notifications to Microsoft Teams. (see below for nested schema)
                      A contact point that sends notifications to Microsoft Teams.
                    items:
                      properties:
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        message:
                          description: |-
                            (String) The templated content of the message.
                            The templated message content to send.
                          type: string
                        sectionTitle:
                          description: |-
                            (String) The templated subtitle for each message section.
                            The templated subtitle for each message section.
                          type: string
                        title:
                          description: |-
                            (String) The templated title of the message.
                            The templated title of the message.
                          type: string
                        uid:
                          description: |-
                            (String) The UID of the contact point.
                            The UID of the contact point.
                          type: string
                      type: object
                    type: array
                  telegram:
                    description: |-
                      (Block Set) A contact point that sends notifications to Telegram. (see below for nested schema)
                      A contact point that sends notifications to Telegram.
                    items:
                      properties:
                        chatId:
                          description: |-
                            (String) The chat ID to send messages to.
                            The chat ID to send messages to.
                          type: string
                        disableNotifications:
                          description: |-
                            (Boolean) When set users will receive a notification with no sound.
                            When set users will receive a notification with no sound.
                          type: boolean
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        disableWebPagePreview:
                          description: |-
                            (Boolean) When set it disables link previews for links in the message.
                            When set it disables link previews for links in the message.
                          type: boolean
                        message:
                          description: |-
                            (String) The templated content of the message.
                            The templated content of the message.
                          type: string
                        messageThreadId:
                          description: |-
                            (String) The ID of the message thread to send the message to.
                            The ID of the message thread to send the message to.
                          type: string
                        parseMode:
                          description: |-
                            (String) Mode for parsing entities in the message text. Supported: None, Markdown, MarkdownV2, and HTML. HTML is the default.
                            Mode for parsing entities in the message text. Supported: None, Markdown, MarkdownV2, and HTML. HTML is the default.
                          type: string
                        protectContent:
                          description: |-
                            (Boolean) When set it protects the contents of the message from forwarding and saving.
                            When set it protects the contents of the message from forwarding and saving.
                          type: boolean
                        uid:
                          description: |-
                            (String) The UID of the contact point.
                            The UID of the contact point.
                          type: string
                      type: object
                    type: array
                  threema:
                    description: |-
                      (Block Set) A contact point that sends notifications to Threema. (see below for nested schema)
                      A contact point that sends notifications to Threema.
                    items:
                      properties:
                        description:
                          description: |-
                            (String) The templated description of the Kafka message.
                            The templated description of the message.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        gatewayId:
                          description: |-
                            (String) The Threema gateway ID.
                            The Threema gateway ID.
                          type: string
                        recipientId:
                          description: |-
                            (String) The ID of the recipient of the message.
                            The ID of the recipient of the message.
                          type: string
                        title:
                          description: |-
                            (String) The templated title of the message.
                            The templated title of the message.
                          type: string
                        uid:
                          description: |-
                            (String) The UID of the contact point.
                            The UID of the contact point.
                          type: string
                      type: object
                    type: array
                  victorops:
                    description: |-
                      (Block Set) A contact point that sends notifications to VictorOps (now known as Splunk OnCall). (see below for nested schema)
                      A contact point that sends notifications to VictorOps (now known as Splunk OnCall).
                    items:
                      properties:
                        description:
                          description: |-
                            (String) The templated description of the Kafka message.
                            Templated description of the message.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        messageType:
                          description: |-
                            either 'link' or 'actionCard'
                            The VictorOps alert state - typically either `CRITICAL` or `RECOVERY`.
                          type: string
                        title:
                          description: |-
                            (String) The templated title of the message.
                            Templated title to display.
                          type: string
                        uid:
                          description: |-
                            (String) The UID of the contact point.
                            The UID of the contact point.
                          type: string
                        url:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            The VictorOps webhook URL.
                          type: string
                      type: object
                    type: array
                  webex:
                    description: |-
                      (Block Set) A contact point that sends notifications to Cisco Webex. (see below for nested schema)
                      A contact point that sends notifications to Cisco Webex.
                    items:
                      properties:
                        apiUrl:
                          description: |-
                            (String) The URL to send webhook requests to.
                            The URL to send webhook requests to.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        message:
                          description: |-
                            (String) The templated content of the message.
                            The templated title of the message to send.
                          type: string
                        roomId:
                          description: |-
                            (String) ID of the Webex Teams room where to send the messages.
                            ID of the Webex Teams room where to send the messages.
                          type: string
                        uid:
                          description: |-
                            (String) The UID of the contact point.
                            The UID of the contact point.
                          type: string
                      type: object
                    type: array
                  webhook:
                    description: |-
                      (Block Set) A contact point that sends notifications to an arbitrary webhook, using the Prometheus webhook format defined here: https://prometheus.io/docs/alerting/latest/configuration/#webhook_config (see below for nested schema)
                      A contact point that sends notifications to an arbitrary webhook, using the Prometheus webhook format defined here: https://prometheus.io/docs/alerting/latest/configuration/#webhook_config
                    items:
                      properties:
                        authorizationScheme:
                          description: |-
                            attaches an auth header with this name. Do not use in conjunction with basic auth parameters.
                            Allows a custom authorization scheme - attaches an auth header with this name. Do not use in conjunction with basic auth parameters.
                          type: string
                        basicAuthUser:
                          description: |-
                            (String) The username component of the basic auth credentials to use.
                            The username to use in basic auth headers attached to the request. If omitted, basic auth will not be used.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        httpMethod:
                          description: |-
                            (String) The HTTP method to use in the request. Defaults to POST.
                            The HTTP method to use in the request. Defaults to `POST`.
                          type: string
                        maxAlerts:
                          description: |-
                            (Number) The maximum number of alerts to send in a single request. This can be helpful in limiting the size of the request body. The default is 0, which indicates no limit.
                            The maximum number of alerts to send in a single request. This can be helpful in limiting the size of the request body. The default is 0, which indicates no limit.
                          type: number
                        message:
                          description: |-
                            (String) The templated content of the message.
                            Custom message. You can use template variables.
                          type: string
                        title:
                          description: |-
                            (String) The templated title of the message.
                            Templated title of the message.
                          type: string
                        uid:
                          description: |-
                            (String) The UID of the contact point.
                            The UID of the contact point.
                          type: string
                        url:
                          description: |-
                            (String) The URL of the Alertmanager instance.
                            The URL to send webhook requests to.
                          type: string
                      type: object
                    type: array
                  wecom:
                    description: |-
                      (Block Set) A contact point that sends notifications to WeCom. (see below for nested schema)
                      A contact point that sends notifications to WeCom.
                    items:
                      properties:
                        agentId:
                          description: |-
                            (String) Agent ID added to the request payload when using APIAPP.
                            Agent ID added to the request payload when using APIAPP.
                          type: string
                        corpId:
                          description: |-
                            (String) Corp ID used to get token when using APIAPP.
                            Corp ID used to get token when using APIAPP.
                          type: string
                        disableResolveMessage:
                          description: |-
                            (Boolean) Whether to disable sending resolve messages. Defaults to false.
                            Whether to disable sending resolve messages. Defaults to `false`.
                          type: boolean
                        message:
                          description: |-
                            (String) The templated content of the message.
                            The templated content of the message to send.
                          type: string
                        msgType:
                          description: |-
                            (String) The type of them message. Supported: markdown, text. Default: text.
                            The type of them message. Supported: markdown, text. Default: text.
                          type: string
                        title:
                          description: |-
                            (String) The templated title of the message.
                            The templated title of the message to send.
                          type: string
                        toUser:
                          description: |-
                            (String) The ID of user that should receive the message. Multiple entries should be separated by '|'. Default: @all.
                            The ID of user that should receive the message. Multiple entries should be separated by '|'. Default: @all.
                          type: string
                        uid:
                          description: |-
                            (String) The UID of the contact point.
                            The UID of the contact point.
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: messagetemplates.alerting.grafana.crossplane.io
spec:
  group: alerting.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: MessageTemplate
    listKind: MessageTemplateList
    plural: messagetemplates
    singular: messagetemplate
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MessageTemplate is the Schema for the MessageTemplates API. Manages
          Grafana Alerting message templates. Official documentation https://grafana.com/docs/grafana/latest/alerting/configure-notifications/template-notifications/create-notification-templates/HTTP
          API https://grafana.com/docs/grafana/next/developers/http_api/alerting_provisioning/#templates
          This resource requires Grafana 9.1.0 or later.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: MessageTemplateSpec defines the desired state of MessageTemplate
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  disableProvenance:
                    description: Defaults to false. Defaults to `false`.
                    type: boolean
                  name:
                    description: |-
                      (String) The name of the message template.
                      The name of the message template.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  template:
                    description: |-
                      (String) The content of the message template.
                      The content of the message template.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  disableProvenance:
                    description: Defaults to false. Defaults to `false`.
                    type: boolean
                  name:
                    description: |-
                      (String) The name of the message template.
                      The name of the message template.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  template:
                    description: |-
                      (String) The content of the message template.
                      The content of the message template.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.template is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.template)
                || (has(self.initProvider) && has(self.initProvider.template))'
          status:
            description: MessageTemplateStatus defines the observed state of MessageTemplate.
            properties:
              atProvider:
                properties:
                  disableProvenance:
                    description: Defaults to false. Defaults to `false`.
                    type: boolean
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  name:
                    description: |-
                      (String) The name of the message template.
                      The name of the message template.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  template:
                    description: |-
                      (String) The content of the message template.
                      The content of the message template.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: mutetimings.alerting.grafana.crossplane.io
spec:
  group: alerting.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: MuteTiming
    listKind: MuteTimingList
    plural: mutetimings
    singular: mutetiming
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MuteTiming is the Schema for the MuteTimings API. Manages Grafana
          Alerting mute timings. Official documentation https://grafana.com/docs/grafana/latest/alerting/configure-notifications/mute-timings/HTTP
          API https://grafana.com/docs/grafana/next/developers/http_api/alerting_provisioning/#mute-timings
          This resource requires Grafana 9.1.0 or later.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: MuteTimingSpec defines the desired state of MuteTiming
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  disableProvenance:
                    description: Defaults to false. Defaults to `false`.
                    type: boolean
                  intervals:
                    description: |-
                      (Block List) The time intervals at which to mute notifications. Use an empty block to mute all the time. (see below for nested schema)
                      The time intervals at which to mute notifications. Use an empty block to mute all the time.
                    items:
                      properties:
                        daysOfMonth:
                          description: |-
                            31, within a month, e.g. "1" or "14:16". Negative values can be used to represent days counting from the end of a month, e.g. "-1".
                            An inclusive range of days, 1-31, within a month, e.g. "1" or "14:16". Negative values can be used to represent days counting from the end of a month, e.g. "-1".
                          items:
                            type: string
                          type: array
                        location:
                          description: |-
                            (String) Provides the time zone for the time interval. Must be a location in the IANA time zone database, e.g "America/New_York"
                            Provides the time zone for the time interval. Must be a location in the IANA time zone database, e.g "America/New_York"
                          type: string
                        months:
                          description: |-
                            (List of String) An inclusive range of months, either numerical or full calendar month, e.g. "1:3", "december", or "may:august".
                            An inclusive range of months, either numerical or full calendar month, e.g. "1:3", "december", or "may:august".
                          items:
                            type: string
                          type: array
                        times:
                          description: |-
                            (Block List) The time ranges, represented in minutes, during which to mute in a given day. (see below for nested schema)
                            The time ranges, represented in minutes, during which to mute in a given day.
                          items:
                            properties:
                              end:
                                description: |-
                                  (String) The time, in hh:mm format, of when the interval should end exclusively.
                                  The time, in hh:mm format, of when the interval should end exclusively.
                                type: string
                              start:
                                description: |-
                                  (String) The time, in hh:mm format, of when the interval should begin inclusively.
                                  The time, in hh:mm format, of when the interval should begin inclusively.
                                type: string
                            type: object
                          type: array
                        weekdays:
                          description: |-
                            (List of String) An inclusive range of weekdays, e.g. "monday" or "tuesday:thursday".
                            An inclusive range of weekdays, e.g. "monday" or "tuesday:thursday".
                          items:
                            type: string
                          type: array
                        years:
                          description: |-
                            (List of String) A positive inclusive range of years, e.g. "2030" or "2025:2026".
                            A positive inclusive range of years, e.g. "2030" or "2025:2026".
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  name:
                    description: |-
                      (String) The name of the mute timing.
                      The name of the mute timing.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  disableProvenance:
                    description: Defaults to false. Defaults to `false`.
                    type: boolean
                  intervals:
                    description: |-
                      (Block List) The time intervals at which to mute notifications. Use an empty block to mute all the time. (see below for nested schema)
                      The time intervals at which to mute notifications. Use an empty block to mute all the time.
                    items:
                      properties:
                        daysOfMonth:
                          description: |-
                            31, within a month, e.g. "1" or "14:16". Negative values can be used to represent days counting from the end of a month, e.g. "-1".
                            An inclusive range of days, 1-31, within a month, e.g. "1" or "14:16". Negative values can be used to represent days counting from the end of a month, e.g. "-1".
                          items:
                            type: string
                          type: array
                        location:
                          description: |-
                            (String) Provides the time zone for the time interval. Must be a location in the IANA time zone database, e.g "America/New_York"
                            Provides the time zone for the time interval. Must be a location in the IANA time zone database, e.g "America/New_York"
                          type: string
                        months:
                          description: |-
                            (List of String) An inclusive range of months, either numerical or full calendar month, e.g. "1:3", "december", or "may:august".
                            An inclusive range of months, either numerical or full calendar month, e.g. "1:3", "december", or "may:august".
                          items:
                            type: string
                          type: array
                        times:
                          description: |-
                            (Block List) The time ranges, represented in minutes, during which to mute in a given day. (see below for nested schema)
                            The time ranges, represented in minutes, during which to mute in a given day.
                          items:
                            properties:
                              end:
                                description: |-
                                  (String) The time, in hh:mm format, of when the interval should end exclusively.
                                  The time, in hh:mm format, of when the interval should end exclusively.
                                type: string
                              start:
                                description: |-
                                  (String) The time, in hh:mm format, of when the interval should begin inclusively.
                                  The time, in hh:mm format, of when the interval should begin inclusively.
                                type: string
                            type: object
                          type: array
                        weekdays:
                          description: |-
                            (List of String) An inclusive range of weekdays, e.g. "monday" or "tuesday:thursday".
                            An inclusive range of weekdays, e.g. "monday" or "tuesday:thursday".
                          items:
                            type: string
                          type: array
                        years:
                          description: |-
                            (List of String) A positive inclusive range of years, e.g. "2030" or "2025:2026".
                            A positive inclusive range of years, e.g. "2030" or "2025:2026".
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  name:
                    description: |-
                      (String) The name of the mute timing.
                      The name of the mute timing.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: MuteTimingStatus defines the observed state of MuteTiming.
            properties:
              atProvider:
                properties:
                  disableProvenance:
                    description: Defaults to false. Defaults to `false`.
                    type: boolean
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  intervals:
                    description: |-
                      (Block List) The time intervals at which to mute notifications. Use an empty block to mute all the time. (see below for nested schema)
                      The time intervals at which to mute notifications. Use an empty block to mute all the time.
                    items:
                      properties:
                        daysOfMonth:
                          description: |-
                            31, within a month, e.g. "1" or "14:16". Negative values can be used to represent days counting from the end of a month, e.g. "-1".
                            An inclusive range of days, 1-31, within a month, e.g. "1" or "14:16". Negative values can be used to represent days counting from the end of a month, e.g. "-1".
                          items:
                            type: string
                          type: array
                        location:
                          description: |-
                            (String) Provides the time zone for the time interval. Must be a location in the IANA time zone database, e.g "America/New_York"
                            Provides the time zone for the time interval. Must be a location in the IANA time zone database, e.g "America/New_York"
                          type: string
                        months:
                          description: |-
                            (List of String) An inclusive range of months, either numerical or full calendar month, e.g. "1:3", "december", or "may:august".
                            An inclusive range of months, either numerical or full calendar month, e.g. "1:3", "december", or "may:august".
                          items:
                            type: string
                          type: array
                        times:
                          description: |-
                            (Block List) The time ranges, represented in minutes, during which to mute in a given day. (see below for nested schema)
                            The time ranges, represented in minutes, during which to mute in a given day.
                          items:
                            properties:
                              end:
                                description: |-
                                  (String) The time, in hh:mm format, of when the interval should end exclusively.
                                  The time, in hh:mm format, of when the interval should end exclusively.
                                type: string
                              start:
                                description: |-
                                  (String) The time, in hh:mm format, of when the interval should begin inclusively.
                                  The time, in hh:mm format, of when the interval should begin inclusively.
                                type: string
                            type: object
                          type: array
                        weekdays:
                          description: |-
                            (List of String) An inclusive range of weekdays, e.g. "monday" or "tuesday:thursday".
                            An inclusive range of weekdays, e.g. "monday" or "tuesday:thursday".
                          items:
                            type: string
                          type: array
                        years:
                          description: |-
                            (List of String) A positive inclusive range of years, e.g. "2030" or "2025:2026".
                            A positive inclusive range of years, e.g. "2030" or "2025:2026".
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  name:
                    description: |-
                      (String) The name of the mute timing.
                      The name of the mute timing.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: notificationpolicies.alerting.grafana.crossplane.io
spec:
  group: alerting.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: NotificationPolicy
    listKind: NotificationPolicyList
    plural: notificationpolicies
    singular: notificationpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NotificationPolicy is the Schema for the NotificationPolicys
          API. Sets the global notification policy for Grafana. !> This resource manages
          the entire notification policy tree, and will overwrite any existing policies.
          Official documentation https://grafana.com/docs/grafana/latest/alerting/configure-notifications/HTTP
          API https://grafana.com/docs/grafana/latest/developers/http_api/alerting_provisioning/
          This resource requires Grafana 9.1.0 or later.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NotificationPolicySpec defines the desired state of NotificationPolicy
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  contactPoint:
                    description: |-
                      (String) The default contact point to route all unmatched notifications to.
                      The default contact point to route all unmatched notifications to.
                    type: string
                  contactPointRef:
                    description: Reference to a ContactPoint in alerting to populate
                      contactPoint.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  contactPointSelector:
                    description: Selector for a ContactPoint in alerting to populate
                      contactPoint.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  disableProvenance:
                    description: Defaults to false. Defaults to `false`.
                    type: boolean
                  groupBy:
                    description: |-
                      (List of String) A list of alert labels to group alerts into notifications by. Use the special label ... to group alerts by all labels, effectively disabling grouping.
                      A list of alert labels to group alerts into notifications by. Use the special label `...` to group alerts by all labels, effectively disabling grouping.
                    items:
                      type: string
                    type: array
                  groupInterval:
                    description: |-
                      (String) Minimum time interval between two notifications for the same group. Default is 5 minutes.
                      Minimum time interval between two notifications for the same group. Default is 5 minutes.
                    type: string
                  groupWait:
                    description: |-
                      (String) Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                      Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  policy:
                    description: |-
                      (Block List) Routing rules for specific label sets. (see below for nested schema)
                      Routing rules for specific label sets.
                    items:
                      properties:
                        contactPoint:
                          description: |-
                            (String) The default contact point to route all unmatched notifications to.
                            The contact point to route notifications that match this rule to.
                          type: string
                        contactPointRef:
                          description: Reference to a ContactPoint in alerting to
                            populate contactPoint.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        contactPointSelector:
                          description: Selector for a ContactPoint in alerting to
                            populate contactPoint.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        continue:
                          description: |-
                            (Boolean) Whether to continue matching subsequent rules if an alert matches the current rule. Otherwise, the rule will be 'consumed' by the first policy to match it.
                            Whether to continue matching subsequent rules if an alert matches the current rule. Otherwise, the rule will be 'consumed' by the first policy to match it.
                          type: boolean
                        groupBy:
                          description: |-
                            (List of String) A list of alert labels to group alerts into notifications by. Use the special label ... to group alerts by all labels, effectively disabling grouping.
                            A list of alert labels to group alerts into notifications by. Use the special label `...` to group alerts by all labels, effectively disabling grouping. Required for root policy only. If empty, the parent grouping is used.
                          items:
                            type: string
                          type: array
                        groupInterval:
                          description: |-
                            (String) Minimum time interval between two notifications for the same group. Default is 5 minutes.
                            Minimum time interval between two notifications for the same group. Default is 5 minutes.
                          type: string
                        groupWait:
                          description: |-
                            (String) Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                            Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                          type: string
                        matcher:
                          description: |-
                            (Block Set) Describes which labels this rule should match. When multiple matchers are supplied, an alert must match ALL matchers to be accepted by this policy. When no matchers are supplied, the rule will match all alert instances. (see below for nested schema)
                            Describes which labels this rule should match. When multiple matchers are supplied, an alert must match ALL matchers to be accepted by this policy. When no matchers are supplied, the rule will match all alert instances.
                          items:
                            properties:
                              label:
                                description: |-
                                  (String) The name of the label to match against.
                                  The name of the label to match against.
                                type: string
                              match:
                                description: |-
                                  (String) The operator to apply when matching values of the given label. Allowed operators are = for equality, != for negated equality, =~ for regex equality, and !~ for negated regex equality.
                                  The operator to apply when matching values of the given label. Allowed operators are `=` for equality, `!=` for negated equality, `=~` for regex equality, and `!~` for negated regex equality.
                                type: string
                              value:
                                description: |-
                                  (String) The label value to match against.
                                  The label value to match against.
                                type: string
                            type: object
                          type: array
                        muteTimingRef:
                          description: References to MuteTiming in alerting to populate
                            muteTimings.
                          items:
                            description: A Reference to a named object.
                            properties:
                              name:
                                description: Name of the referenced object.
                                type: string
                              policy:
                                description: Policies for referencing.
                                properties:
                                  resolution:
                                    default: Required
                                    description: |-
                                      Resolution specifies whether resolution of this reference is required.
                                      The default is 'Required', which means the reconcile will fail if the
                                      reference cannot be resolved. 'Optional' means this reference will be
                                      a no-op if it cannot be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: |-
                                      Resolve specifies when this reference should be resolved. The default
                                      is 'IfNotPresent', which will attempt to resolve the reference only when
                                      the corresponding field is not present. Use 'Always' to resolve the
                                      reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        muteTimingSelector:
                          description: Selector for a list of MuteTiming in alerting
                            to populate muteTimings.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        muteTimings:
                          description: |-
                            (List of String) A list of mute timing names to apply to alerts that match this policy.
                            A list of mute timing names to apply to alerts that match this policy.
                          items:
                            type: string
                          type: array
                        policy:
                          description: |-
                            (Block List) Routing rules for specific label sets. (see below for nested schema)
                            Routing rules for specific label sets.
                          items:
                            properties:
                              contactPoint:
                                description: |-
                                  (String) The default contact point to route all unmatched notifications to.
                                  The contact point to route notifications that match this rule to.
                                type: string
                              contactPointRef:
                                description: Reference to a ContactPoint in alerting
                                  to populate contactPoint.
                                properties:
                                  name:
                                    description: Name of the referenced object.
                                    type: string
                                  policy:
                                    description: Policies for referencing.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: |-
                                          Resolution specifies whether resolution of this reference is required.
                                          The default is 'Required', which means the reconcile will fail if the
                                          reference cannot be resolved. 'Optional' means this reference will be
                                          a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: |-
                                          Resolve specifies when this reference should be resolved. The default
                                          is 'IfNotPresent', which will attempt to resolve the reference only when
                                          the corresponding field is not present. Use 'Always' to resolve the
                                          reference on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                required:
                                - name
                                type: object
                              contactPointSelector:
                                description: Selector for a ContactPoint in alerting
                                  to populate contactPoint.
                                properties:
                                  matchControllerRef:
                                    description: |-
                                      MatchControllerRef ensures an object with the same controller reference
                                      as the selecting object is selected.
                                    type: boolean
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: MatchLabels ensures an object with
                                      matching labels is selected.
                                    type: object
                                  policy:
                                    description: Policies for selection.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: |-
                                          Resolution specifies whether resolution of this reference is required.
                                          The default is 'Required', which means the reconcile will fail if the
                                          reference cannot be resolved. 'Optional' means this reference will be
                                          a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: |-
                                          Resolve specifies when this reference should be resolved. The default
                                          is 'IfNotPresent', which will attempt to resolve the reference only when
                                          the corresponding field is not present. Use 'Always' to resolve the
                                          reference on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                type: object
                              continue:
                                description: |-
                                  (Boolean) Whether to continue matching subsequent rules if an alert matches the current rule. Otherwise, the rule will be 'consumed' by the first policy to match it.
                                  Whether to continue matching subsequent rules if an alert matches the current rule. Otherwise, the rule will be 'consumed' by the first policy to match it.
                                type: boolean
                              groupBy:
                                description: |-
                                  (List of String) A list of alert labels to group alerts into notifications by. Use the special label ... to group alerts by all labels, effectively disabling grouping.
                                  A list of alert labels to group alerts into notifications by. Use the special label `...` to group alerts by all labels, effectively disabling grouping. Required for root policy only. If empty, the parent grouping is used.
                                items:
                                  type: string
                                type: array
                              groupInterval:
                                description: |-
                                  (String) Minimum time interval between two notifications for the same group. Default is 5 minutes.
                                  Minimum time interval between two notifications for the same group. Default is 5 minutes.
                                type: string
                              groupWait:
                                description: |-
                                  (String) Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                                  Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                                type: string
                              matcher:
                                description: |-
                                  (Block Set) Describes which labels this rule should match. When multiple matchers are supplied, an alert must match ALL matchers to be accepted by this policy. When no matchers are supplied, the rule will match all alert instances. (see below for nested schema)
                                  Describes which labels this rule should match. When multiple matchers are supplied, an alert must match ALL matchers to be accepted by this policy. When no matchers are supplied, the rule will match all alert instances.
                                items:
                                  properties:
                                    label:
                                      description: |-
                                        (String) The name of the label to match against.
                                        The name of the label to match against.
                                      type: string
                                    match:
                                      description: |-
                                        (String) The operator to apply when matching values of the given label. Allowed operators are = for equality, != for negated equality, =~ for regex equality, and !~ for negated regex equality.
                                        The operator to apply when matching values of the given label. Allowed operators are `=` for equality, `!=` for negated equality, `=~` for regex equality, and `!~` for negated regex equality.
                                      type: string
                                    value:
                                      description: |-
                                        (String) The label value to match against.
                                        The label value to match against.
                                      type: string
                                  type: object
                                type: array
                              muteTimingRef:
                                description: References to MuteTiming in alerting
                                  to populate muteTimings.
                                items:
                                  description: A Reference to a named object.
                                  properties:
                                    name:
                                      description: Name of the referenced object.
                                      type: string
                                    policy:
                                      description: Policies for referencing.
                                      properties:
                                        resolution:
                                          default: Required
                                          description: |-
                                            Resolution specifies whether resolution of this reference is required.
                                            The default is 'Required', which means the reconcile will fail if the
                                            reference cannot be resolved. 'Optional' means this reference will be
                                            a no-op if it cannot be resolved.
                                          enum:
                                          - Required
                                          - Optional
                                          type: string
                                        resolve:
                                          description: |-
                                            Resolve specifies when this reference should be resolved. The default
                                            is 'IfNotPresent', which will attempt to resolve the reference only when
                                            the corresponding field is not present. Use 'Always' to resolve the
                                            reference on every reconcile.
                                          enum:
                                          - Always
                                          - IfNotPresent
                                          type: string
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                              muteTimingSelector:
                                description: Selector for a list of MuteTiming in
                                  alerting to populate muteTimings.
                                properties:
                                  matchControllerRef:
                                    description: |-
                                      MatchControllerRef ensures an object with the same controller reference
                                      as the selecting object is selected.
                                    type: boolean
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: MatchLabels ensures an object with
                                      matching labels is selected.
                                    type: object
                                  policy:
                                    description: Policies for selection.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: |-
                                          Resolution specifies whether resolution of this reference is required.
                                          The default is 'Required', which means the reconcile will fail if the
                                          reference cannot be resolved. 'Optional' means this reference will be
                                          a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: |-
                                          Resolve specifies when this reference should be resolved. The default
                                          is 'IfNotPresent', which will attempt to resolve the reference only when
                                          the corresponding field is not present. Use 'Always' to resolve the
                                          reference on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                type: object
                              muteTimings:
                                description: |-
                                  (List of String) A list of mute timing names to apply to alerts that match this policy.
                                  A list of mute timing names to apply to alerts that match this policy.
                                items:
                                  type: string
                                type: array
                              policy:
                                description: |-
                                  (Block List) Routing rules for specific label sets. (see below for nested schema)
                                  Routing rules for specific label sets.
                                items:
                                  properties:
                                    contactPoint:
                                      description: |-
                                        (String) The default contact point to route all unmatched notifications to.
                                        The contact point to route notifications that match this rule to.
                                      type: string
                                    contactPointRef:
                                      description: Reference to a ContactPoint in
                                        alerting to populate contactPoint.
                                      properties:
                                        name:
                                          description: Name of the referenced object.
                                          type: string
                                        policy:
                                          description: Policies for referencing.
                                          properties:
                                            resolution:
                                              default: Required
                                              description: |-
                                                Resolution specifies whether resolution of this reference is required.
                                                The default is 'Required', which means the reconcile will fail if the
                                                reference cannot be resolved. 'Optional' means this reference will be
                                                a no-op if it cannot be resolved.
                                              enum:
                                              - Required
                                              - Optional
                                              type: string
                                            resolve:
                                              description: |-
                                                Resolve specifies when this reference should be resolved. The default
                                                is 'IfNotPresent', which will attempt to resolve the reference only when
                                                the corresponding field is not present. Use 'Always' to resolve the
                                                reference on every reconcile.
                                              enum:
                                              - Always
                                              - IfNotPresent
                                              type: string
                                          type: object
                                      required:
                                      - name
                                      type: object
                                    contactPointSelector:
                                      description: Selector for a ContactPoint in
                                        alerting to populate contactPoint.
                                      properties:
                                        matchControllerRef:
                                          description: |-
                                            MatchControllerRef ensures an object with the same controller reference
                                            as the selecting object is selected.
                                          type: boolean
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: MatchLabels ensures an object
                                            with matching labels is selected.
                                          type: object
                                        policy:
                                          description: Policies for selection.
                                          properties:
                                            resolution:
                                              default: Required
                                              description: |-
                                                Resolution specifies whether resolution of this reference is required.
                                                The default is 'Required', which means the reconcile will fail if the
                                                reference cannot be resolved. 'Optional' means this reference will be
                                                a no-op if it cannot be resolved.
                                              enum:
                                              - Required
                                              - Optional
                                              type: string
                                            resolve:
                                              description: |-
                                                Resolve specifies when this reference should be resolved. The default
                                                is 'IfNotPresent', which will attempt to resolve the reference only when
                                                the corresponding field is not present. Use 'Always' to resolve the
                                                reference on every reconcile.
                                              enum:
                                              - Always
                                              - IfNotPresent
                                              type: string
                                          type: object
                                      type: object
                                    continue:
                                      description: |-
                                        (Boolean) Whether to continue matching subsequent rules if an alert matches the current rule. Otherwise, the rule will be 'consumed' by the first policy to match it.
                                        Whether to continue matching subsequent rules if an alert matches the current rule. Otherwise, the rule will be 'consumed' by the first policy to match it.
                                      type: boolean
                                    groupBy:
                                      description: |-
                                        (List of String) A list of alert labels to group alerts into notifications by. Use the special label ... to group alerts by all labels, effectively disabling grouping.
                                        A list of alert labels to group alerts into notifications by. Use the special label `...` to group alerts by all labels, effectively disabling grouping. Required for root policy only. If empty, the parent grouping is used.
                                      items:
                                        type: string
                                      type: array
                                    groupInterval:
                                      description: |-
                                        (String) Minimum time interval between two notifications for the same group. Default is 5 minutes.
                                        Minimum time interval between two notifications for the same group. Default is 5 minutes.
                                      type: string
                                    groupWait:
                                      description: |-
                                        (String) Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                                        Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                                      type: string
                                    matcher:
                                      description: |-
                                        (Block Set) Describes which labels this rule should match. When multiple matchers are supplied, an alert must match ALL matchers to be accepted by this policy. When no matchers are supplied, the rule will match all alert instances. (see below for nested schema)
                                        Describes which labels this rule should match. When multiple matchers are supplied, an alert must match ALL matchers to be accepted by this policy. When no matchers are supplied, the rule will match all alert instances.
                                      items:
                                        properties:
                                          label:
                                            description: |-
                                              (String) The name of the label to match against.
                                              The name of the label to match against.
                                            type: string
                                          match:
                                            description: |-
                                              (String) The operator to apply when matching values of the given label. Allowed operators are = for equality, != for negated equality, =~ for regex equality, and !~ for negated regex equality.
                                              The operator to apply when matching values of the given label. Allowed operators are `=` for equality, `!=` for negated equality, `=~` for regex equality, and `!~` for negated regex equality.
                                            type: string
                                          value:
                                            description: |-
                                              (String) The label value to match against.
                                              The label value to match against.
                                            type: string
                                        type: object
                                      type: array
                                    muteTimingRef:
                                      description: References to MuteTiming in alerting
                                        to populate muteTimings.
                                      items:
                                        description: A Reference to a named object.
                                        properties:
                                          name:
                                            description: Name of the referenced object.
                                            type: string
                                          policy:
                                            description: Policies for referencing.
                                            properties:
                                              resolution:
                                                default: Required
                                                description: |-
                                                  Resolution specifies whether resolution of this reference is required.
                                                  The default is 'Required', which means the reconcile will fail if the
                                                  reference cannot be resolved. 'Optional' means this reference will be
                                                  a no-op if it cannot be resolved.
                                                enum:
                                                - Required
                                                - Optional
                                                type: string
                                              resolve:
                                                description: |-
                                                  Resolve specifies when this reference should be resolved. The default
                                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                                  the corresponding field is not present. Use 'Always' to resolve the
                                                  reference on every reconcile.
                                                enum:
                                                - Always
                                                - IfNotPresent
                                                type: string
                                            type: object
                                        required:
                                        - name
                                        type: object
                                      type: array
                                    muteTimingSelector:
                                      description: Selector for a list of MuteTiming
                                        in alerting to populate muteTimings.
                                      properties:
                                        matchControllerRef:
                                          description: |-
                                            MatchControllerRef ensures an object with the same controller reference
                                            as the selecting object is selected.
                                          type: boolean
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: MatchLabels ensures an object
                                            with matching labels is selected.
                                          type: object
                                        policy:
                                          description: Policies for selection.
                                          properties:
                                            resolution:
                                              default: Required
                                              description: |-
                                                Resolution specifies whether resolution of this reference is required.
                                                The default is 'Required', which means the reconcile will fail if the
                                                reference cannot be resolved. 'Optional' means this reference will be
                                                a no-op if it cannot be resolved.
                                              enum:
                                              - Required
                                              - Optional
                                              type: string
                                            resolve:
                                              description: |-
                                                Resolve specifies when this reference should be resolved. The default
                                                is 'IfNotPresent', which will attempt to resolve the reference only when
                                                the corresponding field is not present. Use 'Always' to resolve the
                                                reference on every reconcile.
                                              enum:
                                              - Always
                                              - IfNotPresent
                                              type: string
                                          type: object
                                      type: object
                                    muteTimings:
                                      description: |-
                                        (List of String) A list of mute timing names to apply to alerts that match this policy.
                                        A list of mute timing names to apply to alerts that match this policy.
                                      items:
                                        type: string
                                      type: array
                                    policy:
                                      description: |-
                                        (Block List) Routing rules for specific label sets. (see below for nested schema)
                                        Routing rules for specific label sets.
                                      items:
                                        properties:
                                          contactPoint:
                                            description: |-
                                              (String) The default contact point to route all unmatched notifications to.
                                              The contact point to route notifications that match this rule to.
                                            type: string
                                          contactPointRef:
                                            description: Reference to a ContactPoint
                                              in alerting to populate contactPoint.
                                            properties:
                                              name:
                                                description: Name of the referenced
                                                  object.
                                                type: string
                                              policy:
                                                description: Policies for referencing.
                                                properties:
                                                  resolution:
                                                    default: Required
                                                    description: |-
                                                      Resolution specifies whether resolution of this reference is required.
                                                      The default is 'Required', which means the reconcile will fail if the
                                                      reference cannot be resolved. 'Optional' means this reference will be
                                                      a no-op if it cannot be resolved.
                                                    enum:
                                                    - Required
                                                    - Optional
                                                    type: string
                                                  resolve:
                                                    description: |-
                                                      Resolve specifies when this reference should be resolved. The default
                                                      is 'IfNotPresent', which will attempt to resolve the reference only when
                                                      the corresponding field is not present. Use 'Always' to resolve the
                                                      reference on every reconcile.
                                                    enum:
                                                    - Always
                                                    - IfNotPresent
                                                    type: string
                                                type: object
                                            required:
                                            - name
                                            type: object
                                          contactPointSelector:
                                            description: Selector for a ContactPoint
                                              in alerting to populate contactPoint.
                                            properties:
                                              matchControllerRef:
                                                description: |-
                                                  MatchControllerRef ensures an object with the same controller reference
                                                  as the selecting object is selected.
                                                type: boolean
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: MatchLabels ensures an
                                                  object with matching labels is selected.
                                                type: object
                                              policy:
                                                description: Policies for selection.
                                                properties:
                                                  resolution:
                                                    default: Required
                                                    description: |-
                                                      Resolution specifies whether resolution of this reference is required.
                                                      The default is 'Required', which means the reconcile will fail if the
                                                      reference cannot be resolved. 'Optional' means this reference will be
                                                      a no-op if it cannot be resolved.
                                                    enum:
                                                    - Required
                                                    - Optional
                                                    type: string
                                                  resolve:
                                                    description: |-
                                                      Resolve specifies when this reference should be resolved. The default
                                                      is 'IfNotPresent', which will attempt to resolve the reference only when
                                                      the corresponding field is not present. Use 'Always' to resolve the
                                                      reference on every reconcile.
                                                    enum:
                                                    - Always
                                                    - IfNotPresent
                                                    type: string
                                                type: object
                                            type: object
                                          continue:
                                            description: |-
                                              (Boolean) Whether to continue matching subsequent rules if an alert matches the current rule. Otherwise, the rule will be 'consumed' by the first policy to match it.
                                              Whether to continue matching subsequent rules if an alert matches the current rule. Otherwise, the rule will be 'consumed' by the first policy to match it.
                                            type: boolean
                                          groupBy:
                                            description: |-
                                              (List of String) A list of alert labels to group alerts into notifications by. Use the special label ... to group alerts by all labels, effectively disabling grouping.
                                              A list of alert labels to group alerts into notifications by. Use the special label `...` to group alerts by all labels, effectively disabling grouping. Required for root policy only. If empty, the parent grouping is used.
                                            items:
                                              type: string
                                            type: array
                                          groupInterval:
                                            description: |-
                                              (String) Minimum time interval between two notifications for the same group. Default is 5 minutes.
                                              Minimum time interval between two notifications for the same group. Default is 5 minutes.
                                            type: string
                                          groupWait:
                                            description: |-
                                              (String) Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                                              Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                                            type: string
                                          matcher:
                                            description: |-
                                              (Block Set) Describes which labels this rule should match. When multiple matchers are supplied, an alert must match ALL matchers to be accepted by this policy. When no matchers are supplied, the rule will match all alert instances. (see below for nested schema)
                                              Describes which labels this rule should match. When multiple matchers are supplied, an alert must match ALL matchers to be accepted by this policy. When no matchers are supplied, the rule will match all alert instances.
                                            items:
                                              properties:
                                                label:
                                                  description: |-
                                                    (String) The name of the label to match against.
                                                    The name of the label to match against.
                                                  type: string
                                                match:
                                                  description: |-
                                                    (String) The operator to apply when matching values of the given label. Allowed operators are = for equality, != for negated equality, =~ for regex equality, and !~ for negated regex equality.
                                                    The operator to apply when matching values of the given label. Allowed operators are `=` for equality, `!=` for negated equality, `=~` for regex equality, and `!~` for negated regex equality.
                                                  type: string
                                                value:
                                                  description: |-
                                                    (String) The label value to match against.
                                                    The label value to match against.
                                                  type: string
                                              type: object
                                            type: array
                                          muteTimingRef:
                                            description: References to MuteTiming
                                              in alerting to populate muteTimings.
                                            items:
                                              description: A Reference to a named
                                                object.
                                              properties:
                                                name:
                                                  description: Name of the referenced
                                                    object.
                                                  type: string
                                                policy:
                                                  description: Policies for referencing.
                                                  properties:
                                                    resolution:
                                                      default: Required
                                                      description: |-
                                                        Resolution specifies whether resolution of this reference is required.
                                                        The default is 'Required', which means the reconcile will fail if the
                                                        reference cannot be resolved. 'Optional' means this reference will be
                                                        a no-op if it cannot be resolved.
                                                      enum:
                                                      - Required
                                                      - Optional
                                                      type: string
                                                    resolve:
                                                      description: |-
                                                        Resolve specifies when this reference should be resolved. The default
                                                        is 'IfNotPresent', which will attempt to resolve the reference only when
                                                        the corresponding field is not present. Use 'Always' to resolve the
                                                        reference on every reconcile.
                                                      enum:
                                                      - Always
                                                      - IfNotPresent
                                                      type: string
                                                  type: object
                                              required:
                                              - name
                                              type: object
                                            type: array
                                          muteTimingSelector:
                                            description: Selector for a list of MuteTiming
                                              in alerting to populate muteTimings.
                                            properties:
                                              matchControllerRef:
                                                description: |-
                                                  MatchControllerRef ensures an object with the same controller reference
                                                  as the selecting object is selected.
                                                type: boolean
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: MatchLabels ensures an
                                                  object with matching labels is selected.
                                                type: object
                                              policy:
                                                description: Policies for selection.
                                                properties:
                                                  resolution:
                                                    default: Required
                                                    description: |-
                                                      Resolution specifies whether resolution of this reference is required.
                                                      The default is 'Required', which means the reconcile will fail if the
                                                      reference cannot be resolved. 'Optional' means this reference will be
                                                      a no-op if it cannot be resolved.
                                                    enum:
                                                    - Required
                                                    - Optional
                                                    type: string
                                                  resolve:
                                                    description: |-
                                                      Resolve specifies when this reference should be resolved. The default
                                                      is 'IfNotPresent', which will attempt to resolve the reference only when
                                                      the corresponding field is not present. Use 'Always' to resolve the
                                                      reference on every reconcile.
                                                    enum:
                                                    - Always
                                                    - IfNotPresent
                                                    type: string
                                                type: object
                                            type: object
                                          muteTimings:
                                            description: |-
                                              (List of String) A list of mute timing names to apply to alerts that match this policy.
                                              A list of mute timing names to apply to alerts that match this policy.
                                            items:
                                              type: string
                                            type: array
                                          repeatInterval:
                                            description: |-
                                              sending a notification if an alert is still firing. Default is 4 hours.
                                              Minimum time interval for re-sending a notification if an alert is still firing. Default is 4 hours.
                                            type: string
                                        type: object
                                      type: array
                                    repeatInterval:
                                      description: |-
                                        sending a notification if an alert is still firing. Default is 4 hours.
                                        Minimum time interval for re-sending a notification if an alert is still firing. Default is 4 hours.
                                      type: string
                                  type: object
                                type: array
                              repeatInterval:
                                description: |-
                                  sending a notification if an alert is still firing. Default is 4 hours.
                                  Minimum time interval for re-sending a notification if an alert is still firing. Default is 4 hours.
                                type: string
                            type: object
                          type: array
                        repeatInterval:
                          description: |-
                            sending a notification if an alert is still firing. Default is 4 hours.
                            Minimum time interval for re-sending a notification if an alert is still firing. Default is 4 hours.
                          type: string
                      type: object
                    type: array
                  repeatInterval:
                    description: |-
                      sending a notification if an alert is still firing. Default is 4 hours.
                      Minimum time interval for re-sending a notification if an alert is still firing. Default is 4 hours.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  contactPoint:
                    description: |-
                      (String) The default contact point to route all unmatched notifications to.
                      The default contact point to route all unmatched notifications to.
                    type: string
                  contactPointRef:
                    description: Reference to a ContactPoint in alerting to populate
                      contactPoint.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  contactPointSelector:
                    description: Selector for a ContactPoint in alerting to populate
                      contactPoint.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  disableProvenance:
                    description: Defaults to false. Defaults to `false`.
                    type: boolean
                  groupBy:
                    description: |-
                      (List of String) A list of alert labels to group alerts into notifications by. Use the special label ... to group alerts by all labels, effectively disabling grouping.
                      A list of alert labels to group alerts into notifications by. Use the special label `...` to group alerts by all labels, effectively disabling grouping.
                    items:
                      type: string
                    type: array
                  groupInterval:
                    description: |-
                      (String) Minimum time interval between two notifications for the same group. Default is 5 minutes.
                      Minimum time interval between two notifications for the same group. Default is 5 minutes.
                    type: string
                  groupWait:
                    description: |-
                      (String) Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                      Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  policy:
                    description: |-
                      (Block List) Routing rules for specific label sets. (see below for nested schema)
                      Routing rules for specific label sets.
                    items:
                      properties:
                        contactPoint:
                          description: |-
                            (String) The default contact point to route all unmatched notifications to.
                            The contact point to route notifications that match this rule to.
                          type: string
                        contactPointRef:
                          description: Reference to a ContactPoint in alerting to
                            populate contactPoint.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        contactPointSelector:
                          description: Selector for a ContactPoint in alerting to
                            populate contactPoint.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        continue:
                          description: |-
                            (Boolean) Whether to continue matching subsequent rules if an alert matches the current rule. Otherwise, the rule will be 'consumed' by the first policy to match it.
                            Whether to continue matching subsequent rules if an alert matches the current rule. Otherwise, the rule will be 'consumed' by the first policy to match it.
                          type: boolean
                        groupBy:
                          description: |-
                            (List of String) A list of alert labels to group alerts into notifications by. Use the special label ... to group alerts by all labels, effectively disabling grouping.
                            A list of alert labels to group alerts into notifications by. Use the special label `...` to group alerts by all labels, effectively disabling grouping. Required for root policy only. If empty, the parent grouping is used.
                          items:
                            type: string
                          type: array
                        groupInterval:
                          description: |-
                            (String) Minimum time interval between two notifications for the same group. Default is 5 minutes.
                            Minimum time interval between two notifications for the same group. Default is 5 minutes.
                          type: string
                        groupWait:
                          description: |-
                            (String) Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                            Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                          type: string
                        matcher:
                          description: |-
                            (Block Set) Describes which labels this rule should match. When multiple matchers are supplied, an alert must match ALL matchers to be accepted by this policy. When no matchers are supplied, the rule will match all alert instances. (see below for nested schema)
                            Describes which labels this rule should match. When multiple matchers are supplied, an alert must match ALL matchers to be accepted by this policy. When no matchers are supplied, the rule will match all alert instances.
                          items:
                            properties:
                              label:
                                description: |-
                                  (String) The name of the label to match against.
                                  The name of the label to match against.
                                type: string
                              match:
                                description: |-
                                  (String) The operator to apply when matching values of the given label. Allowed operators are = for equality, != for negated equality, =~ for regex equality, and !~ for negated regex equality.
                                  The operator to apply when matching values of the given label. Allowed operators are `=` for equality, `!=` for negated equality, `=~` for regex equality, and `!~` for negated regex equality.
                                type: string
                              value:
                                description: |-
                                  (String) The label value to match against.
                                  The label value to match against.
                                type: string
                            type: object
                          type: array
                        muteTimingRef:
                          description: References to MuteTiming in alerting to populate
                            muteTimings.
                          items:
                            description: A Reference to a named object.
                            properties:
                              name:
                                description: Name of the referenced object.
                                type: string
                              policy:
                                description: Policies for referencing.
                                properties:
                                  resolution:
                                    default: Required
                                    description: |-
                                      Resolution specifies whether resolution of this reference is required.
                                      The default is 'Required', which means the reconcile will fail if the
                                      reference cannot be resolved. 'Optional' means this reference will be
                                      a no-op if it cannot be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: |-
                                      Resolve specifies when this reference should be resolved. The default
                                      is 'IfNotPresent', which will attempt to resolve the reference only when
                                      the corresponding field is not present. Use 'Always' to resolve the
                                      reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        muteTimingSelector:
                          description: Selector for a list of MuteTiming in alerting
                            to populate muteTimings.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        muteTimings:
                          description: |-
                            (List of String) A list of mute timing names to apply to alerts that match this policy.
                            A list of mute timing names to apply to alerts that match this policy.
                          items:
                            type: string
                          type: array
                        policy:
                          description: |-
                            (Block List) Routing rules for specific label sets. (see below for nested schema)
                            Routing rules for specific label sets.
                          items:
                            properties:
                              contactPoint:
                                description: |-
                                  (String) The default contact point to route all unmatched notifications to.
                                  The contact point to route notifications that match this rule to.
                                type: string
                              contactPointRef:
                                description: Reference to a ContactPoint in alerting
                                  to populate contactPoint.
                                properties:
                                  name:
                                    description: Name of the referenced object.
                                    type: string
                                  policy:
                                    description: Policies for referencing.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: |-
                                          Resolution specifies whether resolution of this reference is required.
                                          The default is 'Required', which means the reconcile will fail if the
                                          reference cannot be resolved. 'Optional' means this reference will be
                                          a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: |-
                                          Resolve specifies when this reference should be resolved. The default
                                          is 'IfNotPresent', which will attempt to resolve the reference only when
                                          the corresponding field is not present. Use 'Always' to resolve the
                                          reference on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                required:
                                - name
                                type: object
                              contactPointSelector:
                                description: Selector for a ContactPoint in alerting
                                  to populate contactPoint.
                                properties:
                                  matchControllerRef:
                                    description: |-
                                      MatchControllerRef ensures an object with the same controller reference
                                      as the selecting object is selected.
                                    type: boolean
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: MatchLabels ensures an object with
                                      matching labels is selected.
                                    type: object
                                  policy:
                                    description: Policies for selection.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: |-
                                          Resolution specifies whether resolution of this reference is required.
                                          The default is 'Required', which means the reconcile will fail if the
                                          reference cannot be resolved. 'Optional' means this reference will be
                                          a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: |-
                                          Resolve specifies when this reference should be resolved. The default
                                          is 'IfNotPresent', which will attempt to resolve the reference only when
                                          the corresponding field is not present. Use 'Always' to resolve the
                                          reference on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                type: object
                              continue:
                                description: |-
                                  (Boolean) Whether to continue matching subsequent rules if an alert matches the current rule. Otherwise, the rule will be 'consumed' by the first policy to match it.
                                  Whether to continue matching subsequent rules if an alert matches the current rule. Otherwise, the rule will be 'consumed' by the first policy to match it.
                                type: boolean
                              groupBy:
                                description: |-
                                  (List of String) A list of alert labels to group alerts into notifications by. Use the special label ... to group alerts by all labels, effectively disabling grouping.
                                  A list of alert labels to group alerts into notifications by. Use the special label `...` to group alerts by all labels, effectively disabling grouping. Required for root policy only. If empty, the parent grouping is used.
                                items:
                                  type: string
                                type: array
                              groupInterval:
                                description: |-
                                  (String) Minimum time interval between two notifications for the same group. Default is 5 minutes.
                                  Minimum time interval between two notifications for the same group. Default is 5 minutes.
                                type: string
                              groupWait:
                                description: |-
                                  (String) Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                                  Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                                type: string
                              matcher:
                                description: |-
                                  (Block Set) Describes which labels this rule should match. When multiple matchers are supplied, an alert must match ALL matchers to be accepted by this policy. When no matchers are supplied, the rule will match all alert instances. (see below for nested schema)
                                  Describes which labels this rule should match. When multiple matchers are supplied, an alert must match ALL matchers to be accepted by this policy. When no matchers are supplied, the rule will match all alert instances.
                                items:
                                  properties:
                                    label:
                                      description: |-
                                        (String) The name of the label to match against.
                                        The name of the label to match against.
                                      type: string
                                    match:
                                      description: |-
                                        (String) The operator to apply when matching values of the given label. Allowed operators are = for equality, != for negated equality, =~ for regex equality, and !~ for negated regex equality.
                                        The operator to apply when matching values of the given label. Allowed operators are `=` for equality, `!=` for negated equality, `=~` for regex equality, and `!~` for negated regex equality.
                                      type: string
                                    value:
                                      description: |-
                                        (String) The label value to match against.
                                        The label value to match against.
                                      type: string
                                  type: object
                                type: array
                              muteTimingRef:
                                description: References to MuteTiming in alerting
                                  to populate muteTimings.
                                items:
                                  description: A Reference to a named object.
                                  properties:
                                    name:
                                      description: Name of the referenced object.
                                      type: string
                                    policy:
                                      description: Policies for referencing.
                                      properties:
                                        resolution:
                                          default: Required
                                          description: |-
                                            Resolution specifies whether resolution of this reference is required.
                                            The default is 'Required', which means the reconcile will fail if the
                                            reference cannot be resolved. 'Optional' means this reference will be
                                            a no-op if it cannot be resolved.
                                          enum:
                                          - Required
                                          - Optional
                                          type: string
                                        resolve:
                                          description: |-
                                            Resolve specifies when this reference should be resolved. The default
                                            is 'IfNotPresent', which will attempt to resolve the reference only when
                                            the corresponding field is not present. Use 'Always' to resolve the
                                            reference on every reconcile.
                                          enum:
                                          - Always
                                          - IfNotPresent
                                          type: string
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                              muteTimingSelector:
                                description: Selector for a list of MuteTiming in
                                  alerting to populate muteTimings.
                                properties:
                                  matchControllerRef:
                                    description: |-
                                      MatchControllerRef ensures an object with the same controller reference
                                      as the selecting object is selected.
                                    type: boolean
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: MatchLabels ensures an object with
                                      matching labels is selected.
                                    type: object
                                  policy:
                                    description: Policies for selection.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: |-
                                          Resolution specifies whether resolution of this reference is required.
                                          The default is 'Required', which means the reconcile will fail if the
                                          reference cannot be resolved. 'Optional' means this reference will be
                                          a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: |-
                                          Resolve specifies when this reference should be resolved. The default
                                          is 'IfNotPresent', which will attempt to resolve the reference only when
                                          the corresponding field is not present. Use 'Always' to resolve the
                                          reference on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                type: object
                              muteTimings:
                                description: |-
                                  (List of String) A list of mute timing names to apply to alerts that match this policy.
                                  A list of mute timing names to apply to alerts that match this policy.
                                items:
                                  type: string
                                type: array
                              policy:
                                description: |-
                                  (Block List) Routing rules for specific label sets. (see below for nested schema)
                                  Routing rules for specific label sets.
                                items:
                                  properties:
                                    contactPoint:
                                      description: |-
                                        (String) The default contact point to route all unmatched notifications to.
                                        The contact point to route notifications that match this rule to.
                                      type: string
                                    contactPointRef:
                                      description: Reference to a ContactPoint in
                                        alerting to populate contactPoint.
                                      properties:
                                        name:
                                          description: Name of the referenced object.
                                          type: string
                                        policy:
                                          description: Policies for referencing.
                                          properties:
                                            resolution:
                                              default: Required
                                              description: |-
                                                Resolution specifies whether resolution of this reference is required.
                                                The default is 'Required', which means the reconcile will fail if the
                                                reference cannot be resolved. 'Optional' means this reference will be
                                                a no-op if it cannot be resolved.
                                              enum:
                                              - Required
                                              - Optional
                                              type: string
                                            resolve:
                                              description: |-
                                                Resolve specifies when this reference should be resolved. The default
                                                is 'IfNotPresent', which will attempt to resolve the reference only when
                                                the corresponding field is not present. Use 'Always' to resolve the
                                                reference on every reconcile.
                                              enum:
                                              - Always
                                              - IfNotPresent
                                              type: string
                                          type: object
                                      required:
                                      - name
                                      type: object
                                    contactPointSelector:
                                      description: Selector for a ContactPoint in
                                        alerting to populate contactPoint.
                                      properties:
                                        matchControllerRef:
                                          description: |-
                                            MatchControllerRef ensures an object with the same controller reference
                                            as the selecting object is selected.
                                          type: boolean
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: MatchLabels ensures an object
                                            with matching labels is selected.
                                          type: object
                                        policy:
                                          description: Policies for selection.
                                          properties:
                                            resolution:
                                              default: Required
                                              description: |-
                                                Resolution specifies whether resolution of this reference is required.
                                                The default is 'Required', which means the reconcile will fail if the
                                                reference cannot be resolved. 'Optional' means this reference will be
                                                a no-op if it cannot be resolved.
                                              enum:
                                              - Required
                                              - Optional
                                              type: string
                                            resolve:
                                              description: |-
                                                Resolve specifies when this reference should be resolved. The default
                                                is 'IfNotPresent', which will attempt to resolve the reference only when
                                                the corresponding field is not present. Use 'Always' to resolve the
                                                reference on every reconcile.
                                              enum:
                                              - Always
                                              - IfNotPresent
                                              type: string
                                          type: object
                                      type: object
                                    continue:
                                      description: |-
                                        (Boolean) Whether to continue matching subsequent rules if an alert matches the current rule. Otherwise, the rule will be 'consumed' by the first policy to match it.
                                        Whether to continue matching subsequent rules if an alert matches the current rule. Otherwise, the rule will be 'consumed' by the first policy to match it.
                                      type: boolean
                                    groupBy:
                                      description: |-
                                        (List of String) A list of alert labels to group alerts into notifications by. Use the special label ... to group alerts by all labels, effectively disabling grouping.
                                        A list of alert labels to group alerts into notifications by. Use the special label `...` to group alerts by all labels, effectively disabling grouping. Required for root policy only. If empty, the parent grouping is used.
                                      items:
                                        type: string
                                      type: array
                                    groupInterval:
                                      description: |-
                                        (String) Minimum time interval between two notifications for the same group. Default is 5 minutes.
                                        Minimum time interval between two notifications for the same group. Default is 5 minutes.
                                      type: string
                                    groupWait:
                                      description: |-
                                        (String) Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                                        Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                                      type: string
                                    matcher:
                                      description: |-
                                        (Block Set) Describes which labels this rule should match. When multiple matchers are supplied, an alert must match ALL matchers to be accepted by this policy. When no matchers are supplied, the rule will match all alert instances. (see below for nested schema)
                                        Describes which labels this rule should match. When multiple matchers are supplied, an alert must match ALL matchers to be accepted by this policy. When no matchers are supplied, the rule will match all alert instances.
                                      items:
                                        properties:
                                          label:
                                            description: |-
                                              (String) The name of the label to match against.
                                              The name of the label to match against.
                                            type: string
                                          match:
                                            description: |-
                                              (String) The operator to apply when matching values of the given label. Allowed operators are = for equality, != for negated equality, =~ for regex equality, and !~ for negated regex equality.
                                              The operator to apply when matching values of the given label. Allowed operators are `=` for equality, `!=` for negated equality, `=~` for regex equality, and `!~` for negated regex equality.
                                            type: string
                                          value:
                                            description: |-
                                              (String) The label value to match against.
                                              The label value to match against.
                                            type: string
                                        type: object
                                      type: array
                                    muteTimingRef:
                                      description: References to MuteTiming in alerting
                                        to populate muteTimings.
                                      items:
                                        description: A Reference to a named object.
                                        properties:
                                          name:
                                            description: Name of the referenced object.
                                            type: string
                                          policy:
                                            description: Policies for referencing.
                                            properties:
                                              resolution:
                                                default: Required
                                                description: |-
                                                  Resolution specifies whether resolution of this reference is required.
                                                  The default is 'Required', which means the reconcile will fail if the
                                                  reference cannot be resolved. 'Optional' means this reference will be
                                                  a no-op if it cannot be resolved.
                                                enum:
                                                - Required
                                                - Optional
                                                type: string
                                              resolve:
                                                description: |-
                                                  Resolve specifies when this reference should be resolved. The default
                                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                                  the corresponding field is not present. Use 'Always' to resolve the
                                                  reference on every reconcile.
                                                enum:
                                                - Always
                                                - IfNotPresent
                                                type: string
                                            type: object
                                        required:
                                        - name
                                        type: object
                                      type: array
                                    muteTimingSelector:
                                      description: Selector for a list of MuteTiming
                                        in alerting to populate muteTimings.
                                      properties:
                                        matchControllerRef:
                                          description: |-
                                            MatchControllerRef ensures an object with the same controller reference
                                            as the selecting object is selected.
                                          type: boolean
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: MatchLabels ensures an object
                                            with matching labels is selected.
                                          type: object
                                        policy:
                                          description: Policies for selection.
                                          properties:
                                            resolution:
                                              default: Required
                                              description: |-
                                                Resolution specifies whether resolution of this reference is required.
                                                The default is 'Required', which means the reconcile will fail if the
                                                reference cannot be resolved. 'Optional' means this reference will be
                                                a no-op if it cannot be resolved.
                                              enum:
                                              - Required
                                              - Optional
                                              type: string
                                            resolve:
                                              description: |-
                                                Resolve specifies when this reference should be resolved. The default
                                                is 'IfNotPresent', which will attempt to resolve the reference only when
                                                the corresponding field is not present. Use 'Always' to resolve the
                                                reference on every reconcile.
                                              enum:
                                              - Always
                                              - IfNotPresent
                                              type: string
                                          type: object
                                      type: object
                                    muteTimings:
                                      description: |-
                                        (List of String) A list of mute timing names to apply to alerts that match this policy.
                                        A list of mute timing names to apply to alerts that match this policy.
                                      items:
                                        type: string
                                      type: array
                                    policy:
                                      description: |-
                                        (Block List) Routing rules for specific label sets. (see below for nested schema)
                                        Routing rules for specific label sets.
                                      items:
                                        properties:
                                          contactPoint:
                                            description: |-
                                              (String) The default contact point to route all unmatched notifications to.
                                              The contact point to route notifications that match this rule to.
                                            type: string
                                          contactPointRef:
                                            description: Reference to a ContactPoint
                                              in alerting to populate contactPoint.
                                            properties:
                                              name:
                                                description: Name of the referenced
                                                  object.
                                                type: string
                                              policy:
                                                description: Policies for referencing.
                                                properties:
                                                  resolution:
                                                    default: Required
                                                    description: |-
                                                      Resolution specifies whether resolution of this reference is required.
                                                      The default is 'Required', which means the reconcile will fail if the
                                                      reference cannot be resolved. 'Optional' means this reference will be
                                                      a no-op if it cannot be resolved.
                                                    enum:
                                                    - Required
                                                    - Optional
                                                    type: string
                                                  resolve:
                                                    description: |-
                                                      Resolve specifies when this reference should be resolved. The default
                                                      is 'IfNotPresent', which will attempt to resolve the reference only when
                                                      the corresponding field is not present. Use 'Always' to resolve the
                                                      reference on every reconcile.
                                                    enum:
                                                    - Always
                                                    - IfNotPresent
                                                    type: string
                                                type: object
                                            required:
                                            - name
                                            type: object
                                          contactPointSelector:
                                            description: Selector for a ContactPoint
                                              in alerting to populate contactPoint.
                                            properties:
                                              matchControllerRef:
                                                description: |-
                                                  MatchControllerRef ensures an object with the same controller reference
                                                  as the selecting object is selected.
                                                type: boolean
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: MatchLabels ensures an
                                                  object with matching labels is selected.
                                                type: object
                                              policy:
                                                description: Policies for selection.
                                                properties:
                                                  resolution:
                                                    default: Required
                                                    description: |-
                                                      Resolution specifies whether resolution of this reference is required.
                                                      The default is 'Required', which means the reconcile will fail if the
                                                      reference cannot be resolved. 'Optional' means this reference will be
                                                      a no-op if it cannot be resolved.
                                                    enum:
                                                    - Required
                                                    - Optional
                                                    type: string
                                                  resolve:
                                                    description: |-
                                                      Resolve specifies when this reference should be resolved. The default
                                                      is 'IfNotPresent', which will attempt to resolve the reference only when
                                                      the corresponding field is not present. Use 'Always' to resolve the
                                                      reference on every reconcile.
                                                    enum:
                                                    - Always
                                                    - IfNotPresent
                                                    type: string
                                                type: object
                                            type: object
                                          continue:
                                            description: |-
                                              (Boolean) Whether to continue matching subsequent rules if an alert matches the current rule. Otherwise, the rule will be 'consumed' by the first policy to match it.
                                              Whether to continue matching subsequent rules if an alert matches the current rule. Otherwise, the rule will be 'consumed' by the first policy to match it.
                                            type: boolean
                                          groupBy:
                                            description: |-
                                              (List of String) A list of alert labels to group alerts into notifications by. Use the special label ... to group alerts by all labels, effectively disabling grouping.
                                              A list of alert labels to group alerts into notifications by. Use the special label `...` to group alerts by all labels, effectively disabling grouping. Required for root policy only. If empty, the parent grouping is used.
                                            items:
                                              type: string
                                            type: array
                                          groupInterval:
                                            description: |-
                                              (String) Minimum time interval between two notifications for the same group. Default is 5 minutes.
                                              Minimum time interval between two notifications for the same group. Default is 5 minutes.
                                            type: string
                                          groupWait:
                                            description: |-
                                              (String) Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                                              Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                                            type: string
                                          matcher:
                                            description: |-
                                              (Block Set) Describes which labels this rule should match. When multiple matchers are supplied, an alert must match ALL matchers to be accepted by this policy. When no matchers are supplied, the rule will match all alert instances. (see below for nested schema)
                                              Describes which labels this rule should match. When multiple matchers are supplied, an alert must match ALL matchers to be accepted by this policy. When no matchers are supplied, the rule will match all alert instances.
                                            items:
                                              properties:
                                                label:
                                                  description: |-
                                                    (String) The name of the label to match against.
                                                    The name of the label to match against.
                                                  type: string
                                                match:
                                                  description: |-
                                                    (String) The operator to apply when matching values of the given label. Allowed operators are = for equality, != for negated equality, =~ for regex equality, and !~ for negated regex equality.
                                                    The operator to apply when matching values of the given label. Allowed operators are `=` for equality, `!=` for negated equality, `=~` for regex equality, and `!~` for negated regex equality.
                                                  type: string
                                                value:
                                                  description: |-
                                                    (String) The label value to match against.
                                                    The label value to match against.
                                                  type: string
                                              type: object
                                            type: array
                                          muteTimingRef:
                                            description: References to MuteTiming
                                              in alerting to populate muteTimings.
                                            items:
                                              description: A Reference to a named
                                                object.
                                              properties:
                                                name:
                                                  description: Name of the referenced
                                                    object.
                                                  type: string
                                                policy:
                                                  description: Policies for referencing.
                                                  properties:
                                                    resolution:
                                                      default: Required
                                                      description: |-
                                                        Resolution specifies whether resolution of this reference is required.
                                                        The default is 'Required', which means the reconcile will fail if the
                                                        reference cannot be resolved. 'Optional' means this reference will be
                                                        a no-op if it cannot be resolved.
                                                      enum:
                                                      - Required
                                                      - Optional
                                                      type: string
                                                    resolve:
                                                      description: |-
                                                        Resolve specifies when this reference should be resolved. The default
                                                        is 'IfNotPresent', which will attempt to resolve the reference only when
                                                        the corresponding field is not present. Use 'Always' to resolve the
                                                        reference on every reconcile.
                                                      enum:
                                                      - Always
                                                      - IfNotPresent
                                                      type: string
                                                  type: object
                                              required:
                                              - name
                                              type: object
                                            type: array
                                          muteTimingSelector:
                                            description: Selector for a list of MuteTiming
                                              in alerting to populate muteTimings.
                                            properties:
                                              matchControllerRef:
                                                description: |-
                                                  MatchControllerRef ensures an object with the same controller reference
                                                  as the selecting object is selected.
                                                type: boolean
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: MatchLabels ensures an
                                                  object with matching labels is selected.
                                                type: object
                                              policy:
                                                description: Policies for selection.
                                                properties:
                                                  resolution:
                                                    default: Required
                                                    description: |-
                                                      Resolution specifies whether resolution of this reference is required.
                                                      The default is 'Required', which means the reconcile will fail if the
                                                      reference cannot be resolved. 'Optional' means this reference will be
                                                      a no-op if it cannot be resolved.
                                                    enum:
                                                    - Required
                                                    - Optional
                                                    type: string
                                                  resolve:
                                                    description: |-
                                                      Resolve specifies when this reference should be resolved. The default
                                                      is 'IfNotPresent', which will attempt to resolve the reference only when
                                                      the corresponding field is not present. Use 'Always' to resolve the
                                                      reference on every reconcile.
                                                    enum:
                                                    - Always
                                                    - IfNotPresent
                                                    type: string
                                                type: object
                                            type: object
                                          muteTimings:
                                            description: |-
                                              (List of String) A list of mute timing names to apply to alerts that match this policy.
                                              A list of mute timing names to apply to alerts that match this policy.
                                            items:
                                              type: string
                                            type: array
                                          repeatInterval:
                                            description: |-
                                              sending a notification if an alert is still firing. Default is 4 hours.
                                              Minimum time interval for re-sending a notification if an alert is still firing. Default is 4 hours.
                                            type: string
                                        type: object
                                      type: array
                                    repeatInterval:
                                      description: |-
                                        sending a notification if an alert is still firing. Default is 4 hours.
                                        Minimum time interval for re-sending a notification if an alert is still firing. Default is 4 hours.
                                      type: string
                                  type: object
                                type: array
                              repeatInterval:
                                description: |-
                                  sending a notification if an alert is still firing. Default is 4 hours.
                                  Minimum time interval for re-sending a notification if an alert is still firing. Default is 4 hours.
                                type: string
                            type: object
                          type: array
                        repeatInterval:
                          description: |-
                            sending a notification if an alert is still firing. Default is 4 hours.
                            Minimum time interval for re-sending a notification if an alert is still firing. Default is 4 hours.
                          type: string
                      type: object
                    type: array
                  repeatInterval:
                    description: |-
                      sending a notification if an alert is still firing. Default is 4 hours.
                      Minimum time interval for re-sending a notification if an alert is still firing. Default is 4 hours.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.groupBy is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.groupBy)
                || (has(self.initProvider) && has(self.initProvider.groupBy))'
          status:
            description: NotificationPolicyStatus defines the observed state of NotificationPolicy.
            properties:
              atProvider:
                properties:
                  contactPoint:
                    description: |-
                      (String) The default contact point to route all unmatched notifications to.
                      The default contact point to route all unmatched notifications to.
                    type: string
                  disableProvenance:
                    description: Defaults to false. Defaults to `false`.
                    type: boolean
                  groupBy:
                    description: |-
                      (List of String) A list of alert labels to group alerts into notifications by. Use the special label ... to group alerts by all labels, effectively disabling grouping.
                      A list of alert labels to group alerts into notifications by. Use the special label `...` to group alerts by all labels, effectively disabling grouping.
                    items:
                      type: string
                    type: array
                  groupInterval:
                    description: |-
                      (String) Minimum time interval between two notifications for the same group. Default is 5 minutes.
                      Minimum time interval between two notifications for the same group. Default is 5 minutes.
                    type: string
                  groupWait:
                    description: |-
                      (String) Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                      Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                    type: string
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  policy:
                    description: |-
                      (Block List) Routing rules for specific label sets. (see below for nested schema)
                      Routing rules for specific label sets.
                    items:
                      properties:
                        contactPoint:
                          description: |-
                            (String) The default contact point to route all unmatched notifications to.
                            The contact point to route notifications that match this rule to.
                          type: string
                        continue:
                          description: |-
                            (Boolean) Whether to continue matching subsequent rules if an alert matches the current rule. Otherwise, the rule will be 'consumed' by the first policy to match it.
                            Whether to continue matching subsequent rules if an alert matches the current rule. Otherwise, the rule will be 'consumed' by the first policy to match it.
                          type: boolean
                        groupBy:
                          description: |-
                            (List of String) A list of alert labels to group alerts into notifications by. Use the special label ... to group alerts by all labels, effectively disabling grouping.
                            A list of alert labels to group alerts into notifications by. Use the special label `...` to group alerts by all labels, effectively disabling grouping. Required for root policy only. If empty, the parent grouping is used.
                          items:
                            type: string
                          type: array
                        groupInterval:
                          description: |-
                            (String) Minimum time interval between two notifications for the same group. Default is 5 minutes.
                            Minimum time interval between two notifications for the same group. Default is 5 minutes.
                          type: string
                        groupWait:
                          description: |-
                            (String) Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                            Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                          type: string
                        matcher:
                          description: |-
                            (Block Set) Describes which labels this rule should match. When multiple matchers are supplied, an alert must match ALL matchers to be accepted by this policy. When no matchers are supplied, the rule will match all alert instances. (see below for nested schema)
                            Describes which labels this rule should match. When multiple matchers are supplied, an alert must match ALL matchers to be accepted by this policy. When no matchers are supplied, the rule will match all alert instances.
                          items:
                            properties:
                              label:
                                description: |-
                                  (String) The name of the label to match against.
                                  The name of the label to match against.
                                type: string
                              match:
                                description: |-
                                  (String) The operator to apply when matching values of the given label. Allowed operators are = for equality, != for negated equality, =~ for regex equality, and !~ for negated regex equality.
                                  The operator to apply when matching values of the given label. Allowed operators are `=` for equality, `!=` for negated equality, `=~` for regex equality, and `!~` for negated regex equality.
                                type: string
                              value:
                                description: |-
                                  (String) The label value to match against.
                                  The label value to match against.
                                type: string
                            type: object
                          type: array
                        muteTimings:
                          description: |-
                            (List of String) A list of mute timing names to apply to alerts that match this policy.
                            A list of mute timing names to apply to alerts that match this policy.
                          items:
                            type: string
                          type: array
                        policy:
                          description: |-
                            (Block List) Routing rules for specific label sets. (see below for nested schema)
                            Routing rules for specific label sets.
                          items:
                            properties:
                              contactPoint:
                                description: |-
                                  (String) The default contact point to route all unmatched notifications to.
                                  The contact point to route notifications that match this rule to.
                                type: string
                              continue:
                                description: |-
                                  (Boolean) Whether to continue matching subsequent rules if an alert matches the current rule. Otherwise, the rule will be 'consumed' by the first policy to match it.
                                  Whether to continue matching subsequent rules if an alert matches the current rule. Otherwise, the rule will be 'consumed' by the first policy to match it.
                                type: boolean
                              groupBy:
                                description: |-
                                  (List of String) A list of alert labels to group alerts into notifications by. Use the special label ... to group alerts by all labels, effectively disabling grouping.
                                  A list of alert labels to group alerts into notifications by. Use the special label `...` to group alerts by all labels, effectively disabling grouping. Required for root policy only. If empty, the parent grouping is used.
                                items:
                                  type: string
                                type: array
                              groupInterval:
                                description: |-
                                  (String) Minimum time interval between two notifications for the same group. Default is 5 minutes.
                                  Minimum time interval between two notifications for the same group. Default is 5 minutes.
                                type: string
                              groupWait:
                                description: |-
                                  (String) Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                                  Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                                type: string
                              matcher:
                                description: |-
                                  (Block Set) Describes which labels this rule should match. When multiple matchers are supplied, an alert must match ALL matchers to be accepted by this policy. When no matchers are supplied, the rule will match all alert instances. (see below for nested schema)
                                  Describes which labels this rule should match. When multiple matchers are supplied, an alert must match ALL matchers to be accepted by this policy. When no matchers are supplied, the rule will match all alert instances.
                                items:
                                  properties:
                                    label:
                                      description: |-
                                        (String) The name of the label to match against.
                                        The name of the label to match against.
                                      type: string
                                    match:
                                      description: |-
                                        (String) The operator to apply when matching values of the given label. Allowed operators are = for equality, != for negated equality, =~ for regex equality, and !~ for negated regex equality.
                                        The operator to apply when matching values of the given label. Allowed operators are `=` for equality, `!=` for negated equality, `=~` for regex equality, and `!~` for negated regex equality.
                                      type: string
                                    value:
                                      description: |-
                                        (String) The label value to match against.
                                        The label value to match against.
                                      type: string
                                  type: object
                                type: array
                              muteTimings:
                                description: |-
                                  (List of String) A list of mute timing names to apply to alerts that match this policy.
                                  A list of mute timing names to apply to alerts that match this policy.
                                items:
                                  type: string
                                type: array
                              policy:
                                description: |-
                                  (Block List) Routing rules for specific label sets. (see below for nested schema)
                                  Routing rules for specific label sets.
                                items:
                                  properties:
                                    contactPoint:
                                      description: |-
                                        (String) The default contact point to route all unmatched notifications to.
                                        The contact point to route notifications that match this rule to.
                                      type: string
                                    continue:
                                      description: |-
                                        (Boolean) Whether to continue matching subsequent rules if an alert matches the current rule. Otherwise, the rule will be 'consumed' by the first policy to match it.
                                        Whether to continue matching subsequent rules if an alert matches the current rule. Otherwise, the rule will be 'consumed' by the first policy to match it.
                                      type: boolean
                                    groupBy:
                                      description: |-
                                        (List of String) A list of alert labels to group alerts into notifications by. Use the special label ... to group alerts by all labels, effectively disabling grouping.
                                        A list of alert labels to group alerts into notifications by. Use the special label `...` to group alerts by all labels, effectively disabling grouping. Required for root policy only. If empty, the parent grouping is used.
                                      items:
                                        type: string
                                      type: array
                                    groupInterval:
                                      description: |-
                                        (String) Minimum time interval between two notifications for the same group. Default is 5 minutes.
                                        Minimum time interval between two notifications for the same group. Default is 5 minutes.
                                      type: string
                                    groupWait:
                                      description: |-
                                        (String) Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                                        Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                                      type: string
                                    matcher:
                                      description: |-
                                        (Block Set) Describes which labels this rule should match. When multiple matchers are supplied, an alert must match ALL matchers to be accepted by this policy. When no matchers are supplied, the rule will match all alert instances. (see below for nested schema)
                                        Describes which labels this rule should match. When multiple matchers are supplied, an alert must match ALL matchers to be accepted by this policy. When no matchers are supplied, the rule will match all alert instances.
                                      items:
                                        properties:
                                          label:
                                            description: |-
                                              (String) The name of the label to match against.
                                              The name of the label to match against.
                                            type: string
                                          match:
                                            description: |-
                                              (String) The operator to apply when matching values of the given label. Allowed operators are = for equality, != for negated equality, =~ for regex equality, and !~ for negated regex equality.
                                              The operator to apply when matching values of the given label. Allowed operators are `=` for equality, `!=` for negated equality, `=~` for regex equality, and `!~` for negated regex equality.
                                            type: string
                                          value:
                                            description: |-
                                              (String) The label value to match against.
                                              The label value to match against.
                                            type: string
                                        type: object
                                      type: array
                                    muteTimings:
                                      description: |-
                                        (List of String) A list of mute timing names to apply to alerts that match this policy.
                                        A list of mute timing names to apply to alerts that match this policy.
                                      items:
                                        type: string
                                      type: array
                                    policy:
                                      description: |-
                                        (Block List) Routing rules for specific label sets. (see below for nested schema)
                                        Routing rules for specific label sets.
                                      items:
                                        properties:
                                          contactPoint:
                                            description: |-
                                              (String) The default contact point to route all unmatched notifications to.
                                              The contact point to route notifications that match this rule to.
                                            type: string
                                          continue:
                                            description: |-
                                              (Boolean) Whether to continue matching subsequent rules if an alert matches the current rule. Otherwise, the rule will be 'consumed' by the first policy to match it.
                                              Whether to continue matching subsequent rules if an alert matches the current rule. Otherwise, the rule will be 'consumed' by the first policy to match it.
                                            type: boolean
                                          groupBy:
                                            description: |-
                                              (List of String) A list of alert labels to group alerts into notifications by. Use the special label ... to group alerts by all labels, effectively disabling grouping.
                                              A list of alert labels to group alerts into notifications by. Use the special label `...` to group alerts by all labels, effectively disabling grouping. Required for root policy only. If empty, the parent grouping is used.
                                            items:
                                              type: string
                                            type: array
                                          groupInterval:
                                            description: |-
                                              (String) Minimum time interval between two notifications for the same group. Default is 5 minutes.
                                              Minimum time interval between two notifications for the same group. Default is 5 minutes.
                                            type: string
                                          groupWait:
                                            description: |-
                                              (String) Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                                              Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                                            type: string
                                          matcher:
                                            description: |-
                                              (Block Set) Describes which labels this rule should match. When multiple matchers are supplied, an alert must match ALL matchers to be accepted by this policy. When no matchers are supplied, the rule will match all alert instances. (see below for nested schema)
                                              Describes which labels this rule should match. When multiple matchers are supplied, an alert must match ALL matchers to be accepted by this policy. When no matchers are supplied, the rule will match all alert instances.
                                            items:
                                              properties:
                                                label:
                                                  description: |-
                                                    (String) The name of the label to match against.
                                                    The name of the label to match against.
                                                  type: string
                                                match:
                                                  description: |-
                                                    (String) The operator to apply when matching values of the given label. Allowed operators are = for equality, != for negated equality, =~ for regex equality, and !~ for negated regex equality.
                                                    The operator to apply when matching values of the given label. Allowed operators are `=` for equality, `!=` for negated equality, `=~` for regex equality, and `!~` for negated regex equality.
                                                  type: string
                                                value:
                                                  description: |-
                                                    (String) The label value to match against.
                                                    The label value to match against.
                                                  type: string
                                              type: object
                                            type: array
                                          muteTimings:
                                            description: |-
                                              (List of String) A list of mute timing names to apply to alerts that match this policy.
                                              A list of mute timing names to apply to alerts that match this policy.
                                            items:
                                              type: string
                                            type: array
                                          repeatInterval:
                                            description: |-
                                              sending a notification if an alert is still firing. Default is 4 hours.
                                              Minimum time interval for re-sending a notification if an alert is still firing. Default is 4 hours.
                                            type: string
                                        type: object
                                      type: array
                                    repeatInterval:
                                      description: |-
                                        sending a notification if an alert is still firing. Default is 4 hours.
                                        Minimum time interval for re-sending a notification if an alert is still firing. Default is 4 hours.
                                      type: string
                                  type: object
                                type: array
                              repeatInterval:
                                description: |-
                                  sending a notification if an alert is still firing. Default is 4 hours.
                                  Minimum time interval for re-sending a notification if an alert is still firing. Default is 4 hours.
                                type: string
                            type: object
                          type: array
                        repeatInterval:
                          description: |-
                            sending a notification if an alert is still firing. Default is 4 hours.
                            Minimum time interval for re-sending a notification if an alert is still firing. Default is 4 hours.
                          type: string
                      type: object
                    type: array
                  repeatInterval:
                    description: |-
                      sending a notification if an alert is still firing. Default is 4 hours.
                      Minimum time interval for re-sending a notification if an alert is still firing. Default is 4 hours.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: rulegroups.alerting.grafana.crossplane.io
spec:
  group: alerting.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: RuleGroup
    listKind: RuleGroupList
    plural: rulegroups
    singular: rulegroup
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RuleGroup is the Schema for the RuleGroups API. Manages Grafana
          Alerting rule groups. Official documentation https://grafana.com/docs/grafana/latest/alerting/alerting-rules/HTTP
          API https://grafana.com/docs/grafana/latest/developers/http_api/alerting_provisioning/#alert-rules
          This resource requires Grafana 9.1.0 or later.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RuleGroupSpec defines the desired state of RuleGroup
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  disableProvenance:
                    description: Defaults to false. Defaults to `false`.
                    type: boolean
                  folderRef:
                    description: Reference to a Folder in oss to populate folderUid.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  folderSelector:
                    description: Selector for a Folder in oss to populate folderUid.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  folderUid:
                    description: |-
                      (String) The UID of the folder that the group belongs to.
                      The UID of the folder that the group belongs to.
                    type: string
                  intervalSeconds:
                    description: |-
                      (Number) The interval, in seconds, at which all rules in the group are evaluated. If a group contains many rules, the rules are evaluated sequentially.
                      The interval, in seconds, at which all rules in the group are evaluated. If a group contains many rules, the rules are evaluated sequentially.
                    type: number
                  name:
                    description: |-
                      (String) The name of the rule group.
                      The name of the rule group.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  rule:
                    description: |-
                      (Block List, Min: 1) The rules within the group. (see below for nested schema)
                      The rules within the group.
                    items:
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            value pairs of metadata to attach to the alert rule that may add user-defined context, but cannot be used for matching, grouping, or routing. Defaults to map[].
                            Key-value pairs of metadata to attach to the alert rule that may add user-defined context, but cannot be used for matching, grouping, or routing. Defaults to `map[]`.
                          type: object
                          x-kubernetes-map-type: granular
                        condition:
                          description: |-
                            (String) The ref_id of the query node in the data field to use as the alert condition.
                            The `ref_id` of the query node in the `data` field to use as the alert condition.
                          type: string
                        data:
                          description: |-
                            (Block List, Min: 1) A sequence of stages that describe the contents of the rule. (see below for nested schema)
                            A sequence of stages that describe the contents of the rule.
                          items:
                            properties:
                              datasourceUid:
                                description: |-
                                  100" if this stage is an expression stage.
                                  The UID of the datasource being queried, or "-100" if this stage is an expression stage.
                                type: string
                              model:
                                description: |-
                                  (String) Custom JSON data to send to the specified datasource when querying.
                                  Custom JSON data to send to the specified datasource when querying.
                                type: string
                              queryType:
                                description: |-
                                  (String) An optional identifier for the type of query being executed. Defaults to “.
                                  An optional identifier for the type of query being executed. Defaults to “.
                                type: string
                              refId:
                                description: |-
                                  (String) A unique string to identify this query stage within a rule.
                                  A unique string to identify this query stage within a rule.
                                type: string
                              relativeTimeRange:
                                description: |-
                                  (Block List, Min: 1, Max: 1) The time range, relative to when the query is executed, across which to query. (see below for nested schema)
                                  The time range, relative to when the query is executed, across which to query.
                                items:
                                  properties:
                                    from:
                                      description: |-
                                        (Number) The number of seconds in the past, relative to when the rule is evaluated, at which the time range begins.
                                        The number of seconds in the past, relative to when the rule is evaluated, at which the time range begins.
                                      type: number
                                    to:
                                      description: |-
                                        (Number) The number of seconds in the past, relative to when the rule is evaluated, at which the time range ends.
                                        The number of seconds in the past, relative to when the rule is evaluated, at which the time range ends.
                                      type: number
                                  type: object
                                type: array
                            type: object
                          type: array
                        execErrState:
                          description: |-
                            (String) Describes what state to enter when the rule's query is invalid and the rule cannot be executed. Options are OK, Error, KeepLast, and Alerting. Defaults to Alerting.
                            Describes what state to enter when the rule's query is invalid and the rule cannot be executed. Options are OK, Error, KeepLast, and Alerting. Defaults to `Alerting`.
                          type: string
                        for:
                          description: |-
                            (String) The amount of time for which the rule must be breached for the rule to be considered to be Firing. Before this time has elapsed, the rule is only considered to be Pending. Defaults to 0.
                            The amount of time for which the rule must be breached for the rule to be considered to be Firing. Before this time has elapsed, the rule is only considered to be Pending. Defaults to `0`.
                          type: string
                        isPaused:
                          description: |-
                            (Boolean) Sets whether the alert should be paused or not. Defaults to false.
                            Sets whether the alert should be paused or not. Defaults to `false`.
                          type: boolean
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            value pairs to attach to the alert rule that can be used in matching, grouping, and routing. Defaults to map[].
                            Key-value pairs to attach to the alert rule that can be used in matching, grouping, and routing. Defaults to `map[]`.
                          type: object
                          x-kubernetes-map-type: granular
                        name:
                          description: |-
                            (String) The name of the rule group.
                            The name of the alert rule.
                          type: string
                        noDataState:
                          description: |-
                            (String) Describes what state to enter when the rule's query returns No Data. Options are OK, NoData, KeepLast, and Alerting. Defaults to NoData.
                            Describes what state to enter when the rule's query returns No Data. Options are OK, NoData, KeepLast, and Alerting. Defaults to `NoData`.
                          type: string
                        notificationSettings:
                          description: |-
                            (Block List, Max: 1) Notification settings for the rule. If specified, it overrides the notification policies. Available since Grafana 10.4, requires feature flag 'alertingSimplifiedRouting' enabled. (see below for nested schema)
                            Notification settings for the rule. If specified, it overrides the notification policies. Available since Grafana 10.4, requires feature flag 'alertingSimplifiedRouting' enabled.
                          items:
                            properties:
                              contactPoint:
                                description: |-
                                  (String) The contact point to route notifications that match this rule to.
                                  The contact point to route notifications that match this rule to.
                                type: string
                              contactPointRef:
                                description: Reference to a ContactPoint in alerting
                                  to populate contactPoint.
                                properties:
                                  name:
                                    description: Name of the referenced object.
                                    type: string
                                  policy:
                                    description: Policies for referencing.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: |-
                                          Resolution specifies whether resolution of this reference is required.
                                          The default is 'Required', which means the reconcile will fail if the
                                          reference cannot be resolved. 'Optional' means this reference will be
                                          a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: |-
                                          Resolve specifies when this reference should be resolved. The default
                                          is 'IfNotPresent', which will attempt to resolve the reference only when
                                          the corresponding field is not present. Use 'Always' to resolve the
                                          reference on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                required:
                                - name
                                type: object
                              contactPointSelector:
                                description: Selector for a ContactPoint in alerting
                                  to populate contactPoint.
                                properties:
                                  matchControllerRef:
                                    description: |-
                                      MatchControllerRef ensures an object with the same controller reference
                                      as the selecting object is selected.
                                    type: boolean
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: MatchLabels ensures an object with
                                      matching labels is selected.
                                    type: object
                                  policy:
                                    description: Policies for selection.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: |-
                                          Resolution specifies whether resolution of this reference is required.
                                          The default is 'Required', which means the reconcile will fail if the
                                          reference cannot be resolved. 'Optional' means this reference will be
                                          a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: |-
                                          Resolve specifies when this reference should be resolved. The default
                                          is 'IfNotPresent', which will attempt to resolve the reference only when
                                          the corresponding field is not present. Use 'Always' to resolve the
                                          reference on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                type: object
                              groupBy:
                                description: |-
                                  (List of String) A list of alert labels to group alerts into notifications by. Use the special label ... to group alerts by all labels, effectively disabling grouping. If empty, no grouping is used. If specified, requires labels 'alertname' and 'grafana_folder' to be included.
                                  A list of alert labels to group alerts into notifications by. Use the special label `...` to group alerts by all labels, effectively disabling grouping. If empty, no grouping is used. If specified, requires labels 'alertname' and 'grafana_folder' to be included.
                                items:
                                  type: string
                                type: array
                              groupInterval:
                                description: |-
                                  (String) Minimum time interval between two notifications for the same group. Default is 5 minutes.
                                  Minimum time interval between two notifications for the same group. Default is 5 minutes.
                                type: string
                              groupWait:
                                description: |-
                                  (String) Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                                  Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                                type: string
                              muteTimings:
                                description: |-
                                  (List of String) A list of mute timing names to apply to alerts that match this policy.
                                  A list of mute timing names to apply to alerts that match this policy.
                                items:
                                  type: string
                                type: array
                              repeatInterval:
                                description: |-
                                  sending a notification if an alert is still firing. Default is 4 hours.
                                  Minimum time interval for re-sending a notification if an alert is still firing. Default is 4 hours.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  disableProvenance:
                    description: Defaults to false. Defaults to `false`.
                    type: boolean
                  folderRef:
                    description: Reference to a Folder in oss to populate folderUid.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  folderSelector:
                    description: Selector for a Folder in oss to populate folderUid.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  folderUid:
                    description: |-
                      (String) The UID of the folder that the group belongs to.
                      The UID of the folder that the group belongs to.
                    type: string
                  intervalSeconds:
                    description: |-
                      (Number) The interval, in seconds, at which all rules in the group are evaluated. If a group contains many rules, the rules are evaluated sequentially.
                      The interval, in seconds, at which all rules in the group are evaluated. If a group contains many rules, the rules are evaluated sequentially.
                    type: number
                  name:
                    description: |-
                      (String) The name of the rule group.
                      The name of the rule group.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  rule:
                    description: |-
                      (Block List, Min: 1) The rules within the group. (see below for nested schema)
                      The rules within the group.
                    items:
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            value pairs of metadata to attach to the alert rule that may add user-defined context, but cannot be used for matching, grouping, or routing. Defaults to map[].
                            Key-value pairs of metadata to attach to the alert rule that may add user-defined context, but cannot be used for matching, grouping, or routing. Defaults to `map[]`.
                          type: object
                          x-kubernetes-map-type: granular
                        condition:
                          description: |-
                            (String) The ref_id of the query node in the data field to use as the alert condition.
                            The `ref_id` of the query node in the `data` field to use as the alert condition.
                          type: string
                        data:
                          description: |-
                            (Block List, Min: 1) A sequence of stages that describe the contents of the rule. (see below for nested schema)
                            A sequence of stages that describe the contents of the rule.
                          items:
                            properties:
                              datasourceUid:
                                description: |-
                                  100" if this stage is an expression stage.
                                  The UID of the datasource being queried, or "-100" if this stage is an expression stage.
                                type: string
                              model:
                                description: |-
                                  (String) Custom JSON data to send to the specified datasource when querying.
                                  Custom JSON data to send to the specified datasource when querying.
                                type: string
                              queryType:
                                description: |-
                                  (String) An optional identifier for the type of query being executed. Defaults to “.
                                  An optional identifier for the type of query being executed. Defaults to “.
                                type: string
                              refId:
                                description: |-
                                  (String) A unique string to identify this query stage within a rule.
                                  A unique string to identify this query stage within a rule.
                                type: string
                              relativeTimeRange:
                                description: |-
                                  (Block List, Min: 1, Max: 1) The time range, relative to when the query is executed, across which to query. (see below for nested schema)
                                  The time range, relative to when the query is executed, across which to query.
                                items:
                                  properties:
                                    from:
                                      description: |-
                                        (Number) The number of seconds in the past, relative to when the rule is evaluated, at which the time range begins.
                                        The number of seconds in the past, relative to when the rule is evaluated, at which the time range begins.
                                      type: number
                                    to:
                                      description: |-
                                        (Number) The number of seconds in the past, relative to when the rule is evaluated, at which the time range ends.
                                        The number of seconds in the past, relative to when the rule is evaluated, at which the time range ends.
                                      type: number
                                  type: object
                                type: array
                            type: object
                          type: array
                        execErrState:
                          description: |-
                            (String) Describes what state to enter when the rule's query is invalid and the rule cannot be executed. Options are OK, Error, KeepLast, and Alerting. Defaults to Alerting.
                            Describes what state to enter when the rule's query is invalid and the rule cannot be executed. Options are OK, Error, KeepLast, and Alerting. Defaults to `Alerting`.
                          type: string
                        for:
                          description: |-
                            (String) The amount of time for which the rule must be breached for the rule to be considered to be Firing. Before this time has elapsed, the rule is only considered to be Pending. Defaults to 0.
                            The amount of time for which the rule must be breached for the rule to be considered to be Firing. Before this time has elapsed, the rule is only considered to be Pending. Defaults to `0`.
                          type: string
                        isPaused:
                          description: |-
                            (Boolean) Sets whether the alert should be paused or not. Defaults to false.
                            Sets whether the alert should be paused or not. Defaults to `false`.
                          type: boolean
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            value pairs to attach to the alert rule that can be used in matching, grouping, and routing. Defaults to map[].
                            Key-value pairs to attach to the alert rule that can be used in matching, grouping, and routing. Defaults to `map[]`.
                          type: object
                          x-kubernetes-map-type: granular
                        name:
                          description: |-
                            (String) The name of the rule group.
                            The name of the alert rule.
                          type: string
                        noDataState:
                          description: |-
                            (String) Describes what state to enter when the rule's query returns No Data. Options are OK, NoData, KeepLast, and Alerting. Defaults to NoData.
                            Describes what state to enter when the rule's query returns No Data. Options are OK, NoData, KeepLast, and Alerting. Defaults to `NoData`.
                          type: string
                        notificationSettings:
                          description: |-
                            (Block List, Max: 1) Notification settings for the rule. If specified, it overrides the notification policies. Available since Grafana 10.4, requires feature flag 'alertingSimplifiedRouting' enabled. (see below for nested schema)
                            Notification settings for the rule. If specified, it overrides the notification policies. Available since Grafana 10.4, requires feature flag 'alertingSimplifiedRouting' enabled.
                          items:
                            properties:
                              contactPoint:
                                description: |-
                                  (String) The contact point to route notifications that match this rule to.
                                  The contact point to route notifications that match this rule to.
                                type: string
                              contactPointRef:
                                description: Reference to a ContactPoint in alerting
                                  to populate contactPoint.
                                properties:
                                  name:
                                    description: Name of the referenced object.
                                    type: string
                                  policy:
                                    description: Policies for referencing.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: |-
                                          Resolution specifies whether resolution of this reference is required.
                                          The default is 'Required', which means the reconcile will fail if the
                                          reference cannot be resolved. 'Optional' means this reference will be
                                          a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: |-
                                          Resolve specifies when this reference should be resolved. The default
                                          is 'IfNotPresent', which will attempt to resolve the reference only when
                                          the corresponding field is not present. Use 'Always' to resolve the
                                          reference on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                required:
                                - name
                                type: object
                              contactPointSelector:
                                description: Selector for a ContactPoint in alerting
                                  to populate contactPoint.
                                properties:
                                  matchControllerRef:
                                    description: |-
                                      MatchControllerRef ensures an object with the same controller reference
                                      as the selecting object is selected.
                                    type: boolean
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: MatchLabels ensures an object with
                                      matching labels is selected.
                                    type: object
                                  policy:
                                    description: Policies for selection.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: |-
                                          Resolution specifies whether resolution of this reference is required.
                                          The default is 'Required', which means the reconcile will fail if the
                                          reference cannot be resolved. 'Optional' means this reference will be
                                          a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: |-
                                          Resolve specifies when this reference should be resolved. The default
                                          is 'IfNotPresent', which will attempt to resolve the reference only when
                                          the corresponding field is not present. Use 'Always' to resolve the
                                          reference on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                type: object
                              groupBy:
                                description: |-
                                  (List of String) A list of alert labels to group alerts into notifications by. Use the special label ... to group alerts by all labels, effectively disabling grouping. If empty, no grouping is used. If specified, requires labels 'alertname' and 'grafana_folder' to be included.
                                  A list of alert labels to group alerts into notifications by. Use the special label `...` to group alerts by all labels, effectively disabling grouping. If empty, no grouping is used. If specified, requires labels 'alertname' and 'grafana_folder' to be included.
                                items:
                                  type: string
                                type: array
                              groupInterval:
                                description: |-
                                  (String) Minimum time interval between two notifications for the same group. Default is 5 minutes.
                                  Minimum time interval between two notifications for the same group. Default is 5 minutes.
                                type: string
                              groupWait:
                                description: |-
                                  (String) Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                                  Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                                type: string
                              muteTimings:
                                description: |-
                                  (List of String) A list of mute timing names to apply to alerts that match this policy.
                                  A list of mute timing names to apply to alerts that match this policy.
                                items:
                                  type: string
                                type: array
                              repeatInterval:
                                description: |-
                                  sending a notification if an alert is still firing. Default is 4 hours.
                                  Minimum time interval for re-sending a notification if an alert is still firing. Default is 4 hours.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.intervalSeconds is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.intervalSeconds)
                || (has(self.initProvider) && has(self.initProvider.intervalSeconds))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.rule is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.rule)
                || (has(self.initProvider) && has(self.initProvider.rule))'
          status:
            description: RuleGroupStatus defines the observed state of RuleGroup.
            properties:
              atProvider:
                properties:
                  disableProvenance:
                    description: Defaults to false. Defaults to `false`.
                    type: boolean
                  folderUid:
                    description: |-
                      (String) The UID of the folder that the group belongs to.
                      The UID of the folder that the group belongs to.
                    type: string
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  intervalSeconds:
                    description: |-
                      (Number) The interval, in seconds, at which all rules in the group are evaluated. If a group contains many rules, the rules are evaluated sequentially.
                      The interval, in seconds, at which all rules in the group are evaluated. If a group contains many rules, the rules are evaluated sequentially.
                    type: number
                  name:
                    description: |-
                      (String) The name of the rule group.
                      The name of the rule group.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  rule:
                    description: |-
                      (Block List, Min: 1) The rules within the group. (see below for nested schema)
                      The rules within the group.
                    items:
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            value pairs of metadata to attach to the alert rule that may add user-defined context, but cannot be used for matching, grouping, or routing. Defaults to map[].
                            Key-value pairs of metadata to attach to the alert rule that may add user-defined context, but cannot be used for matching, grouping, or routing. Defaults to `map[]`.
                          type: object
                          x-kubernetes-map-type: granular
                        condition:
                          description: |-
                            (String) The ref_id of the query node in the data field to use as the alert condition.
                            The `ref_id` of the query node in the `data` field to use as the alert condition.
                          type: string
                        data:
                          description: |-
                            (Block List, Min: 1) A sequence of stages that describe the contents of the rule. (see below for nested schema)
                            A sequence of stages that describe the contents of the rule.
                          items:
                            properties:
                              datasourceUid:
                                description: |-
                                  100" if this stage is an expression stage.
                                  The UID of the datasource being queried, or "-100" if this stage is an expression stage.
                                type: string
                              model:
                                description: |-
                                  (String) Custom JSON data to send to the specified datasource when querying.
                                  Custom JSON data to send to the specified datasource when querying.
                                type: string
                              queryType:
                                description: |-
                                  (String) An optional identifier for the type of query being executed. Defaults to “.
                                  An optional identifier for the type of query being executed. Defaults to “.
                                type: string
                              refId:
                                description: |-
                                  (String) A unique string to identify this query stage within a rule.
                                  A unique string to identify this query stage within a rule.
                                type: string
                              relativeTimeRange:
                                description: |-
                                  (Block List, Min: 1, Max: 1) The time range, relative to when the query is executed, across which to query. (see below for nested schema)
                                  The time range, relative to when the query is executed, across which to query.
                                items:
                                  properties:
                                    from:
                                      description: |-
                                        (Number) The number of seconds in the past, relative to when the rule is evaluated, at which the time range begins.
                                        The number of seconds in the past, relative to when the rule is evaluated, at which the time range begins.
                                      type: number
                                    to:
                                      description: |-
                                        (Number) The number of seconds in the past, relative to when the rule is evaluated, at which the time range ends.
                                        The number of seconds in the past, relative to when the rule is evaluated, at which the time range ends.
                                      type: number
                                  type: object
                                type: array
                            type: object
                          type: array
                        execErrState:
                          description: |-
                            (String) Describes what state to enter when the rule's query is invalid and the rule cannot be executed. Options are OK, Error, KeepLast, and Alerting. Defaults to Alerting.
                            Describes what state to enter when the rule's query is invalid and the rule cannot be executed. Options are OK, Error, KeepLast, and Alerting. Defaults to `Alerting`.
                          type: string
                        for:
                          description: |-
                            (String) The amount of time for which the rule must be breached for the rule to be considered to be Firing. Before this time has elapsed, the rule is only considered to be Pending. Defaults to 0.
                            The amount of time for which the rule must be breached for the rule to be considered to be Firing. Before this time has elapsed, the rule is only considered to be Pending. Defaults to `0`.
                          type: string
                        isPaused:
                          description: |-
                            (Boolean) Sets whether the alert should be paused or not. Defaults to false.
                            Sets whether the alert should be paused or not. Defaults to `false`.
                          type: boolean
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            value pairs to attach to the alert rule that can be used in matching, grouping, and routing. Defaults to map[].
                            Key-value pairs to attach to the alert rule that can be used in matching, grouping, and routing. Defaults to `map[]`.
                          type: object
                          x-kubernetes-map-type: granular
                        name:
                          description: |-
                            (String) The name of the rule group.
                            The name of the alert rule.
                          type: string
                        noDataState:
                          description: |-
                            (String) Describes what state to enter when the rule's query returns No Data. Options are OK, NoData, KeepLast, and Alerting. Defaults to NoData.
                            Describes what state to enter when the rule's query returns No Data. Options are OK, NoData, KeepLast, and Alerting. Defaults to `NoData`.
                          type: string
                        notificationSettings:
                          description: |-
                            (Block List, Max: 1) Notification settings for the rule. If specified, it overrides the notification policies. Available since Grafana 10.4, requires feature flag 'alertingSimplifiedRouting' enabled. (see below for nested schema)
                            Notification settings for the rule. If specified, it overrides the notification policies. Available since Grafana 10.4, requires feature flag 'alertingSimplifiedRouting' enabled.
                          items:
                            properties:
                              contactPoint:
                                description: |-
                                  (String) The contact point to route notifications that match this rule to.
                                  The contact point to route notifications that match this rule to.
                                type: string
                              groupBy:
                                description: |-
                                  (List of String) A list of alert labels to group alerts into notifications by. Use the special label ... to group alerts by all labels, effectively disabling grouping. If empty, no grouping is used. If specified, requires labels 'alertname' and 'grafana_folder' to be included.
                                  A list of alert labels to group alerts into notifications by. Use the special label `...` to group alerts by all labels, effectively disabling grouping. If empty, no grouping is used. If specified, requires labels 'alertname' and 'grafana_folder' to be included.
                                items:
                                  type: string
                                type: array
                              groupInterval:
                                description: |-
                                  (String) Minimum time interval between two notifications for the same group. Default is 5 minutes.
                                  Minimum time interval between two notifications for the same group. Default is 5 minutes.
                                type: string
                              groupWait:
                                description: |-
                                  (String) Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                                  Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                                type: string
                              muteTimings:
                                description: |-
                                  (List of String) A list of mute timing names to apply to alerts that match this policy.
                                  A list of mute timing names to apply to alerts that match this policy.
                                items:
                                  type: string
                                type: array
                              repeatInterval:
                                description: |-
                                  sending a notification if an alert is still firing. Default is 4 hours.
                                  Minimum time interval for re-sending a notification if an alert is still firing. Default is 4 hours.
                                type: string
                            type: object
                          type: array
                        uid:
                          description: |-
                            (String) The unique identifier of the alert rule.
                            The unique identifier of the alert rule.
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: accesspolicies.cloud.grafana.crossplane.io
spec:
  group: cloud.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: AccessPolicy
    listKind: AccessPolicyList
    plural: accesspolicies
    singular: accesspolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'AccessPolicy is the Schema for the AccessPolicys API. Official
          documentation https://grafana.com/docs/grafana-cloud/account-management/authentication-and-permissions/access-policies/API
          documentation https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#create-an-access-policy
          Required access policy scopes: accesspolicies:readaccesspolicies:writeaccesspolicies:delete'
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AccessPolicySpec defines the desired state of AccessPolicy
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  displayName:
                    description: |-
                      (String) Display name of the access policy. Defaults to the name.
                      Display name of the access policy. Defaults to the name.
                    type: string
                  name:
                    description: |-
                      (String) Name of the access policy.
                      Name of the access policy.
                    type: string
                  realm:
                    description: '(Block Set, Min: 1) (see below for nested schema)'
                    items:
                      properties:
                        identifier:
                          description: |-
                            (String) The identifier of the org or stack. For orgs, this is the slug, for stacks, this is the stack ID.
                            The identifier of the org or stack. For orgs, this is the slug, for stacks, this is the stack ID.
                          type: string
                        labelPolicy:
                          description: (Block Set) (see below for nested schema)
                          items:
                            properties:
                              selector:
                                description: |-
                                  (String) The label selector to match in metrics or logs query. Should be in PromQL or LogQL format.
                                  The label selector to match in metrics or logs query. Should be in PromQL or LogQL format.
                                type: string
                            type: object
                          type: array
                        stackRef:
                          description: Reference to a Stack in cloud to populate identifier.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        stackSelector:
                          description: Selector for a Stack in cloud to populate identifier.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        type:
                          description: |-
                            (String) Whether a policy applies to a Cloud org or a specific stack. Should be one of org or stack.
                            Whether a policy applies to a Cloud org or a specific stack. Should be one of `org` or `stack`.
                          type: string
                      type: object
                    type: array
                  region:
                    description: |-
                      cloud/developer-resources/api-reference/cloud-api/#list-regions.
                      Region where the API is deployed. Generally where the stack is deployed. Use the region list API to get the list of available regions: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-regions.
                    type: string
                  scopes:
                    description: |-
                      cloud/account-management/authentication-and-permissions/access-policies/#scopes for possible values.
                      Scopes of the access policy. See https://grafana.com/docs/grafana-cloud/account-management/authentication-and-permissions/access-policies/#scopes for possible values.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  displayName:
                    description: |-
                      (String) Display name of the access policy. Defaults to the name.
                      Display name of the access policy. Defaults to the name.
                    type: string
                  name:
                    description: |-
                      (String) Name of the access policy.
                      Name of the access policy.
                    type: string
                  realm:
                    description: '(Block Set, Min: 1) (see below for nested schema)'
                    items:
                      properties:
                        identifier:
                          description: |-
                            (String) The identifier of the org or stack. For orgs, this is the slug, for stacks, this is the stack ID.
                            The identifier of the org or stack. For orgs, this is the slug, for stacks, this is the stack ID.
                          type: string
                        labelPolicy:
                          description: (Block Set) (see below for nested schema)
                          items:
                            properties:
                              selector:
                                description: |-
                                  (String) The label selector to match in metrics or logs query. Should be in PromQL or LogQL format.
                                  The label selector to match in metrics or logs query. Should be in PromQL or LogQL format.
                                type: string
                            type: object
                          type: array
                        stackRef:
                          description: Reference to a Stack in cloud to populate identifier.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        stackSelector:
                          description: Selector for a Stack in cloud to populate identifier.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        type:
                          description: |-
                            (String) Whether a policy applies to a Cloud org or a specific stack. Should be one of org or stack.
                            Whether a policy applies to a Cloud org or a specific stack. Should be one of `org` or `stack`.
                          type: string
                      type: object
                    type: array
                  region:
                    description: |-
                      cloud/developer-resources/api-reference/cloud-api/#list-regions.
                      Region where the API is deployed. Generally where the stack is deployed. Use the region list API to get the list of available regions: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-regions.
                    type: string
                  scopes:
                    description: |-
                      cloud/account-management/authentication-and-permissions/access-policies/#scopes for possible values.
                      Scopes of the access policy. See https://grafana.com/docs/grafana-cloud/account-management/authentication-and-permissions/access-policies/#scopes for possible values.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.realm is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.realm)
                || (has(self.initProvider) && has(self.initProvider.realm))'
            - message: spec.forProvider.region is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.region)
                || (has(self.initProvider) && has(self.initProvider.region))'
            - message: spec.forProvider.scopes is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.scopes)
                || (has(self.initProvider) && has(self.initProvider.scopes))'
          status:
            description: AccessPolicyStatus defines the observed state of AccessPolicy.
            properties:
              atProvider:
                properties:
                  createdAt:
                    description: |-
                      (String) Creation date of the access policy.
                      Creation date of the access policy.
                    type: string
                  displayName:
                    description: |-
                      (String) Display name of the access policy. Defaults to the name.
                      Display name of the access policy. Defaults to the name.
                    type: string
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  name:
                    description: |-
                      (String) Name of the access policy.
                      Name of the access policy.
                    type: string
                  policyId:
                    description: |-
                      (String) ID of the access policy.
                      ID of the access policy.
                    type: string
                  realm:
                    description: '(Block Set, Min: 1) (see below for nested schema)'
                    items:
                      properties:
                        identifier:
                          description: |-
                            (String) The identifier of the org or stack. For orgs, this is the slug, for stacks, this is the stack ID.
                            The identifier of the org or stack. For orgs, this is the slug, for stacks, this is the stack ID.
                          type: string
                        labelPolicy:
                          description: (Block Set) (see below for nested schema)
                          items:
                            properties:
                              selector:
                                description: |-
                                  (String) The label selector to match in metrics or logs query. Should be in PromQL or LogQL format.
                                  The label selector to match in metrics or logs query. Should be in PromQL or LogQL format.
                                type: string
                            type: object
                          type: array
                        type:
                          description: |-
                            (String) Whether a policy applies to a Cloud org or a specific stack. Should be one of org or stack.
                            Whether a policy applies to a Cloud org or a specific stack. Should be one of `org` or `stack`.
                          type: string
                      type: object
                    type: array
                  region:
                    description: |-
                      cloud/developer-resources/api-reference/cloud-api/#list-regions.
                      Region where the API is deployed. Generally where the stack is deployed. Use the region list API to get the list of available regions: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-regions.
                    type: string
                  scopes:
                    description: |-
                      cloud/account-management/authentication-and-permissions/access-policies/#scopes for possible values.
                      Scopes of the access policy. See https://grafana.com/docs/grafana-cloud/account-management/authentication-and-permissions/access-policies/#scopes for possible values.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  updatedAt:
                    description: |-
                      (String) Last update date of the access policy.
                      Last update date of the access policy.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: accesspolicytokens.cloud.grafana.crossplane.io
spec:
  group: cloud.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: AccessPolicyToken
    listKind: AccessPolicyTokenList
    plural: accesspolicytokens
    singular: accesspolicytoken
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'AccessPolicyToken is the Schema for the AccessPolicyTokens API.
          Official documentation https://grafana.com/docs/grafana-cloud/account-management/authentication-and-permissions/access-policies/API
          documentation https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#create-a-token
          Required access policy scopes: accesspolicies:readaccesspolicies:writeaccesspolicies:delete'
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AccessPolicyTokenSpec defines the desired state of AccessPolicyToken
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accessPolicyId:
                    description: |-
                      (String) ID of the access policy for which to create a token.
                      ID of the access policy for which to create a token.
                    type: string
                  accessPolicyRef:
                    description: Reference to a AccessPolicy in cloud to populate
                      accessPolicyId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  accessPolicySelector:
                    description: Selector for a AccessPolicy in cloud to populate
                      accessPolicyId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  displayName:
                    description: |-
                      (String) Display name of the access policy token. Defaults to the name.
                      Display name of the access policy token. Defaults to the name.
                    type: string
                  expiresAt:
                    description: |-
                      (String) Expiration date of the access policy token. Does not expire by default.
                      Expiration date of the access policy token. Does not expire by default.
                    type: string
                  name:
                    description: |-
                      (String) Name of the access policy token.
                      Name of the access policy token.
                    type: string
                  region:
                    description: |-
                      cloud/developer-resources/api-reference/cloud-api/#list-regions.
                      Region of the access policy. Should be set to the same region as the access policy. Use the region list API to get the list of available regions: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-regions.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  accessPolicyId:
                    description: |-
                      (String) ID of the access policy for which to create a token.
                      ID of the access policy for which to create a token.
                    type: string
                  accessPolicyRef:
                    description: Reference to a AccessPolicy in cloud to populate
                      accessPolicyId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  accessPolicySelector:
                    description: Selector for a AccessPolicy in cloud to populate
                      accessPolicyId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  displayName:
                    description: |-
                      (String) Display name of the access policy token. Defaults to the name.
                      Display name of the access policy token. Defaults to the name.
                    type: string
                  expiresAt:
                    description: |-
                      (String) Expiration date of the access policy token. Does not expire by default.
                      Expiration date of the access policy token. Does not expire by default.
                    type: string
                  name:
                    description: |-
                      (String) Name of the access policy token.
                      Name of the access policy token.
                    type: string
                  region:
                    description: |-
                      cloud/developer-resources/api-reference/cloud-api/#list-regions.
                      Region of the access policy. Should be set to the same region as the access policy. Use the region list API to get the list of available regions: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-regions.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.region is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.region)
                || (has(self.initProvider) && has(self.initProvider.region))'
          status:
            description: AccessPolicyTokenStatus defines the observed state of AccessPolicyToken.
            properties:
              atProvider:
                properties:
                  accessPolicyId:
                    description: |-
                      (String) ID of the access policy for which to create a token.
                      ID of the access policy for which to create a token.
                    type: string
                  createdAt:
                    description: |-
                      (String) Creation date of the access policy token.
                      Creation date of the access policy token.
                    type: string
                  displayName:
                    description: |-
                      (String) Display name of the access policy token. Defaults to the name.
                      Display name of the access policy token. Defaults to the name.
                    type: string
                  expiresAt:
                    description: |-
                      (String) Expiration date of the access policy token. Does not expire by default.
                      Expiration date of the access policy token. Does not expire by default.
                    type: string
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  name:
                    description: |-
                      (String) Name of the access policy token.
                      Name of the access policy token.
                    type: string
                  region:
                    description: |-
                      cloud/developer-resources/api-reference/cloud-api/#list-regions.
                      Region of the access policy. Should be set to the same region as the access policy. Use the region list API to get the list of available regions: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-regions.
                    type: string
                  updatedAt:
                    description: |-
                      (String) Last update date of the access policy token.
                      Last update date of the access policy token.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: plugininstallations.cloud.grafana.crossplane.io
spec:
  group: cloud.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: PluginInstallation
    listKind: PluginInstallationList
    plural: plugininstallations
    singular: plugininstallation
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'PluginInstallation is the Schema for the PluginInstallations
          API. Manages Grafana Cloud Plugin Installations. Plugin Catalog https://grafana.com/grafana/plugins/
          Required access policy scopes: stack-plugins:readstack-plugins:writestack-plugins:delete'
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PluginInstallationSpec defines the desired state of PluginInstallation
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  cloudStackRef:
                    description: Reference to a Stack in cloud to populate stackSlug.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  cloudStackSelector:
                    description: Selector for a Stack in cloud to populate stackSlug.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  slug:
                    description: |-
                      (String) Slug of the plugin to be installed.
                      Slug of the plugin to be installed.
                    type: string
                  stackSlug:
                    description: |-
                      (String) The stack id to which the plugin should be installed.
                      The stack id to which the plugin should be installed.
                    type: string
                  version:
                    description: |-
                      (String) Version of the plugin to be installed.
                      Version of the plugin to be installed.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  cloudStackRef:
                    description: Reference to a Stack in cloud to populate stackSlug.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  cloudStackSelector:
                    description: Selector for a Stack in cloud to populate stackSlug.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  slug:
                    description: |-
                      (String) Slug of the plugin to be installed.
                      Slug of the plugin to be installed.
                    type: string
                  stackSlug:
                    description: |-
                      (String) The stack id to which the plugin should be installed.
                      The stack id to which the plugin should be installed.
                    type: string
                  version:
                    description: |-
                      (String) Version of the plugin to be installed.
                      Version of the plugin to be installed.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.slug is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.slug)
                || (has(self.initProvider) && has(self.initProvider.slug))'
            - message: spec.forProvider.version is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.version)
                || (has(self.initProvider) && has(self.initProvider.version))'
          status:
            description: PluginInstallationStatus defines the observed state of PluginInstallation.
            properties:
              atProvider:
                properties:
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  slug:
                    description: |-
                      (String) Slug of the plugin to be installed.
                      Slug of the plugin to be installed.
                    type: string
                  stackSlug:
                    description: |-
                      (String) The stack id to which the plugin should be installed.
                      The stack id to which the plugin should be installed.
                    type: string
                  version:
                    description: |-
                      (String) Version of the plugin to be installed.
                      Version of the plugin to be installed.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: stacks.cloud.grafana.crossplane.io
spec:
  group: cloud.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: Stack
    listKind: StackList
    plural: stacks
    singular: stack
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'Stack is the Schema for the Stacks API. Official documentation
          https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#stacks/
          Required access policy scopes: stacks:readstacks:writestacks:delete'
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: StackSpec defines the desired state of Stack
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  description:
                    description: |-
                      (String) Description of stack.
                      Description of stack.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      zA-Z0-9/\-.]+$" and stacks cannot have more than 10 labels.
                      A map of labels to assign to the stack. Label keys and values must match the following regexp: "^[a-zA-Z0-9/\\-.]+$" and stacks cannot have more than 10 labels.
                    type: object
                    x-kubernetes-map-type: granular
                  name:
                    description: |-
                      (String) Name of stack. Conventionally matches the url of the instance (e.g. <stack_slug>.grafana.net).
                      Name of stack. Conventionally matches the url of the instance (e.g. `<stack_slug>.grafana.net`).
                    type: string
                  regionSlug:
                    description: |-
                      cloud/developer-resources/api-reference/cloud-api/#list-regions.
                      Region slug to assign to this stack. Changing region will destroy the existing stack and create a new one in the desired region. Use the region list API to get the list of available regions: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-regions.
                    type: string
                  slug:
                    description: |-
                      (String) Subdomain that the Grafana instance will be available at. Setting slug to <stack_slug> will make the instance available at https://<stack_slug>.grafana.net.
                      Subdomain that the Grafana instance will be available at. Setting slug to `<stack_slug>` will make the instance available at `https://<stack_slug>.grafana.net`.
                    type: string
                  url:
                    description: |-
                      (String) Custom URL for the Grafana instance. Must have a CNAME setup to point to .grafana.net before creating the stack
                      Custom URL for the Grafana instance. Must have a CNAME setup to point to `.grafana.net` before creating the stack
                    type: string
                  waitForReadiness:
                    description: |-
                      (Boolean) Whether to wait for readiness of the stack after creating it. The check is a HEAD request to the stack URL (Grafana instance). Defaults to true.
                      Whether to wait for readiness of the stack after creating it. The check is a HEAD request to the stack URL (Grafana instance). Defaults to `true`.
                    type: boolean
                  waitForReadinessTimeout:
                    description: |-
                      (String) How long to wait for readiness (if enabled). Defaults to 5m0s.
                      How long to wait for readiness (if enabled). Defaults to `5m0s`.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  description:
                    description: |-
                      (String) Description of stack.
                      Description of stack.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      zA-Z0-9/\-.]+$" and stacks cannot have more than 10 labels.
                      A map of labels to assign to the stack. Label keys and values must match the following regexp: "^[a-zA-Z0-9/\\-.]+$" and stacks cannot have more than 10 labels.
                    type: object
                    x-kubernetes-map-type: granular
                  name:
                    description: |-
                      (String) Name of stack. Conventionally matches the url of the instance (e.g. <stack_slug>.grafana.net).
                      Name of stack. Conventionally matches the url of the instance (e.g. `<stack_slug>.grafana.net`).
                    type: string
                  regionSlug:
                    description: |-
                      cloud/developer-resources/api-reference/cloud-api/#list-regions.
                      Region slug to assign to this stack. Changing region will destroy the existing stack and create a new one in the desired region. Use the region list API to get the list of available regions: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-regions.
                    type: string
                  slug:
                    description: |-
                      (String) Subdomain that the Grafana instance will be available at. Setting slug to <stack_slug> will make the instance available at https://<stack_slug>.grafana.net.
                      Subdomain that the Grafana instance will be available at. Setting slug to `<stack_slug>` will make the instance available at `https://<stack_slug>.grafana.net`.
                    type: string
                  url:
                    description: |-
                      (String) Custom URL for the Grafana instance. Must have a CNAME setup to point to .grafana.net before creating the stack
                      Custom URL for the Grafana instance. Must have a CNAME setup to point to `.grafana.net` before creating the stack
                    type: string
                  waitForReadiness:
                    description: |-
                      (Boolean) Whether to wait for readiness of the stack after creating it. The check is a HEAD request to the stack URL (Grafana instance). Defaults to true.
                      Whether to wait for readiness of the stack after creating it. The check is a HEAD request to the stack URL (Grafana instance). Defaults to `true`.
                    type: boolean
                  waitForReadinessTimeout:
                    description: |-
                      (String) How long to wait for readiness (if enabled). Defaults to 5m0s.
                      How long to wait for readiness (if enabled). Defaults to `5m0s`.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.slug is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.slug)
                || (has(self.initProvider) && has(self.initProvider.slug))'
          status:
            description: StackStatus defines the observed state of Stack.
            properties:
              atProvider:
                properties:
                  alertmanagerName:
                    description: |-
                      (String) Name of the Alertmanager instance configured for this stack.
                      Name of the Alertmanager instance configured for this stack.
                    type: string
                  alertmanagerStatus:
                    description: |-
                      (String) Status of the Alertmanager instance configured for this stack.
                      Status of the Alertmanager instance configured for this stack.
                    type: string
                  alertmanagerUrl:
                    description: |-
                      (String) Base URL of the Alertmanager instance configured for this stack.
                      Base URL of the Alertmanager instance configured for this stack.
                    type: string
                  alertmanagerUserId:
                    description: |-
                      (Number) User ID of the Alertmanager instance configured for this stack.
                      User ID of the Alertmanager instance configured for this stack.
                    type: number
                  description:
                    description: |-
                      (String) Description of stack.
                      Description of stack.
                    type: string
                  graphiteName:
                    description: (String)
                    type: string
                  graphiteStatus:
                    description: (String)
                    type: string
                  graphiteUrl:
                    description: (String)
                    type: string
                  graphiteUserId:
                    description: (Number)
                    type: number
                  id:
                    description: (String) The stack id assigned to this stack by Grafana.
                    type: string
                  influxUrl:
                    description: |-
                      cloud/send-data/metrics/metrics-influxdb/push-from-telegraf/ for docs on how to use this.
                      Base URL of the InfluxDB instance configured for this stack. The username is the same as the metrics' (`prometheus_user_id` attribute of this resource). See https://grafana.com/docs/grafana-cloud/send-data/metrics/metrics-influxdb/push-from-telegraf/ for docs on how to use this.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      zA-Z0-9/\-.]+$" and stacks cannot have more than 10 labels.
                      A map of labels to assign to the stack. Label keys and values must match the following regexp: "^[a-zA-Z0-9/\\-.]+$" and stacks cannot have more than 10 labels.
                    type: object
                    x-kubernetes-map-type: granular
                  logsName:
                    description: (String)
                    type: string
                  logsStatus:
                    description: (String)
                    type: string
                  logsUrl:
                    description: (String)
                    type: string
                  logsUserId:
                    description: (Number)
                    type: number
                  name:
                    description: |-
                      (String) Name of stack. Conventionally matches the url of the instance (e.g. <stack_slug>.grafana.net).
                      Name of stack. Conventionally matches the url of the instance (e.g. `<stack_slug>.grafana.net`).
                    type: string
                  orgId:
                    description: |-
                      (Number) Organization id to assign to this stack.
                      Organization id to assign to this stack.
                    type: number
                  orgName:
                    description: |-
                      (String) Organization name to assign to this stack.
                      Organization name to assign to this stack.
                    type: string
                  orgSlug:
                    description: |-
                      (String) Organization slug to assign to this stack.
                      Organization slug to assign to this stack.
                    type: string
                  otlpUrl:
                    description: |-
                      cloud/send-data/otlp/send-data-otlp/ for docs on how to use this.
                      Base URL of the OTLP instance configured for this stack. The username is the stack's ID (`id` attribute of this resource). See https://grafana.com/docs/grafana-cloud/send-data/otlp/send-data-otlp/ for docs on how to use this.
                    type: string
                  profilesName:
                    description: (String)
                    type: string
                  profilesStatus:
                    description: (String)
                    type: string
                  profilesUrl:
                    description: (String)
                    type: string
                  profilesUserId:
                    description: (Number)
                    type: number
                  prometheusName:
                    description: |-
                      (String) Prometheus name for this instance.
                      Prometheus name for this instance.
                    type: string
                  prometheusRemoteEndpoint:
                    description: |-
                      (String) Use this URL to query hosted metrics data e.g. Prometheus data source in Grafana
                      Use this URL to query hosted metrics data e.g. Prometheus data source in Grafana
                    type: string
                  prometheusRemoteWriteEndpoint:
                    description: |-
                      (String) Use this URL to send prometheus metrics to Grafana cloud
                      Use this URL to send prometheus metrics to Grafana cloud
                    type: string
                  prometheusStatus:
                    description: |-
                      (String) Prometheus status for this instance.
                      Prometheus status for this instance.
                    type: string
                  prometheusUrl:
                    description: |-
                      (String) Prometheus url for this instance.
                      Prometheus url for this instance.
                    type: string
                  prometheusUserId:
                    description: |-
                      (Number) Prometheus user ID. Used for e.g. remote_write.
                      Prometheus user ID. Used for e.g. remote_write.
                    type: number
                  regionSlug:
                    description: |-
                      cloud/developer-resources/api-reference/cloud-api/#list-regions.
                      Region slug to assign to this stack. Changing region will destroy the existing stack and create a new one in the desired region. Use the region list API to get the list of available regions: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-regions.
                    type: string
                  slug:
                    description: |-
                      (String) Subdomain that the Grafana instance will be available at. Setting slug to <stack_slug> will make the instance available at https://<stack_slug>.grafana.net.
                      Subdomain that the Grafana instance will be available at. Setting slug to `<stack_slug>` will make the instance available at `https://<stack_slug>.grafana.net`.
                    type: string
                  status:
                    description: |-
                      (String) Status of the stack.
                      Status of the stack.
                    type: string
                  tracesName:
                    description: (String)
                    type: string
                  tracesStatus:
                    description: (String)
                    type: string
                  tracesUrl:
                    description: |-
                      (String) Base URL of the Traces instance configured for this stack. To use this in the Tempo data source in Grafana, append /tempo to the URL.
                      Base URL of the Traces instance configured for this stack. To use this in the Tempo data source in Grafana, append `/tempo` to the URL.
                    type: string
                  tracesUserId:
                    description: (Number)
                    type: number
                  url:
                    description: |-
                      (String) Custom URL for the Grafana instance. Must have a CNAME setup to point to .grafana.net before creating the stack
                      Custom URL for the Grafana instance. Must have a CNAME setup to point to `.grafana.net` before creating the stack
                    type: string
                  waitForReadiness:
                    description: |-
                      (Boolean) Whether to wait for readiness of the stack after creating it. The check is a HEAD request to the stack URL (Grafana instance). Defaults to true.
                      Whether to wait for readiness of the stack after creating it. The check is a HEAD request to the stack URL (Grafana instance). Defaults to `true`.
                    type: boolean
                  waitForReadinessTimeout:
                    description: |-
                      (String) How long to wait for readiness (if enabled). Defaults to 5m0s.
                      How long to wait for readiness (if enabled). Defaults to `5m0s`.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: stackserviceaccounts.cloud.grafana.crossplane.io
spec:
  group: cloud.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: StackServiceAccount
    listKind: StackServiceAccountList
    plural: stackserviceaccounts
    singular: stackserviceaccount
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'StackServiceAccount is the Schema for the StackServiceAccounts
          API. Manages service accounts of a Grafana Cloud stack using the Cloud API
          This can be used to bootstrap a management service account for a new stack
          Official documentation https://grafana.com/docs/grafana/latest/administration/service-accounts/HTTP
          API https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api
          Required access policy scopes: stacks:readstack-service-accounts:write'
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: StackServiceAccountSpec defines the desired state of StackServiceAccount
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  cloudStackRef:
                    description: Reference to a Stack in cloud to populate stackSlug.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  cloudStackSelector:
                    description: Selector for a Stack in cloud to populate stackSlug.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  isDisabled:
                    description: |-
                      (Boolean) The disabled status for the service account. Defaults to false.
                      The disabled status for the service account. Defaults to `false`.
                    type: boolean
                  name:
                    description: |-
                      (String) The name of the service account.
                      The name of the service account.
                    type: string
                  role:
                    description: |-
                      (String) The basic role of the service account in the organization.
                      The basic role of the service account in the organization.
                    type: string
                  stackSlug:
                    description: (String)
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  cloudStackRef:
                    description: Reference to a Stack in cloud to populate stackSlug.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  cloudStackSelector:
                    description: Selector for a Stack in cloud to populate stackSlug.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  isDisabled:
                    description: |-
                      (Boolean) The disabled status for the service account. Defaults to false.
                      The disabled status for the service account. Defaults to `false`.
                    type: boolean
                  name:
                    description: |-
                      (String) The name of the service account.
                      The name of the service account.
                    type: string
                  role:
                    description: |-
                      (String) The basic role of the service account in the organization.
                      The basic role of the service account in the organization.
                    type: string
                  stackSlug:
                    description: (String)
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.role is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.role)
                || (has(self.initProvider) && has(self.initProvider.role))'
          status:
            description: StackServiceAccountStatus defines the observed state of StackServiceAccount.
            properties:
              atProvider:
                properties:
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  isDisabled:
                    description: |-
                      (Boolean) The disabled status for the service account. Defaults to false.
                      The disabled status for the service account. Defaults to `false`.
                    type: boolean
                  name:
                    description: |-
                      (String) The name of the service account.
                      The name of the service account.
                    type: string
                  role:
                    description: |-
                      (String) The basic role of the service account in the organization.
                      The basic role of the service account in the organization.
                    type: string
                  stackSlug:
                    description: (String)
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: stackserviceaccounttokens.cloud.grafana.crossplane.io
spec:
  group: cloud.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: StackServiceAccountToken
    listKind: StackServiceAccountTokenList
    plural: stackserviceaccounttokens
    singular: stackserviceaccounttoken
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'StackServiceAccountToken is the Schema for the StackServiceAccountTokens
          API. Manages service account tokens of a Grafana Cloud stack using the Cloud
          API This can be used to bootstrap a management service account token for
          a new stack Official documentation https://grafana.com/docs/grafana/latest/administration/service-accounts/HTTP
          API https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api
          Required access policy scopes: stack-service-accounts:write'
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: StackServiceAccountTokenSpec defines the desired state of
              StackServiceAccountToken
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  cloudStackRef:
                    description: Reference to a Stack in cloud to populate stackSlug.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  cloudStackSelector:
                    description: Selector for a Stack in cloud to populate stackSlug.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  name:
                    description: (String)
                    type: string
                  secondsToLive:
                    description: (Number)
                    type: number
                  serviceAccountId:
                    description: (String)
                    type: string
                  serviceAccountRef:
                    description: Reference to a StackServiceAccount in cloud to populate
                      serviceAccountId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  serviceAccountSelector:
                    description: Selector for a StackServiceAccount in cloud to populate
                      serviceAccountId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  stackSlug:
                    description: (String)
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  cloudStackRef:
                    description: Reference to a Stack in cloud to populate stackSlug.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  cloudStackSelector:
                    description: Selector for a Stack in cloud to populate stackSlug.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  name:
                    description: (String)
                    type: string
                  secondsToLive:
                    description: (Number)
                    type: number
                  serviceAccountId:
                    description: (String)
                    type: string
                  serviceAccountRef:
                    description: Reference to a StackServiceAccount in cloud to populate
                      serviceAccountId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  serviceAccountSelector:
                    description: Selector for a StackServiceAccount in cloud to populate
                      serviceAccountId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  stackSlug:
                    description: (String)
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: StackServiceAccountTokenStatus defines the observed state
              of StackServiceAccountToken.
            properties:
              atProvider:
                properties:
                  expiration:
                    description: (String)
                    type: string
                  hasExpired:
                    description: (Boolean)
                    type: boolean
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  name:
                    description: (String)
                    type: string
                  secondsToLive:
                    description: (Number)
                    type: number
                  serviceAccountId:
                    description: (String)
                    type: string
                  stackSlug:
                    description: (String)
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: datasourcepermissions.enterprise.grafana.crossplane.io
spec:
  group: enterprise.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: DataSourcePermission
    listKind: DataSourcePermissionList
    plural: datasourcepermissions
    singular: datasourcepermission
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DataSourcePermission is the Schema for the DataSourcePermissions
          API. Manages the entire set of permissions for a datasource. Permissions
          that aren't specified when applying this resource will be removed. HTTP
          API https://grafana.com/docs/grafana/latest/developers/http_api/datasource_permissions/
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DataSourcePermissionSpec defines the desired state of DataSourcePermission
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  datasourceUid:
                    description: |-
                      (String) UID of the datasource to apply permissions to.
                      UID of the datasource to apply permissions to.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  permissions:
                    description: |-
                      (Block Set) The permission items to add/update. Items that are omitted from the list will be removed. (see below for nested schema)
                      The permission items to add/update. Items that are omitted from the list will be removed.
                    items:
                      properties:
                        builtInRole:
                          description: |-
                            (String) Name of the basic role to manage permissions for. Options: Viewer, Editor or Admin.
                            Name of the basic role to manage permissions for. Options: `Viewer`, `Editor` or `Admin`.
                          type: string
                        permission:
                          description: |-
                            (String) Permission to associate with item. Options: Query, Edit or Admin (Admin can only be used with Grafana v10.3.0+).
                            Permission to associate with item. Options: `Query`, `Edit` or `Admin` (`Admin` can only be used with Grafana v10.3.0+).
                          type: string
                        teamId:
                          description: |-
                            (String) ID of the team to manage permissions for. Defaults to 0.
                            ID of the team to manage permissions for. Defaults to `0`.
                          type: string
                        teamRef:
                          description: Reference to a Team in oss to populate teamId.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        teamSelector:
                          description: Selector for a Team in oss to populate teamId.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        userId:
                          description: |-
                            (String) ID of the user or service account to manage permissions for. Defaults to 0.
                            ID of the user or service account to manage permissions for. Defaults to `0`.
                          type: string
                        userRef:
                          description: Reference to a User in oss to populate userId.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        userSelector:
                          description: Selector for a User in oss to populate userId.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  datasourceUid:
                    description: |-
                      (String) UID of the datasource to apply permissions to.
                      UID of the datasource to apply permissions to.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  permissions:
                    description: |-
                      (Block Set) The permission items to add/update. Items that are omitted from the list will be removed. (see below for nested schema)
                      The permission items to add/update. Items that are omitted from the list will be removed.
                    items:
                      properties:
                        builtInRole:
                          description: |-
                            (String) Name of the basic role to manage permissions for. Options: Viewer, Editor or Admin.
                            Name of the basic role to manage permissions for. Options: `Viewer`, `Editor` or `Admin`.
                          type: string
                        permission:
                          description: |-
                            (String) Permission to associate with item. Options: Query, Edit or Admin (Admin can only be used with Grafana v10.3.0+).
                            Permission to associate with item. Options: `Query`, `Edit` or `Admin` (`Admin` can only be used with Grafana v10.3.0+).
                          type: string
                        teamId:
                          description: |-
                            (String) ID of the team to manage permissions for. Defaults to 0.
                            ID of the team to manage permissions for. Defaults to `0`.
                          type: string
                        teamRef:
                          description: Reference to a Team in oss to populate teamId.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        teamSelector:
                          description: Selector for a Team in oss to populate teamId.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        userId:
                          description: |-
                            (String) ID of the user or service account to manage permissions for. Defaults to 0.
                            ID of the user or service account to manage permissions for. Defaults to `0`.
                          type: string
                        userRef:
                          description: Reference to a User in oss to populate userId.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        userSelector:
                          description: Selector for a User in oss to populate userId.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.datasourceUid is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.datasourceUid)
                || (has(self.initProvider) && has(self.initProvider.datasourceUid))'
          status:
            description: DataSourcePermissionStatus defines the observed state of
              DataSourcePermission.
            properties:
              atProvider:
                properties:
                  datasourceUid:
                    description: |-
                      (String) UID of the datasource to apply permissions to.
                      UID of the datasource to apply permissions to.
                    type: string
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  permissions:
                    description: |-
                      (Block Set) The permission items to add/update. Items that are omitted from the list will be removed. (see below for nested schema)
                      The permission items to add/update. Items that are omitted from the list will be removed.
                    items:
                      properties:
                        builtInRole:
                          description: |-
                            (String) Name of the basic role to manage permissions for. Options: Viewer, Editor or Admin.
                            Name of the basic role to manage permissions for. Options: `Viewer`, `Editor` or `Admin`.
                          type: string
                        permission:
                          description: |-
                            (String) Permission to associate with item. Options: Query, Edit or Admin (Admin can only be used with Grafana v10.3.0+).
                            Permission to associate with item. Options: `Query`, `Edit` or `Admin` (`Admin` can only be used with Grafana v10.3.0+).
                          type: string
                        teamId:
                          description: |-
                            (String) ID of the team to manage permissions for. Defaults to 0.
                            ID of the team to manage permissions for. Defaults to `0`.
                          type: string
                        userId:
                          description: |-
                            (String) ID of the user or service account to manage permissions for. Defaults to 0.
                            ID of the user or service account to manage permissions for. Defaults to `0`.
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: reports.enterprise.grafana.crossplane.io
spec:
  group: enterprise.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: Report
    listKind: ReportList
    plural: reports
    singular: report
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'Report is the Schema for the Reports API. Note: This resource
          is available only with Grafana Enterprise 7.+. Official documentation https://grafana.com/docs/grafana/latest/dashboards/create-reports/HTTP
          API https://grafana.com/docs/grafana/latest/developers/http_api/reporting/'
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ReportSpec defines the desired state of Report
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  dashboards:
                    description: |-
                      (Block List) List of dashboards to render into the report (see below for nested schema)
                      List of dashboards to render into the report
                    items:
                      properties:
                        reportVariables:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) Add report variables to the dashboard. Values should be separated by commas.
                            Add report variables to the dashboard. Values should be separated by commas.
                          type: object
                          x-kubernetes-map-type: granular
                        timeRange:
                          description: |-
                            (Block List, Max: 1) Time range of the report. (see below for nested schema)
                            Time range of the report.
                          items:
                            properties:
                              from:
                                description: |-
                                  (String) Start of the time range.
                                  Start of the time range.
                                type: string
                              to:
                                description: |-
                                  (String) End of the time range.
                                  End of the time range.
                                type: string
                            type: object
                          type: array
                        uid:
                          description: |-
                            (String) Dashboard uid.
                            Dashboard uid.
                          type: string
                      type: object
                    type: array
                  formats:
                    description: |-
                      (Set of String) Specifies what kind of attachment to generate for the report. Allowed values: pdf, csv, image.
                      Specifies what kind of attachment to generate for the report. Allowed values: `pdf`, `csv`, `image`.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  includeDashboardLink:
                    description: |-
                      (Boolean) Whether to include a link to the dashboard in the report. Defaults to true.
                      Whether to include a link to the dashboard in the report. Defaults to `true`.
                    type: boolean
                  includeTableCsv:
                    description: |-
                      (Boolean) Whether to include a CSV file of table panel data. Defaults to false.
                      Whether to include a CSV file of table panel data. Defaults to `false`.
                    type: boolean
                  layout:
                    description: |-
                      (String) Layout of the report. Allowed values: simple, grid. Defaults to grid.
                      Layout of the report. Allowed values: `simple`, `grid`. Defaults to `grid`.
                    type: string
                  message:
                    description: |-
                      (String) Message to be sent in the report.
                      Message to be sent in the report.
                    type: string
                  name:
                    description: |-
                      (String) Name of the report.
                      Name of the report.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  orientation:
                    description: |-
                      (String) Orientation of the report. Allowed values: landscape, portrait. Defaults to landscape.
                      Orientation of the report. Allowed values: `landscape`, `portrait`. Defaults to `landscape`.
                    type: string
                  recipients:
                    description: |-
                      (List of String) List of recipients of the report.
                      List of recipients of the report.
                    items:
                      type: string
                    type: array
                  replyTo:
                    description: |-
                      to email address of the report.
                      Reply-to email address of the report.
                    type: string
                  schedule:
                    description: |-
                      (Block List, Min: 1, Max: 1) Schedule of the report. (see below for nested schema)
                      Schedule of the report.
                    items:
                      properties:
                        customInterval:
                          description: |-
                            (String) Custom interval of the report.
                            Note: This field is only available when frequency is set to custom.
                            Custom interval of the report.
                            **Note:** This field is only available when frequency is set to `custom`.
                          type: string
                        endTime:
                          description: |-
                            01-02T15:04:05 format if you want to set a custom timezone
                            End time of the report. If empty, the report will be sent indefinitely (according to frequency). Note that times will be saved as UTC in Grafana. Use 2006-01-02T15:04:05 format if you want to set a custom timezone
                          type: string
                        frequency:
                          description: |-
                            (String) Frequency of the report. Allowed values: never, once, hourly, daily, weekly, monthly, custom.
                            Frequency of the report. Allowed values: `never`, `once`, `hourly`, `daily`, `weekly`, `monthly`, `custom`.
                          type: string
                        lastDayOfMonth:
                          description: |-
                            (Boolean) Send the report on the last day of the month Defaults to false.
                            Send the report on the last day of the month Defaults to `false`.
                          type: boolean
                        startTime:
                          description: |-
                            01-02T15:04:05 format if you want to set a custom timezone
                            Start time of the report. If empty, the start date will be set to the creation time. Note that times will be saved as UTC in Grafana. Use 2006-01-02T15:04:05 format if you want to set a custom timezone
                          type: string
                        timezone:
                          description: |-
                            (String) Set the report time zone. Defaults to GMT.
                            Set the report time zone. Defaults to `GMT`.
                          type: string
                        workdaysOnly:
                          description: |-
                            (Boolean) Whether to send the report only on work days. Defaults to false.
                            Whether to send the report only on work days. Defaults to `false`.
                          type: boolean
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  dashboards:
                    description: |-
                      (Block List) List of dashboards to render into the report (see below for nested schema)
                      List of dashboards to render into the report
                    items:
                      properties:
                        reportVariables:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) Add report variables to the dashboard. Values should be separated by commas.
                            Add report variables to the dashboard. Values should be separated by commas.
                          type: object
                          x-kubernetes-map-type: granular
                        timeRange:
                          description: |-
                            (Block List, Max: 1) Time range of the report. (see below for nested schema)
                            Time range of the report.
                          items:
                            properties:
                              from:
                                description: |-
                                  (String) Start of the time range.
                                  Start of the time range.
                                type: string
                              to:
                                description: |-
                                  (String) End of the time range.
                                  End of the time range.
                                type: string
                            type: object
                          type: array
                        uid:
                          description: |-
                            (String) Dashboard uid.
                            Dashboard uid.
                          type: string
                      type: object
                    type: array
                  formats:
                    description: |-
                      (Set of String) Specifies what kind of attachment to generate for the report. Allowed values: pdf, csv, image.
                      Specifies what kind of attachment to generate for the report. Allowed values: `pdf`, `csv`, `image`.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  includeDashboardLink:
                    description: |-
                      (Boolean) Whether to include a link to the dashboard in the report. Defaults to true.
                      Whether to include a link to the dashboard in the report. Defaults to `true`.
                    type: boolean
                  includeTableCsv:
                    description: |-
                      (Boolean) Whether to include a CSV file of table panel data. Defaults to false.
                      Whether to include a CSV file of table panel data. Defaults to `false`.
                    type: boolean
                  layout:
                    description: |-
                      (String) Layout of the report. Allowed values: simple, grid. Defaults to grid.
                      Layout of the report. Allowed values: `simple`, `grid`. Defaults to `grid`.
                    type: string
                  message:
                    description: |-
                      (String) Message to be sent in the report.
                      Message to be sent in the report.
                    type: string
                  name:
                    description: |-
                      (String) Name of the report.
                      Name of the report.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  orientation:
                    description: |-
                      (String) Orientation of the report. Allowed values: landscape, portrait. Defaults to landscape.
                      Orientation of the report. Allowed values: `landscape`, `portrait`. Defaults to `landscape`.
                    type: string
                  recipients:
                    description: |-
                      (List of String) List of recipients of the report.
                      List of recipients of the report.
                    items:
                      type: string
                    type: array
                  replyTo:
                    description: |-
                      to email address of the report.
                      Reply-to email address of the report.
                    type: string
                  schedule:
                    description: |-
                      (Block List, Min: 1, Max: 1) Schedule of the report. (see below for nested schema)
                      Schedule of the report.
                    items:
                      properties:
                        customInterval:
                          description: |-
                            (String) Custom interval of the report.
                            Note: This field is only available when frequency is set to custom.
                            Custom interval of the report.
                            **Note:** This field is only available when frequency is set to `custom`.
                          type: string
                        endTime:
                          description: |-
                            01-02T15:04:05 format if you want to set a custom timezone
                            End time of the report. If empty, the report will be sent indefinitely (according to frequency). Note that times will be saved as UTC in Grafana. Use 2006-01-02T15:04:05 format if you want to set a custom timezone
                          type: string
                        frequency:
                          description: |-
                            (String) Frequency of the report. Allowed values: never, once, hourly, daily, weekly, monthly, custom.
                            Frequency of the report. Allowed values: `never`, `once`, `hourly`, `daily`, `weekly`, `monthly`, `custom`.
                          type: string
                        lastDayOfMonth:
                          description: |-
                            (Boolean) Send the report on the last day of the month Defaults to false.
                            Send the report on the last day of the month Defaults to `false`.
                          type: boolean
                        startTime:
                          description: |-
                            01-02T15:04:05 format if you want to set a custom timezone
                            Start time of the report. If empty, the start date will be set to the creation time. Note that times will be saved as UTC in Grafana. Use 2006-01-02T15:04:05 format if you want to set a custom timezone
                          type: string
                        timezone:
                          description: |-
                            (String) Set the report time zone. Defaults to GMT.
                            Set the report time zone. Defaults to `GMT`.
                          type: string
                        workdaysOnly:
                          description: |-
                            (Boolean) Whether to send the report only on work days. Defaults to false.
                            Whether to send the report only on work days. Defaults to `false`.
                          type: boolean
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.recipients is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.recipients)
                || (has(self.initProvider) && has(self.initProvider.recipients))'
            - message: spec.forProvider.schedule is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.schedule)
                || (has(self.initProvider) && has(self.initProvider.schedule))'
          status:
            description: ReportStatus defines the observed state of Report.
            properties:
              atProvider:
                properties:
                  dashboards:
                    description: |-
                      (Block List) List of dashboards to render into the report (see below for nested schema)
                      List of dashboards to render into the report
                    items:
                      properties:
                        reportVariables:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) Add report variables to the dashboard. Values should be separated by commas.
                            Add report variables to the dashboard. Values should be separated by commas.
                          type: object
                          x-kubernetes-map-type: granular
                        timeRange:
                          description: |-
                            (Block List, Max: 1) Time range of the report. (see below for nested schema)
                            Time range of the report.
                          items:
                            properties:
                              from:
                                description: |-
                                  (String) Start of the time range.
                                  Start of the time range.
                                type: string
                              to:
                                description: |-
                                  (String) End of the time range.
                                  End of the time range.
                                type: string
                            type: object
                          type: array
                        uid:
                          description: |-
                            (String) Dashboard uid.
                            Dashboard uid.
                          type: string
                      type: object
                    type: array
                  formats:
                    description: |-
                      (Set of String) Specifies what kind of attachment to generate for the report. Allowed values: pdf, csv, image.
                      Specifies what kind of attachment to generate for the report. Allowed values: `pdf`, `csv`, `image`.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  id:
                    description: (String) Generated identifier of the report.
                    type: string
                  includeDashboardLink:
                    description: |-
                      (Boolean) Whether to include a link to the dashboard in the report. Defaults to true.
                      Whether to include a link to the dashboard in the report. Defaults to `true`.
                    type: boolean
                  includeTableCsv:
                    description: |-
                      (Boolean) Whether to include a CSV file of table panel data. Defaults to false.
                      Whether to include a CSV file of table panel data. Defaults to `false`.
                    type: boolean
                  layout:
                    description: |-
                      (String) Layout of the report. Allowed values: simple, grid. Defaults to grid.
                      Layout of the report. Allowed values: `simple`, `grid`. Defaults to `grid`.
                    type: string
                  message:
                    description: |-
                      (String) Message to be sent in the report.
                      Message to be sent in the report.
                    type: string
                  name:
                    description: |-
                      (String) Name of the report.
                      Name of the report.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  orientation:
                    description: |-
                      (String) Orientation of the report. Allowed values: landscape, portrait. Defaults to landscape.
                      Orientation of the report. Allowed values: `landscape`, `portrait`. Defaults to `landscape`.
                    type: string
                  recipients:
                    description: |-
                      (List of String) List of recipients of the report.
                      List of recipients of the report.
                    items:
                      type: string
                    type: array
                  replyTo:
                    description: |-
                      to email address of the report.
                      Reply-to email address of the report.
                    type: string
                  schedule:
                    description: |-
                      (Block List, Min: 1, Max: 1) Schedule of the report. (see below for nested schema)
                      Schedule of the report.
                    items:
                      properties:
                        customInterval:
                          description: |-
                            (String) Custom interval of the report.
                            Note: This field is only available when frequency is set to custom.
                            Custom interval of the report.
                            **Note:** This field is only available when frequency is set to `custom`.
                          type: string
                        endTime:
                          description: |-
                            01-02T15:04:05 format if you want to set a custom timezone
                            End time of the report. If empty, the report will be sent indefinitely (according to frequency). Note that times will be saved as UTC in Grafana. Use 2006-01-02T15:04:05 format if you want to set a custom timezone
                          type: string
                        frequency:
                          description: |-
                            (String) Frequency of the report. Allowed values: never, once, hourly, daily, weekly, monthly, custom.
                            Frequency of the report. Allowed values: `never`, `once`, `hourly`, `daily`, `weekly`, `monthly`, `custom`.
                          type: string
                        lastDayOfMonth:
                          description: |-
                            (Boolean) Send the report on the last day of the month Defaults to false.
                            Send the report on the last day of the month Defaults to `false`.
                          type: boolean
                        startTime:
                          description: |-
                            01-02T15:04:05 format if you want to set a custom timezone
                            Start time of the report. If empty, the start date will be set to the creation time. Note that times will be saved as UTC in Grafana. Use 2006-01-02T15:04:05 format if you want to set a custom timezone
                          type: string
                        timezone:
                          description: |-
                            (String) Set the report time zone. Defaults to GMT.
                            Set the report time zone. Defaults to `GMT`.
                          type: string
                        workdaysOnly:
                          description: |-
                            (Boolean) Whether to send the report only on work days. Defaults to false.
                            Whether to send the report only on work days. Defaults to `false`.
                          type: boolean
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: roleassignments.enterprise.grafana.crossplane.io
spec:
  group: enterprise.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: RoleAssignment
    listKind: RoleAssignmentList
    plural: roleassignments
    singular: roleassignment
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'RoleAssignment is the Schema for the RoleAssignments API. Manages
          the entire set of assignments for a role. Assignments that aren''t specified
          when applying this resource will be removed. Note: This resource is available
          only with Grafana Enterprise 9.2+. Official documentation https://grafana.com/docs/grafana/latest/administration/roles-and-permissions/access-control/HTTP
          API https://grafana.com/docs/grafana/latest/developers/http_api/access_control/'
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RoleAssignmentSpec defines the desired state of RoleAssignment
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  roleRef:
                    description: Reference to a Role in enterprise to populate roleUid.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  roleSelector:
                    description: Selector for a Role in enterprise to populate roleUid.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  roleUid:
                    description: |-
                      (String) Grafana RBAC role UID.
                      Grafana RBAC role UID.
                    type: string
                  serviceAccountRefs:
                    description: References to ServiceAccount in oss to populate serviceAccounts.
                    items:
                      description: A Reference to a named object.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: |-
                                Resolution specifies whether resolution of this reference is required.
                                The default is 'Required', which means the reconcile will fail if the
                                reference cannot be resolved. 'Optional' means this reference will be
                                a no-op if it cannot be resolved.
                              enum:
                              - Required
                              - Optional
                              type: string
                            resolve:
                              description: |-
                                Resolve specifies when this reference should be resolved. The default
                                is 'IfNotPresent', which will attempt to resolve the reference only when
                                the corresponding field is not present. Use 'Always' to resolve the
                                reference on every reconcile.
                              enum:
                              - Always
                              - IfNotPresent
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  serviceAccountSelector:
                    description: Selector for a list of ServiceAccount in oss to populate
                      serviceAccounts.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  serviceAccounts:
                    description: |-
                      (Set of String) IDs of service accounts that the role should be assigned to.
                      IDs of service accounts that the role should be assigned to.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  teamRefs:
                    description: References to Team in oss to populate teams.
                    items:
                      description: A Reference to a named object.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: |-
                                Resolution specifies whether resolution of this reference is required.
                                The default is 'Required', which means the reconcile will fail if the
                                reference cannot be resolved. 'Optional' means this reference will be
                                a no-op if it cannot be resolved.
                              enum:
                              - Required
                              - Optional
                              type: string
                            resolve:
                              description: |-
                                Resolve specifies when this reference should be resolved. The default
                                is 'IfNotPresent', which will attempt to resolve the reference only when
                                the corresponding field is not present. Use 'Always' to resolve the
                                reference on every reconcile.
                              enum:
                              - Always
                              - IfNotPresent
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  teamSelector:
                    description: Selector for a list of Team in oss to populate teams.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  teams:
                    description: |-
                      (Set of String) IDs of teams that the role should be assigned to.
                      IDs of teams that the role should be assigned to.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  userRefs:
                    description: References to User in oss to populate users.
                    items:
                      description: A Reference to a named object.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: |-
                                Resolution specifies whether resolution of this reference is required.
                                The default is 'Required', which means the reconcile will fail if the
                                reference cannot be resolved. 'Optional' means this reference will be
                                a no-op if it cannot be resolved.
                              enum:
                              - Required
                              - Optional
                              type: string
                            resolve:
                              description: |-
                                Resolve specifies when this reference should be resolved. The default
                                is 'IfNotPresent', which will attempt to resolve the reference only when
                                the corresponding field is not present. Use 'Always' to resolve the
                                reference on every reconcile.
                              enum:
                              - Always
                              - IfNotPresent
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  userSelector:
                    description: Selector for a list of User in oss to populate users.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  users:
                    description: |-
                      (Set of Number) IDs of users that the role should be assigned to.
                      IDs of users that the role should be assigned to.
                    items:
                      type: number
                    type: array
                    x-kubernetes-list-type: set
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  roleRef:
                    description: Reference to a Role in enterprise to populate roleUid.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  roleSelector:
                    description: Selector for a Role in enterprise to populate roleUid.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  roleUid:
                    description: |-
                      (String) Grafana RBAC role UID.
                      Grafana RBAC role UID.
                    type: string
                  serviceAccountRefs:
                    description: References to ServiceAccount in oss to populate serviceAccounts.
                    items:
                      description: A Reference to a named object.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: |-
                                Resolution specifies whether resolution of this reference is required.
                                The default is 'Required', which means the reconcile will fail if the
                                reference cannot be resolved. 'Optional' means this reference will be
                                a no-op if it cannot be resolved.
                              enum:
                              - Required
                              - Optional
                              type: string
                            resolve:
                              description: |-
                                Resolve specifies when this reference should be resolved. The default
                                is 'IfNotPresent', which will attempt to resolve the reference only when
                                the corresponding field is not present. Use 'Always' to resolve the
                                reference on every reconcile.
                              enum:
                              - Always
                              - IfNotPresent
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  serviceAccountSelector:
                    description: Selector for a list of ServiceAccount in oss to populate
                      serviceAccounts.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  serviceAccounts:
                    description: |-
                      (Set of String) IDs of service accounts that the role should be assigned to.
                      IDs of service accounts that the role should be assigned to.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  teamRefs:
                    description: References to Team in oss to populate teams.
                    items:
                      description: A Reference to a named object.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: |-
                                Resolution specifies whether resolution of this reference is required.
                                The default is 'Required', which means the reconcile will fail if the
                                reference cannot be resolved. 'Optional' means this reference will be
                                a no-op if it cannot be resolved.
                              enum:
                              - Required
                              - Optional
                              type: string
                            resolve:
                              description: |-
                                Resolve specifies when this reference should be resolved. The default
                                is 'IfNotPresent', which will attempt to resolve the reference only when
                                the corresponding field is not present. Use 'Always' to resolve the
                                reference on every reconcile.
                              enum:
                              - Always
                              - IfNotPresent
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  teamSelector:
                    description: Selector for a list of Team in oss to populate teams.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  teams:
                    description: |-
                      (Set of String) IDs of teams that the role should be assigned to.
                      IDs of teams that the role should be assigned to.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  userRefs:
                    description: References to User in oss to populate users.
                    items:
                      description: A Reference to a named object.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: |-
                                Resolution specifies whether resolution of this reference is required.
                                The default is 'Required', which means the reconcile will fail if the
                                reference cannot be resolved. 'Optional' means this reference will be
                                a no-op if it cannot be resolved.
                              enum:
                              - Required
                              - Optional
                              type: string
                            resolve:
                              description: |-
                                Resolve specifies when this reference should be resolved. The default
                                is 'IfNotPresent', which will attempt to resolve the reference only when
                                the corresponding field is not present. Use 'Always' to resolve the
                                reference on every reconcile.
                              enum:
                              - Always
                              - IfNotPresent
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  userSelector:
                    description: Selector for a list of User in oss to populate users.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  users:
                    description: |-
                      (Set of Number) IDs of users that the role should be assigned to.
                      IDs of users that the role should be assigned to.
                    items:
                      type: number
                    type: array
                    x-kubernetes-list-type: set
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: RoleAssignmentStatus defines the observed state of RoleAssignment.
            properties:
              atProvider:
                properties:
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  roleUid:
                    description: |-
                      (String) Grafana RBAC role UID.
                      Grafana RBAC role UID.
                    type: string
                  serviceAccounts:
                    description: |-
                      (Set of String) IDs of service accounts that the role should be assigned to.
                      IDs of service accounts that the role should be assigned to.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  teams:
                    description: |-
                      (Set of String) IDs of teams that the role should be assigned to.
                      IDs of teams that the role should be assigned to.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  users:
                    description: |-
                      (Set of Number) IDs of users that the role should be assigned to.
                      IDs of users that the role should be assigned to.
                    items:
                      type: number
                    type: array
                    x-kubernetes-list-type: set
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: roles.enterprise.grafana.crossplane.io
spec:
  group: enterprise.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: Role
    listKind: RoleList
    plural: roles
    singular: role
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'Role is the Schema for the Roles API. Note: This resource is
          available only with Grafana Enterprise 8.+. Official documentation https://grafana.com/docs/grafana/latest/administration/roles-and-permissions/access-control/HTTP
          API https://grafana.com/docs/grafana/latest/developers/http_api/access_control/'
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RoleSpec defines the desired state of Role
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  autoIncrementVersion:
                    description: |-
                      (Boolean) Whether the role version should be incremented automatically on updates (and set to 1 on creation). This field or version should be set.
                      Whether the role version should be incremented automatically on updates (and set to 1 on creation). This field or `version` should be set.
                    type: boolean
                  description:
                    description: |-
                      (String) Description of the role.
                      Description of the role.
                    type: string
                  displayName:
                    description: |-
                      (String) Display name of the role. Available with Grafana 8.5+.
                      Display name of the role. Available with Grafana 8.5+.
                    type: string
                  global:
                    description: |-
                      (Boolean) Boolean to state whether the role is available across all organizations or not. Defaults to false.
                      Boolean to state whether the role is available across all organizations or not. Defaults to `false`.
                    type: boolean
                  group:
                    description: |-
                      (String) Group of the role. Available with Grafana 8.5+.
                      Group of the role. Available with Grafana 8.5+.
                    type: string
                  hidden:
                    description: |-
                      (Boolean) Boolean to state whether the role should be visible in the Grafana UI or not. Available with Grafana 8.5+. Defaults to false.
                      Boolean to state whether the role should be visible in the Grafana UI or not. Available with Grafana 8.5+. Defaults to `false`.
                    type: boolean
                  name:
                    description: |-
                      (String) Name of the role
                      Name of the role
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  permissions:
                    description: |-
                      (Block Set) Specific set of actions granted by the role. (see below for nested schema)
                      Specific set of actions granted by the role.
                    items:
                      properties:
                        action:
                          description: |-
                            (String) Specific action users granted with the role will be allowed to perform (for example: users:read)
                            Specific action users granted with the role will be allowed to perform (for example: `users:read`)
                          type: string
                        scope:
                          description: |-
                            (String) Scope to restrict the action to a set of resources (for example: users:* or roles:customrole1) Defaults to “.
                            Scope to restrict the action to a set of resources (for example: `users:*` or `roles:customrole1`) Defaults to “.
                          type: string
                      type: object
                    type: array
                  uid:
                    description: |-
                      (String) Unique identifier of the role. Used for assignments.
                      Unique identifier of the role. Used for assignments.
                    type: string
                  version:
                    description: |-
                      (Number) Version of the role. A role is updated only on version increase. This field or auto_increment_version should be set.
                      Version of the role. A role is updated only on version increase. This field or `auto_increment_version` should be set.
                    type: number
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  autoIncrementVersion:
                    description: |-
                      (Boolean) Whether the role version should be incremented automatically on updates (and set to 1 on creation). This field or version should be set.
                      Whether the role version should be incremented automatically on updates (and set to 1 on creation). This field or `version` should be set.
                    type: boolean
                  description:
                    description: |-
                      (String) Description of the role.
                      Description of the role.
                    type: string
                  displayName:
                    description: |-
                      (String) Display name of the role. Available with Grafana 8.5+.
                      Display name of the role. Available with Grafana 8.5+.
                    type: string
                  global:
                    description: |-
                      (Boolean) Boolean to state whether the role is available across all organizations or not. Defaults to false.
                      Boolean to state whether the role is available across all organizations or not. Defaults to `false`.
                    type: boolean
                  group:
                    description: |-
                      (String) Group of the role. Available with Grafana 8.5+.
                      Group of the role. Available with Grafana 8.5+.
                    type: string
                  hidden:
                    description: |-
                      (Boolean) Boolean to state whether the role should be visible in the Grafana UI or not. Available with Grafana 8.5+. Defaults to false.
                      Boolean to state whether the role should be visible in the Grafana UI or not. Available with Grafana 8.5+. Defaults to `false`.
                    type: boolean
                  name:
                    description: |-
                      (String) Name of the role
                      Name of the role
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  permissions:
                    description: |-
                      (Block Set) Specific set of actions granted by the role. (see below for nested schema)
                      Specific set of actions granted by the role.
                    items:
                      properties:
                        action:
                          description: |-
                            (String) Specific action users granted with the role will be allowed to perform (for example: users:read)
                            Specific action users granted with the role will be allowed to perform (for example: `users:read`)
                          type: string
                        scope:
                          description: |-
                            (String) Scope to restrict the action to a set of resources (for example: users:* or roles:customrole1) Defaults to “.
                            Scope to restrict the action to a set of resources (for example: `users:*` or `roles:customrole1`) Defaults to “.
                          type: string
                      type: object
                    type: array
                  uid:
                    description: |-
                      (String) Unique identifier of the role. Used for assignments.
                      Unique identifier of the role. Used for assignments.
                    type: string
                  version:
                    description: |-
                      (Number) Version of the role. A role is updated only on version increase. This field or auto_increment_version should be set.
                      Version of the role. A role is updated only on version increase. This field or `auto_increment_version` should be set.
                    type: number
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: RoleStatus defines the observed state of Role.
            properties:
              atProvider:
                properties:
                  autoIncrementVersion:
                    description: |-
                      (Boolean) Whether the role version should be incremented automatically on updates (and set to 1 on creation). This field or version should be set.
                      Whether the role version should be incremented automatically on updates (and set to 1 on creation). This field or `version` should be set.
                    type: boolean
                  description:
                    description: |-
                      (String) Description of the role.
                      Description of the role.
                    type: string
                  displayName:
                    description: |-
                      (String) Display name of the role. Available with Grafana 8.5+.
                      Display name of the role. Available with Grafana 8.5+.
                    type: string
                  global:
                    description: |-
                      (Boolean) Boolean to state whether the role is available across all organizations or not. Defaults to false.
                      Boolean to state whether the role is available across all organizations or not. Defaults to `false`.
                    type: boolean
                  group:
                    description: |-
                      (String) Group of the role. Available with Grafana 8.5+.
                      Group of the role. Available with Grafana 8.5+.
                    type: string
                  hidden:
                    description: |-
                      (Boolean) Boolean to state whether the role should be visible in the Grafana UI or not. Available with Grafana 8.5+. Defaults to false.
                      Boolean to state whether the role should be visible in the Grafana UI or not. Available with Grafana 8.5+. Defaults to `false`.
                    type: boolean
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  name:
                    description: |-
                      (String) Name of the role
                      Name of the role
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  permissions:
                    description: |-
                      (Block Set) Specific set of actions granted by the role. (see below for nested schema)
                      Specific set of actions granted by the role.
                    items:
                      properties:
                        action:
                          description: |-
                            (String) Specific action users granted with the role will be allowed to perform (for example: users:read)
                            Specific action users granted with the role will be allowed to perform (for example: `users:read`)
                          type: string
                        scope:
                          description: |-
                            (String) Scope to restrict the action to a set of resources (for example: users:* or roles:customrole1) Defaults to “.
                            Scope to restrict the action to a set of resources (for example: `users:*` or `roles:customrole1`) Defaults to “.
                          type: string
                      type: object
                    type: array
                  uid:
                    description: |-
                      (String) Unique identifier of the role. Used for assignments.
                      Unique identifier of the role. Used for assignments.
                    type: string
                  version:
                    description: |-
                      (Number) Version of the role. A role is updated only on version increase. This field or auto_increment_version should be set.
                      Version of the role. A role is updated only on version increase. This field or `auto_increment_version` should be set.
                    type: number
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: teamexternalgroups.enterprise.grafana.crossplane.io
spec:
  group: enterprise.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: TeamExternalGroup
    listKind: TeamExternalGroupList
    plural: teamexternalgroups
    singular: teamexternalgroup
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TeamExternalGroup is the Schema for the TeamExternalGroups API.
          Equivalent to the the team_sync attribute of the grafana_team resource.
          Use one or the other to configure a team's external groups syncing config.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TeamExternalGroupSpec defines the desired state of TeamExternalGroup
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  groups:
                    description: |-
                      (Set of String) The team external groups list
                      The team external groups list
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  teamId:
                    description: |-
                      (String) The Team ID
                      The Team ID
                    type: string
                  teamRef:
                    description: Reference to a Team in oss to populate teamId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  teamSelector:
                    description: Selector for a Team in oss to populate teamId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  groups:
                    description: |-
                      (Set of String) The team external groups list
                      The team external groups list
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  teamId:
                    description: |-
                      (String) The Team ID
                      The Team ID
                    type: string
                  teamRef:
                    description: Reference to a Team in oss to populate teamId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  teamSelector:
                    description: Selector for a Team in oss to populate teamId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.groups is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.groups)
                || (has(self.initProvider) && has(self.initProvider.groups))'
          status:
            description: TeamExternalGroupStatus defines the observed state of TeamExternalGroup.
            properties:
              atProvider:
                properties:
                  groups:
                    description: |-
                      (Set of String) The team external groups list
                      The team external groups list
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  teamId:
                    description: |-
                      (String) The Team ID
                      The Team ID
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: providerconfigs.grafana.crossplane.io
spec:
  group: grafana.crossplane.io
  names:
    categories:
    - crossplane
    - provider
    - grafana
    kind: ProviderConfig
    listKind: ProviderConfigList
    plural: providerconfigs
    singular: providerconfig
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .spec.credentials.secretRef.name
      name: SECRET-NAME
      priority: 1
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: A ProviderConfig configures a Grafana provider.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: A ProviderConfigSpec defines the desired state of a ProviderConfig.
            properties:
              cloudApiUrl:
                description: Override the Grafana Cloud API URL from the credentials
                  reference attribute.
                type: string
              credentials:
                description: Credentials required to authenticate to this provider.
                properties:
                  env:
                    description: |-
                      Env is a reference to an environment variable that contains credentials
                      that must be used to connect to the provider.
                    properties:
                      name:
                        description: Name is the name of an environment variable.
                        type: string
                    required:
                    - name
                    type: object
                  fs:
                    description: |-
                      Fs is a reference to a filesystem location that contains credentials that
                      must be used to connect to the provider.
                    properties:
                      path:
                        description: Path is a filesystem path.
                        type: string
                    required:
                    - path
                    type: object
                  secretRef:
                    description: |-
                      A SecretRef is a reference to a secret key that contains the credentials
                      that must be used to connect to the provider.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  source:
                    description: Source of the provider credentials.
                    enum:
                    - None
                    - Secret
                    - InjectedIdentity
                    - Environment
                    - Filesystem
                    type: string
                required:
                - source
                type: object
              oncallUrl:
                description: Override the OnCall API URL from the credentials reference
                  attribute.
                type: string
              smUrl:
                description: Override the Synthetic Monitoring API URL from the credentials
                  reference attribute.
                type: string
              url:
                description: Override the Grafana URL from the credentials reference
                  attribute.
                type: string
            required:
            - credentials
            type: object
          status:
            description: A ProviderConfigStatus reflects the observed state of a ProviderConfig.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              users:
                description: Users of this provider configuration.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: providerconfigusages.grafana.crossplane.io
spec:
  group: grafana.crossplane.io
  names:
    categories:
    - crossplane
    - provider
    - grafana
    kind: ProviderConfigUsage
    listKind: ProviderConfigUsageList
    plural: providerconfigusages
    singular: providerconfigusage
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .providerConfigRef.name
      name: CONFIG-NAME
      type: string
    - jsonPath: .resourceRef.kind
      name: RESOURCE-KIND
      type: string
    - jsonPath: .resourceRef.name
      name: RESOURCE-NAME
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: A ProviderConfigUsage indicates that a resource is using a ProviderConfig.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          providerConfigRef:
            description: ProviderConfigReference to the provider config being used.
            properties:
              name:
                description: Name of the referenced object.
                type: string
              policy:
                description: Policies for referencing.
                properties:
                  resolution:
                    default: Required
                    description: |-
                      Resolution specifies whether resolution of this reference is required.
                      The default is 'Required', which means the reconcile will fail if the
                      reference cannot be resolved. 'Optional' means this reference will be
                      a no-op if it cannot be resolved.
                    enum:
                    - Required
                    - Optional
                    type: string
                  resolve:
                    description: |-
                      Resolve specifies when this reference should be resolved. The default
                      is 'IfNotPresent', which will attempt to resolve the reference only when
                      the corresponding field is not present. Use 'Always' to resolve the
                      reference on every reconcile.
                    enum:
                    - Always
                    - IfNotPresent
                    type: string
                type: object
            required:
            - name
            type: object
          resourceRef:
            description: ResourceReference to the managed resource using the provider
              config.
            properties:
              apiVersion:
                description: APIVersion of the referenced object.
                type: string
              kind:
                description: Kind of the referenced object.
                type: string
              name:
                description: Name of the referenced object.
                type: string
              uid:
                description: UID of the referenced object.
                type: string
            required:
            - apiVersion
            - kind
            - name
            type: object
        required:
        - providerConfigRef
        - resourceRef
        type: object
    served: true
    storage: true
    subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: storeconfigs.grafana.crossplane.io
spec:
  group: grafana.crossplane.io
  names:
    categories:
    - crossplane
    - store
    - gcp
    kind: StoreConfig
    listKind: StoreConfigList
    plural: storeconfigs
    singular: storeconfig
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .spec.type
      name: TYPE
      type: string
    - jsonPath: .spec.defaultScope
      name: DEFAULT-SCOPE
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A StoreConfig configures how GCP controller should store connection
          details.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: A StoreConfigSpec defines the desired state of a ProviderConfig.
            properties:
              defaultScope:
                description: |-
                  DefaultScope used for scoping secrets for "cluster-scoped" resources.
                  If store type is "Kubernetes", this would mean the default namespace to
                  store connection secrets for cluster scoped resources.
                  In case of "Vault", this would be used as the default parent path.
                  Typically, should be set as Crossplane installation namespace.
                type: string
              kubernetes:
                description: |-
                  Kubernetes configures a Kubernetes secret store.
                  If the "type" is "Kubernetes" but no config provided, in cluster config
                  will be used.
                properties:
                  auth:
                    description: Credentials used to connect to the Kubernetes API.
                    properties:
                      env:
                        description: |-
                          Env is a reference to an environment variable that contains credentials
                          that must be used to connect to the provider.
                        properties:
                          name:
                            description: Name is the name of an environment variable.
                            type: string
                        required:
                        - name
                        type: object
                      fs:
                        description: |-
                          Fs is a reference to a filesystem location that contains credentials that
                          must be used to connect to the provider.
                        properties:
                          path:
                            description: Path is a filesystem path.
                            type: string
                        required:
                        - path
                        type: object
                      secretRef:
                        description: |-
                          A SecretRef is a reference to a secret key that contains the credentials
                          that must be used to connect to the provider.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - key
                        - name
                        - namespace
                        type: object
                      source:
                        description: Source of the credentials.
                        enum:
                        - None
                        - Secret
                        - Environment
                        - Filesystem
                        type: string
                    required:
                    - source
                    type: object
                required:
                - auth
                type: object
              plugin:
                description: Plugin configures External secret store as a plugin.
                properties:
                  configRef:
                    description: ConfigRef contains store config reference info.
                    properties:
                      apiVersion:
                        description: APIVersion of the referenced config.
                        type: string
                      kind:
                        description: Kind of the referenced config.
                        type: string
                      name:
                        description: Name of the referenced config.
                        type: string
                    required:
                    - apiVersion
                    - kind
                    - name
                    type: object
                  endpoint:
                    description: Endpoint is the endpoint of the gRPC server.
                    type: string
                type: object
              type:
                default: Kubernetes
                description: |-
                  Type configures which secret store to be used. Only the configuration
                  block for this store will be used and others will be ignored if provided.
                  Default is Kubernetes.
                enum:
                - Kubernetes
                - Vault
                - Plugin
                type: string
            required:
            - defaultScope
            type: object
          status:
            description: A StoreConfigStatus represents the status of a StoreConfig.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: holidays.ml.grafana.crossplane.io
spec:
  group: ml.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: Holiday
    listKind: HolidayList
    plural: holidays
    singular: holiday
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Holiday is the Schema for the Holidays API. <no value>
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: HolidaySpec defines the desired state of Holiday
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  customPeriods:
                    description: A list of custom periods for the holiday.
                    items:
                      properties:
                        endTime:
                          type: string
                        name:
                          description: The name of the custom period.
                          type: string
                        startTime:
                          type: string
                      type: object
                    type: array
                  description:
                    description: A description of the holiday.
                    type: string
                  icalTimezone:
                    description: The timezone to use for events in the iCal file pointed
                      to by ical_url.
                    type: string
                  icalUrl:
                    description: A URL to an iCal file containing all occurrences
                      of the holiday.
                    type: string
                  name:
                    description: The name of the holiday.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  customPeriods:
                    description: A list of custom periods for the holiday.
                    items:
                      properties:
                        endTime:
                          type: string
                        name:
                          description: The name of the custom period.
                          type: string
                        startTime:
                          type: string
                      type: object
                    type: array
                  description:
                    description: A description of the holiday.
                    type: string
                  icalTimezone:
                    description: The timezone to use for events in the iCal file pointed
                      to by ical_url.
                    type: string
                  icalUrl:
                    description: A URL to an iCal file containing all occurrences
                      of the holiday.
                    type: string
                  name:
                    description: The name of the holiday.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: HolidayStatus defines the observed state of Holiday.
            properties:
              atProvider:
                properties:
                  customPeriods:
                    description: A list of custom periods for the holiday.
                    items:
                      properties:
                        endTime:
                          type: string
                        name:
                          description: The name of the custom period.
                          type: string
                        startTime:
                          type: string
                      type: object
                    type: array
                  description:
                    description: A description of the holiday.
                    type: string
                  icalTimezone:
                    description: The timezone to use for events in the iCal file pointed
                      to by ical_url.
                    type: string
                  icalUrl:
                    description: A URL to an iCal file containing all occurrences
                      of the holiday.
                    type: string
                  id:
                    type: string
                  name:
                    description: The name of the holiday.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: jobs.ml.grafana.crossplane.io
spec:
  group: ml.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: Job
    listKind: JobList
    plural: jobs
    singular: job
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Job is the Schema for the Jobs API. <no value>
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: JobSpec defines the desired state of Job
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  customLabels:
                    additionalProperties:
                      type: string
                    description: An object representing the custom labels added on
                      the forecast.
                    type: object
                    x-kubernetes-map-type: granular
                  dataSourceRef:
                    description: Reference to a DataSource in oss to populate datasourceUid.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  dataSourceSelector:
                    description: Selector for a DataSource in oss to populate datasourceUid.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  datasourceType:
                    description: The type of datasource being queried. Currently allowed
                      values are prometheus, graphite, loki, postgres, and datadog.
                    type: string
                  datasourceUid:
                    description: The uid of the datasource to query.
                    type: string
                  description:
                    description: A description of the job.
                    type: string
                  holidays:
                    description: A list of holiday IDs or names to take into account
                      when training the model.
                    items:
                      type: string
                    type: array
                  hyperParams:
                    additionalProperties:
                      type: string
                    description: The hyperparameters used to fine tune the algorithm.
                      See https://grafana.com/docs/grafana-cloud/machine-learning/models/
                      for the full list of available hyperparameters. Defaults to
                      `map[]`.
                    type: object
                    x-kubernetes-map-type: granular
                  interval:
                    description: The data interval in seconds to train the data on.
                      Defaults to `300`.
                    type: number
                  metric:
                    description: The metric used to query the job results.
                    type: string
                  name:
                    description: The name of the job.
                    type: string
                  queryParams:
                    additionalProperties:
                      type: string
                    description: An object representing the query params to query
                      Grafana with.
                    type: object
                    x-kubernetes-map-type: granular
                  trainingWindow:
                    description: The data interval in seconds to train the data on.
                      Defaults to `7776000`.
                    type: number
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  customLabels:
                    additionalProperties:
                      type: string
                    description: An object representing the custom labels added on
                      the forecast.
                    type: object
                    x-kubernetes-map-type: granular
                  dataSourceRef:
                    description: Reference to a DataSource in oss to populate datasourceUid.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  dataSourceSelector:
                    description: Selector for a DataSource in oss to populate datasourceUid.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  datasourceType:
                    description: The type of datasource being queried. Currently allowed
                      values are prometheus, graphite, loki, postgres, and datadog.
                    type: string
                  datasourceUid:
                    description: The uid of the datasource to query.
                    type: string
                  description:
                    description: A description of the job.
                    type: string
                  holidays:
                    description: A list of holiday IDs or names to take into account
                      when training the model.
                    items:
                      type: string
                    type: array
                  hyperParams:
                    additionalProperties:
                      type: string
                    description: The hyperparameters used to fine tune the algorithm.
                      See https://grafana.com/docs/grafana-cloud/machine-learning/models/
                      for the full list of available hyperparameters. Defaults to
                      `map[]`.
                    type: object
                    x-kubernetes-map-type: granular
                  interval:
                    description: The data interval in seconds to train the data on.
                      Defaults to `300`.
                    type: number
                  metric:
                    description: The metric used to query the job results.
                    type: string
                  name:
                    description: The name of the job.
                    type: string
                  queryParams:
                    additionalProperties:
                      type: string
                    description: An object representing the query params to query
                      Grafana with.
                    type: object
                    x-kubernetes-map-type: granular
                  trainingWindow:
                    description: The data interval in seconds to train the data on.
                      Defaults to `7776000`.
                    type: number
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.datasourceType is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.datasourceType)
                || (has(self.initProvider) && has(self.initProvider.datasourceType))'
            - message: spec.forProvider.metric is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.metric)
                || (has(self.initProvider) && has(self.initProvider.metric))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.queryParams is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.queryParams)
                || (has(self.initProvider) && has(self.initProvider.queryParams))'
          status:
            description: JobStatus defines the observed state of Job.
            properties:
              atProvider:
                properties:
                  customLabels:
                    additionalProperties:
                      type: string
                    description: An object representing the custom labels added on
                      the forecast.
                    type: object
                    x-kubernetes-map-type: granular
                  datasourceType:
                    description: The type of datasource being queried. Currently allowed
                      values are prometheus, graphite, loki, postgres, and datadog.
                    type: string
                  datasourceUid:
                    description: The uid of the datasource to query.
                    type: string
                  description:
                    description: A description of the job.
                    type: string
                  holidays:
                    description: A list of holiday IDs or names to take into account
                      when training the model.
                    items:
                      type: string
                    type: array
                  hyperParams:
                    additionalProperties:
                      type: string
                    description: The hyperparameters used to fine tune the algorithm.
                      See https://grafana.com/docs/grafana-cloud/machine-learning/models/
                      for the full list of available hyperparameters. Defaults to
                      `map[]`.
                    type: object
                    x-kubernetes-map-type: granular
                  id:
                    type: string
                  interval:
                    description: The data interval in seconds to train the data on.
                      Defaults to `300`.
                    type: number
                  metric:
                    description: The metric used to query the job results.
                    type: string
                  name:
                    description: The name of the job.
                    type: string
                  queryParams:
                    additionalProperties:
                      type: string
                    description: An object representing the query params to query
                      Grafana with.
                    type: object
                    x-kubernetes-map-type: granular
                  trainingWindow:
                    description: The data interval in seconds to train the data on.
                      Defaults to `7776000`.
                    type: number
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: outlierdetectors.ml.grafana.crossplane.io
spec:
  group: ml.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: OutlierDetector
    listKind: OutlierDetectorList
    plural: outlierdetectors
    singular: outlierdetector
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: OutlierDetector is the Schema for the OutlierDetectors API. <no
          value>
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: OutlierDetectorSpec defines the desired state of OutlierDetector
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  algorithm:
                    description: The algorithm to use and its configuration. See https://grafana.com/docs/grafana-cloud/machine-learning/outlier-detection/
                      for details.
                    items:
                      properties:
                        config:
                          description: For DBSCAN only, specify the configuration
                            map
                          items:
                            properties:
                              epsilon:
                                description: Specify the epsilon parameter (positive
                                  float)
                                type: number
                            type: object
                          type: array
                        name:
                          description: The name of the algorithm to use ('mad' or
                            'dbscan').
                          type: string
                        sensitivity:
                          description: Specify the sensitivity of the detector (in
                            range [0,1]).
                          type: number
                      type: object
                    type: array
                  dataSourceRef:
                    description: Reference to a DataSource in oss to populate datasourceUid.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  dataSourceSelector:
                    description: Selector for a DataSource in oss to populate datasourceUid.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  datasourceType:
                    description: The type of datasource being queried. Currently allowed
                      values are prometheus, graphite, loki, postgres, and datadog.
                    type: string
                  datasourceUid:
                    description: The uid of the datasource to query.
                    type: string
                  description:
                    description: A description of the outlier detector.
                    type: string
                  interval:
                    description: The data interval in seconds to monitor. Defaults
                      to `300`.
                    type: number
                  metric:
                    description: The metric used to query the outlier detector results.
                    type: string
                  name:
                    description: The name of the outlier detector.
                    type: string
                  queryParams:
                    additionalProperties:
                      type: string
                    description: An object representing the query params to query
                      Grafana with.
                    type: object
                    x-kubernetes-map-type: granular
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  algorithm:
                    description: The algorithm to use and its configuration. See https://grafana.com/docs/grafana-cloud/machine-learning/outlier-detection/
                      for details.
                    items:
                      properties:
                        config:
                          description: For DBSCAN only, specify the configuration
                            map
                          items:
                            properties:
                              epsilon:
                                description: Specify the epsilon parameter (positive
                                  float)
                                type: number
                            type: object
                          type: array
                        name:
                          description: The name of the algorithm to use ('mad' or
                            'dbscan').
                          type: string
                        sensitivity:
                          description: Specify the sensitivity of the detector (in
                            range [0,1]).
                          type: number
                      type: object
                    type: array
                  dataSourceRef:
                    description: Reference to a DataSource in oss to populate datasourceUid.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  dataSourceSelector:
                    description: Selector for a DataSource in oss to populate datasourceUid.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  datasourceType:
                    description: The type of datasource being queried. Currently allowed
                      values are prometheus, graphite, loki, postgres, and datadog.
                    type: string
                  datasourceUid:
                    description: The uid of the datasource to query.
                    type: string
                  description:
                    description: A description of the outlier detector.
                    type: string
                  interval:
                    description: The data interval in seconds to monitor. Defaults
                      to `300`.
                    type: number
                  metric:
                    description: The metric used to query the outlier detector results.
                    type: string
                  name:
                    description: The name of the outlier detector.
                    type: string
                  queryParams:
                    additionalProperties:
                      type: string
                    description: An object representing the query params to query
                      Grafana with.
                    type: object
                    x-kubernetes-map-type: granular
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.algorithm is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.algorithm)
                || (has(self.initProvider) && has(self.initProvider.algorithm))'
            - message: spec.forProvider.datasourceType is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.datasourceType)
                || (has(self.initProvider) && has(self.initProvider.datasourceType))'
            - message: spec.forProvider.metric is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.metric)
                || (has(self.initProvider) && has(self.initProvider.metric))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.queryParams is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.queryParams)
                || (has(self.initProvider) && has(self.initProvider.queryParams))'
          status:
            description: OutlierDetectorStatus defines the observed state of OutlierDetector.
            properties:
              atProvider:
                properties:
                  algorithm:
                    description: The algorithm to use and its configuration. See https://grafana.com/docs/grafana-cloud/machine-learning/outlier-detection/
                      for details.
                    items:
                      properties:
                        config:
                          description: For DBSCAN only, specify the configuration
                            map
                          items:
                            properties:
                              epsilon:
                                description: Specify the epsilon parameter (positive
                                  float)
                                type: number
                            type: object
                          type: array
                        name:
                          description: The name of the algorithm to use ('mad' or
                            'dbscan').
                          type: string
                        sensitivity:
                          description: Specify the sensitivity of the detector (in
                            range [0,1]).
                          type: number
                      type: object
                    type: array
                  datasourceType:
                    description: The type of datasource being queried. Currently allowed
                      values are prometheus, graphite, loki, postgres, and datadog.
                    type: string
                  datasourceUid:
                    description: The uid of the datasource to query.
                    type: string
                  description:
                    description: A description of the outlier detector.
                    type: string
                  id:
                    type: string
                  interval:
                    description: The data interval in seconds to monitor. Defaults
                      to `300`.
                    type: number
                  metric:
                    description: The metric used to query the outlier detector results.
                    type: string
                  name:
                    description: The name of the outlier detector.
                    type: string
                  queryParams:
                    additionalProperties:
                      type: string
                    description: An object representing the query params to query
                      Grafana with.
                    type: object
                    x-kubernetes-map-type: granular
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: escalationchains.oncall.grafana.crossplane.io
spec:
  group: oncall.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: EscalationChain
    listKind: EscalationChainList
    plural: escalationchains
    singular: escalationchain
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EscalationChain is the Schema for the EscalationChains API. HTTP
          API https://grafana.com/docs/oncall/latest/oncall-api-reference/escalation_chains/
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: EscalationChainSpec defines the desired state of EscalationChain
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  name:
                    description: |-
                      (String) The name of the escalation chain.
                      The name of the escalation chain.
                    type: string
                  teamId:
                    description: |-
                      (String) The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the grafana_oncall_team datasource.
                      The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the `grafana_oncall_team` datasource.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  name:
                    description: |-
                      (String) The name of the escalation chain.
                      The name of the escalation chain.
                    type: string
                  teamId:
                    description: |-
                      (String) The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the grafana_oncall_team datasource.
                      The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the `grafana_oncall_team` datasource.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: EscalationChainStatus defines the observed state of EscalationChain.
            properties:
              atProvider:
                properties:
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  name:
                    description: |-
                      (String) The name of the escalation chain.
                      The name of the escalation chain.
                    type: string
                  teamId:
                    description: |-
                      (String) The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the grafana_oncall_team datasource.
                      The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the `grafana_oncall_team` datasource.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: escalations.oncall.grafana.crossplane.io
spec:
  group: oncall.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: Escalation
    listKind: EscalationList
    plural: escalations
    singular: escalation
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Escalation is the Schema for the Escalations API. Official documentation
          https://grafana.com/docs/oncall/latest/configure/escalation-chains-and-routes/HTTP
          API https://grafana.com/docs/oncall/latest/oncall-api-reference/escalation_policies/
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: EscalationSpec defines the desired state of Escalation
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  actionToTrigger:
                    description: |-
                      (String) The ID of an Action for trigger_webhook type step.
                      The ID of an Action for trigger_webhook type step.
                    type: string
                  actionToTriggerRef:
                    description: Reference to a OutgoingWebhook in oncall to populate
                      actionToTrigger.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  actionToTriggerSelector:
                    description: Selector for a OutgoingWebhook in oncall to populate
                      actionToTrigger.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  duration:
                    description: |-
                      (Number) The duration of delay for wait type step.
                      The duration of delay for wait type step.
                    type: number
                  escalationChainId:
                    description: |-
                      (String) The ID of the escalation chain.
                      The ID of the escalation chain.
                    type: string
                  escalationChainRef:
                    description: Reference to a EscalationChain in oncall to populate
                      escalationChainId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  escalationChainSelector:
                    description: Selector for a EscalationChain in oncall to populate
                      escalationChainId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  groupToNotify:
                    description: |-
                      (String) The ID of a User Group for notify_user_group type step.
                      The ID of a User Group for notify_user_group type step.
                    type: string
                  important:
                    description: |-
                      (Boolean) Will activate "important" personal notification rules. Actual for steps: notify_persons, notify_on_call_from_schedule and notify_user_group,notify_team_members
                      Will activate "important" personal notification rules. Actual for steps: notify_persons, notify_on_call_from_schedule and notify_user_group,notify_team_members
                    type: boolean
                  notifyIfTimeFrom:
                    description: |-
                      (String) The beginning of the time interval for notify_if_time_from_to type step in UTC (for example 08:00:00Z).
                      The beginning of the time interval for notify_if_time_from_to type step in UTC (for example 08:00:00Z).
                    type: string
                  notifyIfTimeTo:
                    description: |-
                      (String) The end of the time interval for notify_if_time_from_to type step in UTC (for example 18:00:00Z).
                      The end of the time interval for notify_if_time_from_to type step in UTC (for example 18:00:00Z).
                    type: string
                  notifyOnCallFromSchedule:
                    description: |-
                      (String) ID of a Schedule for notify_on_call_from_schedule type step.
                      ID of a Schedule for notify_on_call_from_schedule type step.
                    type: string
                  notifyOnCallFromScheduleRef:
                    description: Reference to a Schedule in oncall to populate notifyOnCallFromSchedule.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  notifyOnCallFromScheduleSelector:
                    description: Selector for a Schedule in oncall to populate notifyOnCallFromSchedule.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  notifyToTeamMembers:
                    description: |-
                      (String) The ID of a Team for a notify_team_members type step.
                      The ID of a Team for a notify_team_members type step.
                    type: string
                  personsToNotify:
                    description: |-
                      (Set of String) The list of ID's of users for notify_persons type step.
                      The list of ID's of users for notify_persons type step.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  personsToNotifyNextEachTime:
                    description: |-
                      (Set of String) The list of ID's of users for notify_person_next_each_time type step.
                      The list of ID's of users for notify_person_next_each_time type step.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  position:
                    description: |-
                      (Number) The position of the escalation step (starts from 0).
                      The position of the escalation step (starts from 0).
                    type: number
                  type:
                    description: |-
                      (String) The type of escalation policy. Can be wait, notify_persons, notify_person_next_each_time, notify_on_call_from_schedule, trigger_webhook, notify_user_group, resolve, notify_whole_channel, notify_if_time_from_to, repeat_escalation, notify_team_members
                      The type of escalation policy. Can be wait, notify_persons, notify_person_next_each_time, notify_on_call_from_schedule, trigger_webhook, notify_user_group, resolve, notify_whole_channel, notify_if_time_from_to, repeat_escalation, notify_team_members
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  actionToTrigger:
                    description: |-
                      (String) The ID of an Action for trigger_webhook type step.
                      The ID of an Action for trigger_webhook type step.
                    type: string
                  actionToTriggerRef:
                    description: Reference to a OutgoingWebhook in oncall to populate
                      actionToTrigger.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  actionToTriggerSelector:
                    description: Selector for a OutgoingWebhook in oncall to populate
                      actionToTrigger.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  duration:
                    description: |-
                      (Number) The duration of delay for wait type step.
                      The duration of delay for wait type step.
                    type: number
                  escalationChainId:
                    description: |-
                      (String) The ID of the escalation chain.
                      The ID of the escalation chain.
                    type: string
                  escalationChainRef:
                    description: Reference to a EscalationChain in oncall to populate
                      escalationChainId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  escalationChainSelector:
                    description: Selector for a EscalationChain in oncall to populate
                      escalationChainId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  groupToNotify:
                    description: |-
                      (String) The ID of a User Group for notify_user_group type step.
                      The ID of a User Group for notify_user_group type step.
                    type: string
                  important:
                    description: |-
                      (Boolean) Will activate "important" personal notification rules. Actual for steps: notify_persons, notify_on_call_from_schedule and notify_user_group,notify_team_members
                      Will activate "important" personal notification rules. Actual for steps: notify_persons, notify_on_call_from_schedule and notify_user_group,notify_team_members
                    type: boolean
                  notifyIfTimeFrom:
                    description: |-
                      (String) The beginning of the time interval for notify_if_time_from_to type step in UTC (for example 08:00:00Z).
                      The beginning of the time interval for notify_if_time_from_to type step in UTC (for example 08:00:00Z).
                    type: string
                  notifyIfTimeTo:
                    description: |-
                      (String) The end of the time interval for notify_if_time_from_to type step in UTC (for example 18:00:00Z).
                      The end of the time interval for notify_if_time_from_to type step in UTC (for example 18:00:00Z).
                    type: string
                  notifyOnCallFromSchedule:
                    description: |-
                      (String) ID of a Schedule for notify_on_call_from_schedule type step.
                      ID of a Schedule for notify_on_call_from_schedule type step.
                    type: string
                  notifyOnCallFromScheduleRef:
                    description: Reference to a Schedule in oncall to populate notifyOnCallFromSchedule.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  notifyOnCallFromScheduleSelector:
                    description: Selector for a Schedule in oncall to populate notifyOnCallFromSchedule.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  notifyToTeamMembers:
                    description: |-
                      (String) The ID of a Team for a notify_team_members type step.
                      The ID of a Team for a notify_team_members type step.
                    type: string
                  personsToNotify:
                    description: |-
                      (Set of String) The list of ID's of users for notify_persons type step.
                      The list of ID's of users for notify_persons type step.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  personsToNotifyNextEachTime:
                    description: |-
                      (Set of String) The list of ID's of users for notify_person_next_each_time type step.
                      The list of ID's of users for notify_person_next_each_time type step.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  position:
                    description: |-
                      (Number) The position of the escalation step (starts from 0).
                      The position of the escalation step (starts from 0).
                    type: number
                  type:
                    description: |-
                      (String) The type of escalation policy. Can be wait, notify_persons, notify_person_next_each_time, notify_on_call_from_schedule, trigger_webhook, notify_user_group, resolve, notify_whole_channel, notify_if_time_from_to, repeat_escalation, notify_team_members
                      The type of escalation policy. Can be wait, notify_persons, notify_person_next_each_time, notify_on_call_from_schedule, trigger_webhook, notify_user_group, resolve, notify_whole_channel, notify_if_time_from_to, repeat_escalation, notify_team_members
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.position is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.position)
                || (has(self.initProvider) && has(self.initProvider.position))'
            - message: spec.forProvider.type is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.type)
                || (has(self.initProvider) && has(self.initProvider.type))'
          status:
            description: EscalationStatus defines the observed state of Escalation.
            properties:
              atProvider:
                properties:
                  actionToTrigger:
                    description: |-
                      (String) The ID of an Action for trigger_webhook type step.
                      The ID of an Action for trigger_webhook type step.
                    type: string
                  duration:
                    description: |-
                      (Number) The duration of delay for wait type step.
                      The duration of delay for wait type step.
                    type: number
                  escalationChainId:
                    description: |-
                      (String) The ID of the escalation chain.
                      The ID of the escalation chain.
                    type: string
                  groupToNotify:
                    description: |-
                      (String) The ID of a User Group for notify_user_group type step.
                      The ID of a User Group for notify_user_group type step.
                    type: string
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  important:
                    description: |-
                      (Boolean) Will activate "important" personal notification rules. Actual for steps: notify_persons, notify_on_call_from_schedule and notify_user_group,notify_team_members
                      Will activate "important" personal notification rules. Actual for steps: notify_persons, notify_on_call_from_schedule and notify_user_group,notify_team_members
                    type: boolean
                  notifyIfTimeFrom:
                    description: |-
                      (String) The beginning of the time interval for notify_if_time_from_to type step in UTC (for example 08:00:00Z).
                      The beginning of the time interval for notify_if_time_from_to type step in UTC (for example 08:00:00Z).
                    type: string
                  notifyIfTimeTo:
                    description: |-
                      (String) The end of the time interval for notify_if_time_from_to type step in UTC (for example 18:00:00Z).
                      The end of the time interval for notify_if_time_from_to type step in UTC (for example 18:00:00Z).
                    type: string
                  notifyOnCallFromSchedule:
                    description: |-
                      (String) ID of a Schedule for notify_on_call_from_schedule type step.
                      ID of a Schedule for notify_on_call_from_schedule type step.
                    type: string
                  notifyToTeamMembers:
                    description: |-
                      (String) The ID of a Team for a notify_team_members type step.
                      The ID of a Team for a notify_team_members type step.
                    type: string
                  personsToNotify:
                    description: |-
                      (Set of String) The list of ID's of users for notify_persons type step.
                      The list of ID's of users for notify_persons type step.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  personsToNotifyNextEachTime:
                    description: |-
                      (Set of String) The list of ID's of users for notify_person_next_each_time type step.
                      The list of ID's of users for notify_person_next_each_time type step.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  position:
                    description: |-
                      (Number) The position of the escalation step (starts from 0).
                      The position of the escalation step (starts from 0).
                    type: number
                  type:
                    description: |-
                      (String) The type of escalation policy. Can be wait, notify_persons, notify_person_next_each_time, notify_on_call_from_schedule, trigger_webhook, notify_user_group, resolve, notify_whole_channel, notify_if_time_from_to, repeat_escalation, notify_team_members
                      The type of escalation policy. Can be wait, notify_persons, notify_person_next_each_time, notify_on_call_from_schedule, trigger_webhook, notify_user_group, resolve, notify_whole_channel, notify_if_time_from_to, repeat_escalation, notify_team_members
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: integrations.oncall.grafana.crossplane.io
spec:
  group: oncall.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: Integration
    listKind: IntegrationList
    plural: integrations
    singular: integration
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Integration is the Schema for the Integrations API. Official
          documentation https://grafana.com/docs/oncall/latest/integrations/HTTP API
          https://grafana.com/docs/oncall/latest/oncall-api-reference/
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: IntegrationSpec defines the desired state of Integration
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  defaultRoute:
                    description: |-
                      (Block List, Min: 1, Max: 1) The Default route for all alerts from the given integration (see below for nested schema)
                      The Default route for all alerts from the given integration
                    items:
                      properties:
                        escalationChainId:
                          description: |-
                            (String) The ID of the escalation chain.
                            The ID of the escalation chain.
                          type: string
                        escalationChainRef:
                          description: Reference to a EscalationChain in oncall to
                            populate escalationChainId.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        escalationChainSelector:
                          description: Selector for a EscalationChain in oncall to
                            populate escalationChainId.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        msteams:
                          description: |-
                            specific settings for a route. (see below for nested schema)
                            MS teams-specific settings for a route.
                          items:
                            properties:
                              enabled:
                                description: |-
                                  (Boolean) Enable notification in MS teams. Defaults to true.
                                  Enable notification in MS teams. Defaults to `true`.
                                type: boolean
                              id:
                                description: |-
                                  (String) The ID of this resource.
                                  MS teams channel id. Alerts will be directed to this channel in Microsoft teams.
                                type: string
                            type: object
                          type: array
                        slack:
                          description: |-
                            specific settings for a route. (see below for nested schema)
                            Slack-specific settings for a route.
                          items:
                            properties:
                              channelId:
                                description: |-
                                  (String) Slack channel id. Alerts will be directed to this channel in Slack.
                                  Slack channel id. Alerts will be directed to this channel in Slack.
                                type: string
                              enabled:
                                description: |-
                                  (Boolean) Enable notification in MS teams. Defaults to true.
                                  Enable notification in Slack. Defaults to `true`.
                                type: boolean
                            type: object
                          type: array
                        telegram:
                          description: |-
                            specific settings for a route. (see below for nested schema)
                            Telegram-specific settings for a route.
                          items:
                            properties:
                              enabled:
                                description: |-
                                  (Boolean) Enable notification in MS teams. Defaults to true.
                                  Enable notification in Telegram. Defaults to `true`.
                                type: boolean
                              id:
                                description: |-
                                  (String) The ID of this resource.
                                  Telegram channel id. Alerts will be directed to this channel in Telegram.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  name:
                    description: |-
                      (String) The name of the service integration.
                      The name of the service integration.
                    type: string
                  teamId:
                    description: |-
                      (String) The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the grafana_oncall_team datasource.
                      The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the `grafana_oncall_team` datasource.
                    type: string
                  templates:
                    description: |-
                      (Block List, Max: 1) Jinja2 templates for Alert payload. An empty templates block will be ignored. (see below for nested schema)
                      Jinja2 templates for Alert payload. An empty templates block will be ignored.
                    items:
                      properties:
                        acknowledgeSignal:
                          description: |-
                            (String) Template for sending a signal to acknowledge the Incident.
                            Template for sending a signal to acknowledge the Incident.
                          type: string
                        email:
                          description: |-
                            (Block List, Max: 1) Templates for Email. (see below for nested schema)
                            Templates for Email.
                          items:
                            properties:
                              message:
                                description: |-
                                  (String) Template for Alert message.
                                  Template for Alert message.
                                type: string
                              title:
                                description: |-
                                  (String) Template for Alert title.
                                  Template for Alert title.
                                type: string
                            type: object
                          type: array
                        groupingKey:
                          description: |-
                            (String) Template for the key by which alerts are grouped.
                            Template for the key by which alerts are grouped.
                          type: string
                        microsoftTeams:
                          description: |-
                            (Block List, Max: 1) Templates for Microsoft Teams. (see below for nested schema)
                            Templates for Microsoft Teams.
                          items:
                            properties:
                              imageUrl:
                                description: |-
                                  (String) Template for Alert image url.
                                  Template for Alert image url.
                                type: string
                              message:
                                description: |-
                                  (String) Template for Alert message.
                                  Template for Alert message.
                                type: string
                              title:
                                description: |-
                                  (String) Template for Alert title.
                                  Template for Alert title.
                                type: string
                            type: object
                          type: array
                        phoneCall:
                          description: |-
                            (Block List, Max: 1) Templates for Phone Call. (see below for nested schema)
                            Templates for Phone Call.
                          items:
                            properties:
                              title:
                                description: |-
                                  (String) Template for Alert title.
                                  Template for Alert title.
                                type: string
                            type: object
                          type: array
                        resolveSignal:
                          description: |-
                            (String) Template for sending a signal to resolve the Incident.
                            Template for sending a signal to resolve the Incident.
                          type: string
                        slack:
                          description: |-
                            specific settings for a route. (see below for nested schema)
                            Templates for Slack.
                          items:
                            properties:
                              imageUrl:
                                description: |-
                                  (String) Template for Alert image url.
                                  Template for Alert image url.
                                type: string
                              message:
                                description: |-
                                  (String) Template for Alert message.
                                  Template for Alert message.
                                type: string
                              title:
                                description: |-
                                  (String) Template for Alert title.
                                  Template for Alert title.
                                type: string
                            type: object
                          type: array
                        sms:
                          description: |-
                            (Block List, Max: 1) Templates for SMS. (see below for nested schema)
                            Templates for SMS.
                          items:
                            properties:
                              title:
                                description: |-
                                  (String) Template for Alert title.
                                  Template for Alert title.
                                type: string
                            type: object
                          type: array
                        sourceLink:
                          description: |-
                            (String) Template for a source link.
                            Template for a source link.
                          type: string
                        telegram:
                          description: |-
                            specific settings for a route. (see below for nested schema)
                            Templates for Telegram.
                          items:
                            properties:
                              imageUrl:
                                description: |-
                                  (String) Template for Alert image url.
                                  Template for Alert image url.
                                type: string
                              message:
                                description: |-
                                  (String) Template for Alert message.
                                  Template for Alert message.
                                type: string
                              title:
                                description: |-
                                  (String) Template for Alert title.
                                  Template for Alert title.
                                type: string
                            type: object
                          type: array
                        web:
                          description: |-
                            (Block List, Max: 1) Templates for Web. (see below for nested schema)
                            Templates for Web.
                          items:
                            properties:
                              imageUrl:
                                description: |-
                                  (String) Template for Alert image url.
                                  Template for Alert image url.
                                type: string
                              message:
                                description: |-
                                  (String) Template for Alert message.
                                  Template for Alert message.
                                type: string
                              title:
                                description: |-
                                  (String) Template for Alert title.
                                  Template for Alert title.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  type:
                    description: |-
                      (String) The type of integration. Can be grafana, grafana_alerting, webhook, alertmanager, kapacitor, fabric, newrelic, datadog, pagerduty, pingdom, elastalert, amazon_sns, curler, sentry, formatted_webhook, heartbeat, demo, manual, stackdriver, uptimerobot, sentry_platform, zabbix, prtg, slack_channel, inbound_email, direct_paging, jira.
                      The type of integration. Can be grafana, grafana_alerting, webhook, alertmanager, kapacitor, fabric, newrelic, datadog, pagerduty, pingdom, elastalert, amazon_sns, curler, sentry, formatted_webhook, heartbeat, demo, manual, stackdriver, uptimerobot, sentry_platform, zabbix, prtg, slack_channel, inbound_email, direct_paging, jira.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  defaultRoute:
                    description: |-
                      (Block List, Min: 1, Max: 1) The Default route for all alerts from the given integration (see below for nested schema)
                      The Default route for all alerts from the given integration
                    items:
                      properties:
                        escalationChainId:
                          description: |-
                            (String) The ID of the escalation chain.
                            The ID of the escalation chain.
                          type: string
                        escalationChainRef:
                          description: Reference to a EscalationChain in oncall to
                            populate escalationChainId.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        escalationChainSelector:
                          description: Selector for a EscalationChain in oncall to
                            populate escalationChainId.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        msteams:
                          description: |-
                            specific settings for a route. (see below for nested schema)
                            MS teams-specific settings for a route.
                          items:
                            properties:
                              enabled:
                                description: |-
                                  (Boolean) Enable notification in MS teams. Defaults to true.
                                  Enable notification in MS teams. Defaults to `true`.
                                type: boolean
                              id:
                                description: |-
                                  (String) The ID of this resource.
                                  MS teams channel id. Alerts will be directed to this channel in Microsoft teams.
                                type: string
                            type: object
                          type: array
                        slack:
                          description: |-
                            specific settings for a route. (see below for nested schema)
                            Slack-specific settings for a route.
                          items:
                            properties:
                              channelId:
                                description: |-
                                  (String) Slack channel id. Alerts will be directed to this channel in Slack.
                                  Slack channel id. Alerts will be directed to this channel in Slack.
                                type: string
                              enabled:
                                description: |-
                                  (Boolean) Enable notification in MS teams. Defaults to true.
                                  Enable notification in Slack. Defaults to `true`.
                                type: boolean
                            type: object
                          type: array
                        telegram:
                          description: |-
                            specific settings for a route. (see below for nested schema)
                            Telegram-specific settings for a route.
                          items:
                            properties:
                              enabled:
                                description: |-
                                  (Boolean) Enable notification in MS teams. Defaults to true.
                                  Enable notification in Telegram. Defaults to `true`.
                                type: boolean
                              id:
                                description: |-
                                  (String) The ID of this resource.
                                  Telegram channel id. Alerts will be directed to this channel in Telegram.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  name:
                    description: |-
                      (String) The name of the service integration.
                      The name of the service integration.
                    type: string
                  teamId:
                    description: |-
                      (String) The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the grafana_oncall_team datasource.
                      The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the `grafana_oncall_team` datasource.
                    type: string
                  templates:
                    description: |-
                      (Block List, Max: 1) Jinja2 templates for Alert payload. An empty templates block will be ignored. (see below for nested schema)
                      Jinja2 templates for Alert payload. An empty templates block will be ignored.
                    items:
                      properties:
                        acknowledgeSignal:
                          description: |-
                            (String) Template for sending a signal to acknowledge the Incident.
                            Template for sending a signal to acknowledge the Incident.
                          type: string
                        email:
                          description: |-
                            (Block List, Max: 1) Templates for Email. (see below for nested schema)
                            Templates for Email.
                          items:
                            properties:
                              message:
                                description: |-
                                  (String) Template for Alert message.
                                  Template for Alert message.
                                type: string
                              title:
                                description: |-
                                  (String) Template for Alert title.
                                  Template for Alert title.
                                type: string
                            type: object
                          type: array
                        groupingKey:
                          description: |-
                            (String) Template for the key by which alerts are grouped.
                            Template for the key by which alerts are grouped.
                          type: string
                        microsoftTeams:
                          description: |-
                            (Block List, Max: 1) Templates for Microsoft Teams. (see below for nested schema)
                            Templates for Microsoft Teams.
                          items:
                            properties:
                              imageUrl:
                                description: |-
                                  (String) Template for Alert image url.
                                  Template for Alert image url.
                                type: string
                              message:
                                description: |-
                                  (String) Template for Alert message.
                                  Template for Alert message.
                                type: string
                              title:
                                description: |-
                                  (String) Template for Alert title.
                                  Template for Alert title.
                                type: string
                            type: object
                          type: array
                        phoneCall:
                          description: |-
                            (Block List, Max: 1) Templates for Phone Call. (see below for nested schema)
                            Templates for Phone Call.
                          items:
                            properties:
                              title:
                                description: |-
                                  (String) Template for Alert title.
                                  Template for Alert title.
                                type: string
                            type: object
                          type: array
                        resolveSignal:
                          description: |-
                            (String) Template for sending a signal to resolve the Incident.
                            Template for sending a signal to resolve the Incident.
                          type: string
                        slack:
                          description: |-
                            specific settings for a route. (see below for nested schema)
                            Templates for Slack.
                          items:
                            properties:
                              imageUrl:
                                description: |-
                                  (String) Template for Alert image url.
                                  Template for Alert image url.
                                type: string
                              message:
                                description: |-
                                  (String) Template for Alert message.
                                  Template for Alert message.
                                type: string
                              title:
                                description: |-
                                  (String) Template for Alert title.
                                  Template for Alert title.
                                type: string
                            type: object
                          type: array
                        sms:
                          description: |-
                            (Block List, Max: 1) Templates for SMS. (see below for nested schema)
                            Templates for SMS.
                          items:
                            properties:
                              title:
                                description: |-
                                  (String) Template for Alert title.
                                  Template for Alert title.
                                type: string
                            type: object
                          type: array
                        sourceLink:
                          description: |-
                            (String) Template for a source link.
                            Template for a source link.
                          type: string
                        telegram:
                          description: |-
                            specific settings for a route. (see below for nested schema)
                            Templates for Telegram.
                          items:
                            properties:
                              imageUrl:
                                description: |-
                                  (String) Template for Alert image url.
                                  Template for Alert image url.
                                type: string
                              message:
                                description: |-
                                  (String) Template for Alert message.
                                  Template for Alert message.
                                type: string
                              title:
                                description: |-
                                  (String) Template for Alert title.
                                  Template for Alert title.
                                type: string
                            type: object
                          type: array
                        web:
                          description: |-
                            (Block List, Max: 1) Templates for Web. (see below for nested schema)
                            Templates for Web.
                          items:
                            properties:
                              imageUrl:
                                description: |-
                                  (String) Template for Alert image url.
                                  Template for Alert image url.
                                type: string
                              message:
                                description: |-
                                  (String) Template for Alert message.
                                  Template for Alert message.
                                type: string
                              title:
                                description: |-
                                  (String) Template for Alert title.
                                  Template for Alert title.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  type:
                    description: |-
                      (String) The type of integration. Can be grafana, grafana_alerting, webhook, alertmanager, kapacitor, fabric, newrelic, datadog, pagerduty, pingdom, elastalert, amazon_sns, curler, sentry, formatted_webhook, heartbeat, demo, manual, stackdriver, uptimerobot, sentry_platform, zabbix, prtg, slack_channel, inbound_email, direct_paging, jira.
                      The type of integration. Can be grafana, grafana_alerting, webhook, alertmanager, kapacitor, fabric, newrelic, datadog, pagerduty, pingdom, elastalert, amazon_sns, curler, sentry, formatted_webhook, heartbeat, demo, manual, stackdriver, uptimerobot, sentry_platform, zabbix, prtg, slack_channel, inbound_email, direct_paging, jira.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.defaultRoute is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.defaultRoute)
                || (has(self.initProvider) && has(self.initProvider.defaultRoute))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.type is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.type)
                || (has(self.initProvider) && has(self.initProvider.type))'
          status:
            description: IntegrationStatus defines the observed state of Integration.
            properties:
              atProvider:
                properties:
                  defaultRoute:
                    description: |-
                      (Block List, Min: 1, Max: 1) The Default route for all alerts from the given integration (see below for nested schema)
                      The Default route for all alerts from the given integration
                    items:
                      properties:
                        escalationChainId:
                          description: |-
                            (String) The ID of the escalation chain.
                            The ID of the escalation chain.
                          type: string
                        id:
                          description: (String) The ID of this resource.
                          type: string
                        msteams:
                          description: |-
                            specific settings for a route. (see below for nested schema)
                            MS teams-specific settings for a route.
                          items:
                            properties:
                              enabled:
                                description: |-
                                  (Boolean) Enable notification in MS teams. Defaults to true.
                                  Enable notification in MS teams. Defaults to `true`.
                                type: boolean
                              id:
                                description: |-
                                  (String) The ID of this resource.
                                  MS teams channel id. Alerts will be directed to this channel in Microsoft teams.
                                type: string
                            type: object
                          type: array
                        slack:
                          description: |-
                            specific settings for a route. (see below for nested schema)
                            Slack-specific settings for a route.
                          items:
                            properties:
                              channelId:
                                description: |-
                                  (String) Slack channel id. Alerts will be directed to this channel in Slack.
                                  Slack channel id. Alerts will be directed to this channel in Slack.
                                type: string
                              enabled:
                                description: |-
                                  (Boolean) Enable notification in MS teams. Defaults to true.
                                  Enable notification in Slack. Defaults to `true`.
                                type: boolean
                            type: object
                          type: array
                        telegram:
                          description: |-
                            specific settings for a route. (see below for nested schema)
                            Telegram-specific settings for a route.
                          items:
                            properties:
                              enabled:
                                description: |-
                                  (Boolean) Enable notification in MS teams. Defaults to true.
                                  Enable notification in Telegram. Defaults to `true`.
                                type: boolean
                              id:
                                description: |-
                                  (String) The ID of this resource.
                                  Telegram channel id. Alerts will be directed to this channel in Telegram.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  link:
                    description: |-
                      (String) The link for using in an integrated tool.
                      The link for using in an integrated tool.
                    type: string
                  name:
                    description: |-
                      (String) The name of the service integration.
                      The name of the service integration.
                    type: string
                  teamId:
                    description: |-
                      (String) The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the grafana_oncall_team datasource.
                      The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the `grafana_oncall_team` datasource.
                    type: string
                  templates:
                    description: |-
                      (Block List, Max: 1) Jinja2 templates for Alert payload. An empty templates block will be ignored. (see below for nested schema)
                      Jinja2 templates for Alert payload. An empty templates block will be ignored.
                    items:
                      properties:
                        acknowledgeSignal:
                          description: |-
                            (String) Template for sending a signal to acknowledge the Incident.
                            Template for sending a signal to acknowledge the Incident.
                          type: string
                        email:
                          description: |-
                            (Block List, Max: 1) Templates for Email. (see below for nested schema)
                            Templates for Email.
                          items:
                            properties:
                              message:
                                description: |-
                                  (String) Template for Alert message.
                                  Template for Alert message.
                                type: string
                              title:
                                description: |-
                                  (String) Template for Alert title.
                                  Template for Alert title.
                                type: string
                            type: object
                          type: array
                        groupingKey:
                          description: |-
                            (String) Template for the key by which alerts are grouped.
                            Template for the key by which alerts are grouped.
                          type: string
                        microsoftTeams:
                          description: |-
                            (Block List, Max: 1) Templates for Microsoft Teams. (see below for nested schema)
                            Templates for Microsoft Teams.
                          items:
                            properties:
                              imageUrl:
                                description: |-
                                  (String) Template for Alert image url.
                                  Template for Alert image url.
                                type: string
                              message:
                                description: |-
                                  (String) Template for Alert message.
                                  Template for Alert message.
                                type: string
                              title:
                                description: |-
                                  (String) Template for Alert title.
                                  Template for Alert title.
                                type: string
                            type: object
                          type: array
                        phoneCall:
                          description: |-
                            (Block List, Max: 1) Templates for Phone Call. (see below for nested schema)
                            Templates for Phone Call.
                          items:
                            properties:
                              title:
                                description: |-
                                  (String) Template for Alert title.
                                  Template for Alert title.
                                type: string
                            type: object
                          type: array
                        resolveSignal:
                          description: |-
                            (String) Template for sending a signal to resolve the Incident.
                            Template for sending a signal to resolve the Incident.
                          type: string
                        slack:
                          description: |-
                            specific settings for a route. (see below for nested schema)
                            Templates for Slack.
                          items:
                            properties:
                              imageUrl:
                                description: |-
                                  (String) Template for Alert image url.
                                  Template for Alert image url.
                                type: string
                              message:
                                description: |-
                                  (String) Template for Alert message.
                                  Template for Alert message.
                                type: string
                              title:
                                description: |-
                                  (String) Template for Alert title.
                                  Template for Alert title.
                                type: string
                            type: object
                          type: array
                        sms:
                          description: |-
                            (Block List, Max: 1) Templates for SMS. (see below for nested schema)
                            Templates for SMS.
                          items:
                            properties:
                              title:
                                description: |-
                                  (String) Template for Alert title.
                                  Template for Alert title.
                                type: string
                            type: object
                          type: array
                        sourceLink:
                          description: |-
                            (String) Template for a source link.
                            Template for a source link.
                          type: string
                        telegram:
                          description: |-
                            specific settings for a route. (see below for nested schema)
                            Templates for Telegram.
                          items:
                            properties:
                              imageUrl:
                                description: |-
                                  (String) Template for Alert image url.
                                  Template for Alert image url.
                                type: string
                              message:
                                description: |-
                                  (String) Template for Alert message.
                                  Template for Alert message.
                                type: string
                              title:
                                description: |-
                                  (String) Template for Alert title.
                                  Template for Alert title.
                                type: string
                            type: object
                          type: array
                        web:
                          description: |-
                            (Block List, Max: 1) Templates for Web. (see below for nested schema)
                            Templates for Web.
                          items:
                            properties:
                              imageUrl:
                                description: |-
                                  (String) Template for Alert image url.
                                  Template for Alert image url.
                                type: string
                              message:
                                description: |-
                                  (String) Template for Alert message.
                                  Template for Alert message.
                                type: string
                              title:
                                description: |-
                                  (String) Template for Alert title.
                                  Template for Alert title.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  type:
                    description: |-
                      (String) The type of integration. Can be grafana, grafana_alerting, webhook, alertmanager, kapacitor, fabric, newrelic, datadog, pagerduty, pingdom, elastalert, amazon_sns, curler, sentry, formatted_webhook, heartbeat, demo, manual, stackdriver, uptimerobot, sentry_platform, zabbix, prtg, slack_channel, inbound_email, direct_paging, jira.
                      The type of integration. Can be grafana, grafana_alerting, webhook, alertmanager, kapacitor, fabric, newrelic, datadog, pagerduty, pingdom, elastalert, amazon_sns, curler, sentry, formatted_webhook, heartbeat, demo, manual, stackdriver, uptimerobot, sentry_platform, zabbix, prtg, slack_channel, inbound_email, direct_paging, jira.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: oncallshifts.oncall.grafana.crossplane.io
spec:
  group: oncall.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: OnCallShift
    listKind: OnCallShiftList
    plural: oncallshifts
    singular: oncallshift
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: OnCallShift is the Schema for the OnCallShifts API. HTTP API
          https://grafana.com/docs/oncall/latest/oncall-api-reference/on_call_shifts/
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: OnCallShiftSpec defines the desired state of OnCallShift
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  byDay:
                    description: |-
                      (Set of String) This parameter takes a list of days in iCal format. Can be MO, TU, WE, TH, FR, SA, SU
                      This parameter takes a list of days in iCal format. Can be MO, TU, WE, TH, FR, SA, SU
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  byMonth:
                    description: |-
                      (Set of Number) This parameter takes a list of months. Valid values are 1 to 12
                      This parameter takes a list of months. Valid values are 1 to 12
                    items:
                      type: number
                    type: array
                    x-kubernetes-list-type: set
                  byMonthday:
                    description: |-
                      31 to -1
                      This parameter takes a list of days of the month.  Valid values are 1 to 31 or -31 to -1
                    items:
                      type: number
                    type: array
                    x-kubernetes-list-type: set
                  duration:
                    description: |-
                      (Number) The duration of the event.
                      The duration of the event.
                    type: number
                  frequency:
                    description: |-
                      (String) The frequency of the event. Can be hourly, daily, weekly, monthly
                      The frequency of the event. Can be hourly, daily, weekly, monthly
                    type: string
                  interval:
                    description: |-
                      (Number) The positive integer representing at which intervals the recurrence rule repeats.
                      The positive integer representing at which intervals the recurrence rule repeats.
                    type: number
                  level:
                    description: |-
                      (Number) The priority level. The higher the value, the higher the priority.
                      The priority level. The higher the value, the higher the priority.
                    type: number
                  name:
                    description: |-
                      (String) The shift's name.
                      The shift's name.
                    type: string
                  rollingUsers:
                    description: |-
                      call users (for rolling_users event type)
                      The list of lists with on-call users (for rolling_users event type)
                    items:
                      items:
                        type: string
                      type: array
                    type: array
                  start:
                    description: |-
                      call shift. This parameter takes a date format as yyyy-MM-dd'T'HH:mm:ss (for example "2020-09-05T08:00:00")
                      The start time of the on-call shift. This parameter takes a date format as yyyy-MM-dd'T'HH:mm:ss (for example "2020-09-05T08:00:00")
                    type: string
                  startRotationFromUserIndex:
                    description: |-
                      call rotation starts.
                      The index of the list of users in rolling_users, from which on-call rotation starts.
                    type: number
                  teamId:
                    description: |-
                      (String) The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the grafana_oncall_team datasource.
                      The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the `grafana_oncall_team` datasource.
                    type: string
                  timeZone:
                    description: |-
                      (String) The shift's timezone.  Overrides schedule's timezone.
                      The shift's timezone.  Overrides schedule's timezone.
                    type: string
                  type:
                    description: |-
                      (String) The shift's type. Can be rolling_users, recurrent_event, single_event
                      The shift's type. Can be rolling_users, recurrent_event, single_event
                    type: string
                  users:
                    description: |-
                      call users (for single_event and recurrent_event event type).
                      The list of on-call users (for single_event and recurrent_event event type).
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  weekStart:
                    description: |-
                      (String) Start day of the week in iCal format. Can be MO, TU, WE, TH, FR, SA, SU
                      Start day of the week in iCal format. Can be MO, TU, WE, TH, FR, SA, SU
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  byDay:
                    description: |-
                      (Set of String) This parameter takes a list of days in iCal format. Can be MO, TU, WE, TH, FR, SA, SU
                      This parameter takes a list of days in iCal format. Can be MO, TU, WE, TH, FR, SA, SU
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  byMonth:
                    description: |-
                      (Set of Number) This parameter takes a list of months. Valid values are 1 to 12
                      This parameter takes a list of months. Valid values are 1 to 12
                    items:
                      type: number
                    type: array
                    x-kubernetes-list-type: set
                  byMonthday:
                    description: |-
                      31 to -1
                      This parameter takes a list of days of the month.  Valid values are 1 to 31 or -31 to -1
                    items:
                      type: number
                    type: array
                    x-kubernetes-list-type: set
                  duration:
                    description: |-
                      (Number) The duration of the event.
                      The duration of the event.
                    type: number
                  frequency:
                    description: |-
                      (String) The frequency of the event. Can be hourly, daily, weekly, monthly
                      The frequency of the event. Can be hourly, daily, weekly, monthly
                    type: string
                  interval:
                    description: |-
                      (Number) The positive integer representing at which intervals the recurrence rule repeats.
                      The positive integer representing at which intervals the recurrence rule repeats.
                    type: number
                  level:
                    description: |-
                      (Number) The priority level. The higher the value, the higher the priority.
                      The priority level. The higher the value, the higher the priority.
                    type: number
                  name:
                    description: |-
                      (String) The shift's name.
                      The shift's name.
                    type: string
                  rollingUsers:
                    description: |-
                      call users (for rolling_users event type)
                      The list of lists with on-call users (for rolling_users event type)
                    items:
                      items:
                        type: string
                      type: array
                    type: array
                  start:
                    description: |-
                      call shift. This parameter takes a date format as yyyy-MM-dd'T'HH:mm:ss (for example "2020-09-05T08:00:00")
                      The start time of the on-call shift. This parameter takes a date format as yyyy-MM-dd'T'HH:mm:ss (for example "2020-09-05T08:00:00")
                    type: string
                  startRotationFromUserIndex:
                    description: |-
                      call rotation starts.
                      The index of the list of users in rolling_users, from which on-call rotation starts.
                    type: number
                  teamId:
                    description: |-
                      (String) The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the grafana_oncall_team datasource.
                      The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the `grafana_oncall_team` datasource.
                    type: string
                  timeZone:
                    description: |-
                      (String) The shift's timezone.  Overrides schedule's timezone.
                      The shift's timezone.  Overrides schedule's timezone.
                    type: string
                  type:
                    description: |-
                      (String) The shift's type. Can be rolling_users, recurrent_event, single_event
                      The shift's type. Can be rolling_users, recurrent_event, single_event
                    type: string
                  users:
                    description: |-
                      call users (for single_event and recurrent_event event type).
                      The list of on-call users (for single_event and recurrent_event event type).
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  weekStart:
                    description: |-
                      (String) Start day of the week in iCal format. Can be MO, TU, WE, TH, FR, SA, SU
                      Start day of the week in iCal format. Can be MO, TU, WE, TH, FR, SA, SU
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.duration is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.duration)
                || (has(self.initProvider) && has(self.initProvider.duration))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.start is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.start)
                || (has(self.initProvider) && has(self.initProvider.start))'
            - message: spec.forProvider.type is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.type)
                || (has(self.initProvider) && has(self.initProvider.type))'
          status:
            description: OnCallShiftStatus defines the observed state of OnCallShift.
            properties:
              atProvider:
                properties:
                  byDay:
                    description: |-
                      (Set of String) This parameter takes a list of days in iCal format. Can be MO, TU, WE, TH, FR, SA, SU
                      This parameter takes a list of days in iCal format. Can be MO, TU, WE, TH, FR, SA, SU
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  byMonth:
                    description: |-
                      (Set of Number) This parameter takes a list of months. Valid values are 1 to 12
                      This parameter takes a list of months. Valid values are 1 to 12
                    items:
                      type: number
                    type: array
                    x-kubernetes-list-type: set
                  byMonthday:
                    description: |-
                      31 to -1
                      This parameter takes a list of days of the month.  Valid values are 1 to 31 or -31 to -1
                    items:
                      type: number
                    type: array
                    x-kubernetes-list-type: set
                  duration:
                    description: |-
                      (Number) The duration of the event.
                      The duration of the event.
                    type: number
                  frequency:
                    description: |-
                      (String) The frequency of the event. Can be hourly, daily, weekly, monthly
                      The frequency of the event. Can be hourly, daily, weekly, monthly
                    type: string
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  interval:
                    description: |-
                      (Number) The positive integer representing at which intervals the recurrence rule repeats.
                      The positive integer representing at which intervals the recurrence rule repeats.
                    type: number
                  level:
                    description: |-
                      (Number) The priority level. The higher the value, the higher the priority.
                      The priority level. The higher the value, the higher the priority.
                    type: number
                  name:
                    description: |-
                      (String) The shift's name.
                      The shift's name.
                    type: string
                  rollingUsers:
                    description: |-
                      call users (for rolling_users event type)
                      The list of lists with on-call users (for rolling_users event type)
                    items:
                      items:
                        type: string
                      type: array
                    type: array
                  start:
                    description: |-
                      call shift. This parameter takes a date format as yyyy-MM-dd'T'HH:mm:ss (for example "2020-09-05T08:00:00")
                      The start time of the on-call shift. This parameter takes a date format as yyyy-MM-dd'T'HH:mm:ss (for example "2020-09-05T08:00:00")
                    type: string
                  startRotationFromUserIndex:
                    description: |-
                      call rotation starts.
                      The index of the list of users in rolling_users, from which on-call rotation starts.
                    type: number
                  teamId:
                    description: |-
                      (String) The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the grafana_oncall_team datasource.
                      The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the `grafana_oncall_team` datasource.
                    type: string
                  timeZone:
                    description: |-
                      (String) The shift's timezone.  Overrides schedule's timezone.
                      The shift's timezone.  Overrides schedule's timezone.
                    type: string
                  type:
                    description: |-
                      (String) The shift's type. Can be rolling_users, recurrent_event, single_event
                      The shift's type. Can be rolling_users, recurrent_event, single_event
                    type: string
                  users:
                    description: |-
                      call users (for single_event and recurrent_event event type).
                      The list of on-call users (for single_event and recurrent_event event type).
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  weekStart:
                    description: |-
                      (String) Start day of the week in iCal format. Can be MO, TU, WE, TH, FR, SA, SU
                      Start day of the week in iCal format. Can be MO, TU, WE, TH, FR, SA, SU
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: outgoingwebhooks.oncall.grafana.crossplane.io
spec:
  group: oncall.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: OutgoingWebhook
    listKind: OutgoingWebhookList
    plural: outgoingwebhooks
    singular: outgoingwebhook
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: OutgoingWebhook is the Schema for the OutgoingWebhooks API. HTTP
          API https://grafana.com/docs/oncall/latest/oncall-api-reference/outgoing_webhooks/
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: OutgoingWebhookSpec defines the desired state of OutgoingWebhook
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  authorizationHeaderSecretRef:
                    description: |-
                      (String, Sensitive) The auth data of the webhook. Used in Authorization header instead of user/password auth.
                      The auth data of the webhook. Used in Authorization header instead of user/password auth.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  data:
                    description: |-
                      (String) The data of the webhook.
                      The data of the webhook.
                    type: string
                  forwardWholePayload:
                    description: |-
                      (Boolean) Toggle to send the entire webhook payload instead of using the values in the Data field.
                      Toggle to send the entire webhook payload instead of using the values in the Data field.
                    type: boolean
                  headers:
                    description: |-
                      (String) Headers to add to the outgoing webhook request.
                      Headers to add to the outgoing webhook request.
                    type: string
                  httpMethod:
                    description: |-
                      (String) The HTTP method used in the request made by the outgoing webhook. Defaults to POST.
                      The HTTP method used in the request made by the outgoing webhook. Defaults to `POST`.
                    type: string
                  integrationFilter:
                    description: |-
                      (List of String) Restricts the outgoing webhook to only trigger if the event came from a selected integration. If no integrations are selected the outgoing webhook will trigger for any integration.
                      Restricts the outgoing webhook to only trigger if the event came from a selected integration. If no integrations are selected the outgoing webhook will trigger for any integration.
                    items:
                      type: string
                    type: array
                  isWebhookEnabled:
                    description: |-
                      (Boolean) Controls whether the outgoing webhook will trigger or is ignored. Defaults to true.
                      Controls whether the outgoing webhook will trigger or is ignored. Defaults to `true`.
                    type: boolean
                  name:
                    description: |-
                      (String) The name of the outgoing webhook.
                      The name of the outgoing webhook.
                    type: string
                  passwordSecretRef:
                    description: |-
                      (String, Sensitive) The auth data of the webhook. Used for Basic authentication
                      The auth data of the webhook. Used for Basic authentication
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  teamId:
                    description: |-
                      (String) The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the grafana_oncall_team datasource.
                      The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the `grafana_oncall_team` datasource.
                    type: string
                  triggerTemplate:
                    description: |-
                      (String) A template used to dynamically determine whether the webhook should execute based on the content of the payload.
                      A template used to dynamically determine whether the webhook should execute based on the content of the payload.
                    type: string
                  triggerType:
                    description: |-
                      (String) The type of event that will cause this outgoing webhook to execute. The types of triggers are: escalation, alert group created, acknowledge, resolve, silence, unsilence, unresolve, unacknowledge. Defaults to escalation.
                      The type of event that will cause this outgoing webhook to execute. The types of triggers are: `escalation`, `alert group created`, `acknowledge`, `resolve`, `silence`, `unsilence`, `unresolve`, `unacknowledge`. Defaults to `escalation`.
                    type: string
                  url:
                    description: |-
                      (String) The webhook URL.
                      The webhook URL.
                    type: string
                  user:
                    description: |-
                      (String) Username to use when making the outgoing webhook request.
                      Username to use when making the outgoing webhook request.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  authorizationHeaderSecretRef:
                    description: |-
                      (String, Sensitive) The auth data of the webhook. Used in Authorization header instead of user/password auth.
                      The auth data of the webhook. Used in Authorization header instead of user/password auth.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  data:
                    description: |-
                      (String) The data of the webhook.
                      The data of the webhook.
                    type: string
                  forwardWholePayload:
                    description: |-
                      (Boolean) Toggle to send the entire webhook payload instead of using the values in the Data field.
                      Toggle to send the entire webhook payload instead of using the values in the Data field.
                    type: boolean
                  headers:
                    description: |-
                      (String) Headers to add to the outgoing webhook request.
                      Headers to add to the outgoing webhook request.
                    type: string
                  httpMethod:
                    description: |-
                      (String) The HTTP method used in the request made by the outgoing webhook. Defaults to POST.
                      The HTTP method used in the request made by the outgoing webhook. Defaults to `POST`.
                    type: string
                  integrationFilter:
                    description: |-
                      (List of String) Restricts the outgoing webhook to only trigger if the event came from a selected integration. If no integrations are selected the outgoing webhook will trigger for any integration.
                      Restricts the outgoing webhook to only trigger if the event came from a selected integration. If no integrations are selected the outgoing webhook will trigger for any integration.
                    items:
                      type: string
                    type: array
                  isWebhookEnabled:
                    description: |-
                      (Boolean) Controls whether the outgoing webhook will trigger or is ignored. Defaults to true.
                      Controls whether the outgoing webhook will trigger or is ignored. Defaults to `true`.
                    type: boolean
                  name:
                    description: |-
                      (String) The name of the outgoing webhook.
                      The name of the outgoing webhook.
                    type: string
                  passwordSecretRef:
                    description: |-
                      (String, Sensitive) The auth data of the webhook. Used for Basic authentication
                      The auth data of the webhook. Used for Basic authentication
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  teamId:
                    description: |-
                      (String) The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the grafana_oncall_team datasource.
                      The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the `grafana_oncall_team` datasource.
                    type: string
                  triggerTemplate:
                    description: |-
                      (String) A template used to dynamically determine whether the webhook should execute based on the content of the payload.
                      A template used to dynamically determine whether the webhook should execute based on the content of the payload.
                    type: string
                  triggerType:
                    description: |-
                      (String) The type of event that will cause this outgoing webhook to execute. The types of triggers are: escalation, alert group created, acknowledge, resolve, silence, unsilence, unresolve, unacknowledge. Defaults to escalation.
                      The type of event that will cause this outgoing webhook to execute. The types of triggers are: `escalation`, `alert group created`, `acknowledge`, `resolve`, `silence`, `unsilence`, `unresolve`, `unacknowledge`. Defaults to `escalation`.
                    type: string
                  url:
                    description: |-
                      (String) The webhook URL.
                      The webhook URL.
                    type: string
                  user:
                    description: |-
                      (String) Username to use when making the outgoing webhook request.
                      Username to use when making the outgoing webhook request.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.url is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.url)
                || (has(self.initProvider) && has(self.initProvider.url))'
          status:
            description: OutgoingWebhookStatus defines the observed state of OutgoingWebhook.
            properties:
              atProvider:
                properties:
                  data:
                    description: |-
                      (String) The data of the webhook.
                      The data of the webhook.
                    type: string
                  forwardWholePayload:
                    description: |-
                      (Boolean) Toggle to send the entire webhook payload instead of using the values in the Data field.
                      Toggle to send the entire webhook payload instead of using the values in the Data field.
                    type: boolean
                  headers:
                    description: |-
                      (String) Headers to add to the outgoing webhook request.
                      Headers to add to the outgoing webhook request.
                    type: string
                  httpMethod:
                    description: |-
                      (String) The HTTP method used in the request made by the outgoing webhook. Defaults to POST.
                      The HTTP method used in the request made by the outgoing webhook. Defaults to `POST`.
                    type: string
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  integrationFilter:
                    description: |-
                      (List of String) Restricts the outgoing webhook to only trigger if the event came from a selected integration. If no integrations are selected the outgoing webhook will trigger for any integration.
                      Restricts the outgoing webhook to only trigger if the event came from a selected integration. If no integrations are selected the outgoing webhook will trigger for any integration.
                    items:
                      type: string
                    type: array
                  isWebhookEnabled:
                    description: |-
                      (Boolean) Controls whether the outgoing webhook will trigger or is ignored. Defaults to true.
                      Controls whether the outgoing webhook will trigger or is ignored. Defaults to `true`.
                    type: boolean
                  name:
                    description: |-
                      (String) The name of the outgoing webhook.
                      The name of the outgoing webhook.
                    type: string
                  teamId:
                    description: |-
                      (String) The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the grafana_oncall_team datasource.
                      The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the `grafana_oncall_team` datasource.
                    type: string
                  triggerTemplate:
                    description: |-
                      (String) A template used to dynamically determine whether the webhook should execute based on the content of the payload.
                      A template used to dynamically determine whether the webhook should execute based on the content of the payload.
                    type: string
                  triggerType:
                    description: |-
                      (String) The type of event that will cause this outgoing webhook to execute. The types of triggers are: escalation, alert group created, acknowledge, resolve, silence, unsilence, unresolve, unacknowledge. Defaults to escalation.
                      The type of event that will cause this outgoing webhook to execute. The types of triggers are: `escalation`, `alert group created`, `acknowledge`, `resolve`, `silence`, `unsilence`, `unresolve`, `unacknowledge`. Defaults to `escalation`.
                    type: string
                  url:
                    description: |-
                      (String) The webhook URL.
                      The webhook URL.
                    type: string
                  user:
                    description: |-
                      (String) Username to use when making the outgoing webhook request.
                      Username to use when making the outgoing webhook request.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: routes.oncall.grafana.crossplane.io
spec:
  group: oncall.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: Route
    listKind: RouteList
    plural: routes
    singular: route
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Route is the Schema for the Routes API. HTTP API https://grafana.com/docs/oncall/latest/oncall-api-reference/routes/
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RouteSpec defines the desired state of Route
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  escalationChainId:
                    description: |-
                      (String) The ID of the escalation chain.
                      The ID of the escalation chain.
                    type: string
                  escalationChainRef:
                    description: Reference to a EscalationChain in oncall to populate
                      escalationChainId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  escalationChainSelector:
                    description: Selector for a EscalationChain in oncall to populate
                      escalationChainId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  integrationId:
                    description: |-
                      (String) The ID of the integration.
                      The ID of the integration.
                    type: string
                  integrationRef:
                    description: Reference to a Integration in oncall to populate
                      integrationId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  integrationSelector:
                    description: Selector for a Integration in oncall to populate
                      integrationId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  msteams:
                    description: |-
                      specific settings for a route. (see below for nested schema)
                      MS teams-specific settings for a route.
                    items:
                      properties:
                        enabled:
                          description: |-
                            (Boolean) Enable notification in MS teams. Defaults to true.
                            Enable notification in MS teams. Defaults to `true`.
                          type: boolean
                        id:
                          description: |-
                            (String) The ID of this resource.
                            MS teams channel id. Alerts will be directed to this channel in Microsoft teams.
                          type: string
                      type: object
                    type: array
                  position:
                    description: |-
                      (Number) The position of the route (starts from 0).
                      The position of the route (starts from 0).
                    type: number
                  routingRegex:
                    description: |-
                      (String) Python Regex query. Route is chosen for an alert if there is a match inside the alert payload.
                      Python Regex query. Route is chosen for an alert if there is a match inside the alert payload.
                    type: string
                  routingType:
                    description: |-
                      (String) The type of route. Can be jinja2, regex Defaults to regex.
                      The type of route. Can be jinja2, regex Defaults to `regex`.
                    type: string
                  slack:
                    description: |-
                      specific settings for a route. (see below for nested schema)
                      Slack-specific settings for a route.
                    items:
                      properties:
                        channelId:
                          description: |-
                            (String) Slack channel id. Alerts will be directed to this channel in Slack.
                            Slack channel id. Alerts will be directed to this channel in Slack.
                          type: string
                        enabled:
                          description: |-
                            (Boolean) Enable notification in MS teams. Defaults to true.
                            Enable notification in Slack. Defaults to `true`.
                          type: boolean
                      type: object
                    type: array
                  telegram:
                    description: |-
                      specific settings for a route. (see below for nested schema)
                      Telegram-specific settings for a route.
                    items:
                      properties:
                        enabled:
                          description: |-
                            (Boolean) Enable notification in MS teams. Defaults to true.
                            Enable notification in Telegram. Defaults to `true`.
                          type: boolean
                        id:
                          description: |-
                            (String) The ID of this resource.
                            Telegram channel id. Alerts will be directed to this channel in Telegram.
                          type: string
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  escalationChainId:
                    description: |-
                      (String) The ID of the escalation chain.
                      The ID of the escalation chain.
                    type: string
                  escalationChainRef:
                    description: Reference to a EscalationChain in oncall to populate
                      escalationChainId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  escalationChainSelector:
                    description: Selector for a EscalationChain in oncall to populate
                      escalationChainId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  integrationId:
                    description: |-
                      (String) The ID of the integration.
                      The ID of the integration.
                    type: string
                  integrationRef:
                    description: Reference to a Integration in oncall to populate
                      integrationId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  integrationSelector:
                    description: Selector for a Integration in oncall to populate
                      integrationId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  msteams:
                    description: |-
                      specific settings for a route. (see below for nested schema)
                      MS teams-specific settings for a route.
                    items:
                      properties:
                        enabled:
                          description: |-
                            (Boolean) Enable notification in MS teams. Defaults to true.
                            Enable notification in MS teams. Defaults to `true`.
                          type: boolean
                        id:
                          description: |-
                            (String) The ID of this resource.
                            MS teams channel id. Alerts will be directed to this channel in Microsoft teams.
                          type: string
                      type: object
                    type: array
                  position:
                    description: |-
                      (Number) The position of the route (starts from 0).
                      The position of the route (starts from 0).
                    type: number
                  routingRegex:
                    description: |-
                      (String) Python Regex query. Route is chosen for an alert if there is a match inside the alert payload.
                      Python Regex query. Route is chosen for an alert if there is a match inside the alert payload.
                    type: string
                  routingType:
                    description: |-
                      (String) The type of route. Can be jinja2, regex Defaults to regex.
                      The type of route. Can be jinja2, regex Defaults to `regex`.
                    type: string
                  slack:
                    description: |-
                      specific settings for a route. (see below for nested schema)
                      Slack-specific settings for a route.
                    items:
                      properties:
                        channelId:
                          description: |-
                            (String) Slack channel id. Alerts will be directed to this channel in Slack.
                            Slack channel id. Alerts will be directed to this channel in Slack.
                          type: string
                        enabled:
                          description: |-
                            (Boolean) Enable notification in MS teams. Defaults to true.
                            Enable notification in Slack. Defaults to `true`.
                          type: boolean
                      type: object
                    type: array
                  telegram:
                    description: |-
                      specific settings for a route. (see below for nested schema)
                      Telegram-specific settings for a route.
                    items:
                      properties:
                        enabled:
                          description: |-
                            (Boolean) Enable notification in MS teams. Defaults to true.
                            Enable notification in Telegram. Defaults to `true`.
                          type: boolean
                        id:
                          description: |-
                            (String) The ID of this resource.
                            Telegram channel id. Alerts will be directed to this channel in Telegram.
                          type: string
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.position is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.position)
                || (has(self.initProvider) && has(self.initProvider.position))'
            - message: spec.forProvider.routingRegex is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.routingRegex)
                || (has(self.initProvider) && has(self.initProvider.routingRegex))'
          status:
            description: RouteStatus defines the observed state of Route.
            properties:
              atProvider:
                properties:
                  escalationChainId:
                    description: |-
                      (String) The ID of the escalation chain.
                      The ID of the escalation chain.
                    type: string
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  integrationId:
                    description: |-
                      (String) The ID of the integration.
                      The ID of the integration.
                    type: string
                  msteams:
                    description: |-
                      specific settings for a route. (see below for nested schema)
                      MS teams-specific settings for a route.
                    items:
                      properties:
                        enabled:
                          description: |-
                            (Boolean) Enable notification in MS teams. Defaults to true.
                            Enable notification in MS teams. Defaults to `true`.
                          type: boolean
                        id:
                          description: |-
                            (String) The ID of this resource.
                            MS teams channel id. Alerts will be directed to this channel in Microsoft teams.
                          type: string
                      type: object
                    type: array
                  position:
                    description: |-
                      (Number) The position of the route (starts from 0).
                      The position of the route (starts from 0).
                    type: number
                  routingRegex:
                    description: |-
                      (String) Python Regex query. Route is chosen for an alert if there is a match inside the alert payload.
                      Python Regex query. Route is chosen for an alert if there is a match inside the alert payload.
                    type: string
                  routingType:
                    description: |-
                      (String) The type of route. Can be jinja2, regex Defaults to regex.
                      The type of route. Can be jinja2, regex Defaults to `regex`.
                    type: string
                  slack:
                    description: |-
                      specific settings for a route. (see below for nested schema)
                      Slack-specific settings for a route.
                    items:
                      properties:
                        channelId:
                          description: |-
                            (String) Slack channel id. Alerts will be directed to this channel in Slack.
                            Slack channel id. Alerts will be directed to this channel in Slack.
                          type: string
                        enabled:
                          description: |-
                            (Boolean) Enable notification in MS teams. Defaults to true.
                            Enable notification in Slack. Defaults to `true`.
                          type: boolean
                      type: object
                    type: array
                  telegram:
                    description: |-
                      specific settings for a route. (see below for nested schema)
                      Telegram-specific settings for a route.
                    items:
                      properties:
                        enabled:
                          description: |-
                            (Boolean) Enable notification in MS teams. Defaults to true.
                            Enable notification in Telegram. Defaults to `true`.
                          type: boolean
                        id:
                          description: |-
                            (String) The ID of this resource.
                            Telegram channel id. Alerts will be directed to this channel in Telegram.
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: schedules.oncall.grafana.crossplane.io
spec:
  group: oncall.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: Schedule
    listKind: ScheduleList
    plural: schedules
    singular: schedule
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Schedule is the Schema for the Schedules API. HTTP API https://grafana.com/docs/oncall/latest/oncall-api-reference/schedules/
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ScheduleSpec defines the desired state of Schedule
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  enableWebOverrides:
                    description: |-
                      (Boolean) Enable overrides via web UI (it will ignore ical_url_overrides).
                      Enable overrides via web UI (it will ignore ical_url_overrides).
                    type: boolean
                  icalUrlOverrides:
                    description: |-
                      (String) The URL of external iCal calendar which override primary events.
                      The URL of external iCal calendar which override primary events.
                    type: string
                  icalUrlPrimary:
                    description: |-
                      (String) The URL of the external calendar iCal file.
                      The URL of the external calendar iCal file.
                    type: string
                  name:
                    description: |-
                      (String) The schedule's name.
                      The schedule's name.
                    type: string
                  shifts:
                    description: |-
                      call shifts.
                      The list of ID's of on-call shifts.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  shiftsRef:
                    description: References to OnCallShift in oncall to populate shifts.
                    items:
                      description: A Reference to a named object.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: |-
                                Resolution specifies whether resolution of this reference is required.
                                The default is 'Required', which means the reconcile will fail if the
                                reference cannot be resolved. 'Optional' means this reference will be
                                a no-op if it cannot be resolved.
                              enum:
                              - Required
                              - Optional
                              type: string
                            resolve:
                              description: |-
                                Resolve specifies when this reference should be resolved. The default
                                is 'IfNotPresent', which will attempt to resolve the reference only when
                                the corresponding field is not present. Use 'Always' to resolve the
                                reference on every reconcile.
                              enum:
                              - Always
                              - IfNotPresent
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  shiftsSelector:
                    description: Selector for a list of OnCallShift in oncall to populate
                      shifts.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  slack:
                    description: |-
                      specific settings for a schedule. (see below for nested schema)
                      The Slack-specific settings for a schedule.
                    items:
                      properties:
                        channelId:
                          description: |-
                            (String) Slack channel id. Reminder about schedule shifts will be directed to this channel in Slack.
                            Slack channel id. Reminder about schedule shifts will be directed to this channel in Slack.
                          type: string
                        userGroupId:
                          description: |-
                            call users change.
                            Slack user group id. Members of user group will be updated when on-call users change.
                          type: string
                      type: object
                    type: array
                  teamId:
                    description: |-
                      (String) The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the grafana_oncall_team datasource.
                      The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the `grafana_oncall_team` datasource.
                    type: string
                  timeZone:
                    description: |-
                      (String) The schedule's time zone.
                      The schedule's time zone.
                    type: string
                  type:
                    description: |-
                      (String) The schedule's type. Valid values are ical, calendar.
                      The schedule's type. Valid values are `ical`, `calendar`.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  enableWebOverrides:
                    description: |-
                      (Boolean) Enable overrides via web UI (it will ignore ical_url_overrides).
                      Enable overrides via web UI (it will ignore ical_url_overrides).
                    type: boolean
                  icalUrlOverrides:
                    description: |-
                      (String) The URL of external iCal calendar which override primary events.
                      The URL of external iCal calendar which override primary events.
                    type: string
                  icalUrlPrimary:
                    description: |-
                      (String) The URL of the external calendar iCal file.
                      The URL of the external calendar iCal file.
                    type: string
                  name:
                    description: |-
                      (String) The schedule's name.
                      The schedule's name.
                    type: string
                  shifts:
                    description: |-
                      call shifts.
                      The list of ID's of on-call shifts.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  shiftsRef:
                    description: References to OnCallShift in oncall to populate shifts.
                    items:
                      description: A Reference to a named object.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: |-
                                Resolution specifies whether resolution of this reference is required.
                                The default is 'Required', which means the reconcile will fail if the
                                reference cannot be resolved. 'Optional' means this reference will be
                                a no-op if it cannot be resolved.
                              enum:
                              - Required
                              - Optional
                              type: string
                            resolve:
                              description: |-
                                Resolve specifies when this reference should be resolved. The default
                                is 'IfNotPresent', which will attempt to resolve the reference only when
                                the corresponding field is not present. Use 'Always' to resolve the
                                reference on every reconcile.
                              enum:
                              - Always
                              - IfNotPresent
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  shiftsSelector:
                    description: Selector for a list of OnCallShift in oncall to populate
                      shifts.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  slack:
                    description: |-
                      specific settings for a schedule. (see below for nested schema)
                      The Slack-specific settings for a schedule.
                    items:
                      properties:
                        channelId:
                          description: |-
                            (String) Slack channel id. Reminder about schedule shifts will be directed to this channel in Slack.
                            Slack channel id. Reminder about schedule shifts will be directed to this channel in Slack.
                          type: string
                        userGroupId:
                          description: |-
                            call users change.
                            Slack user group id. Members of user group will be updated when on-call users change.
                          type: string
                      type: object
                    type: array
                  teamId:
                    description: |-
                      (String) The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the grafana_oncall_team datasource.
                      The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the `grafana_oncall_team` datasource.
                    type: string
                  timeZone:
                    description: |-
                      (String) The schedule's time zone.
                      The schedule's time zone.
                    type: string
                  type:
                    description: |-
                      (String) The schedule's type. Valid values are ical, calendar.
                      The schedule's type. Valid values are `ical`, `calendar`.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.type is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.type)
                || (has(self.initProvider) && has(self.initProvider.type))'
          status:
            description: ScheduleStatus defines the observed state of Schedule.
            properties:
              atProvider:
                properties:
                  enableWebOverrides:
                    description: |-
                      (Boolean) Enable overrides via web UI (it will ignore ical_url_overrides).
                      Enable overrides via web UI (it will ignore ical_url_overrides).
                    type: boolean
                  icalUrlOverrides:
                    description: |-
                      (String) The URL of external iCal calendar which override primary events.
                      The URL of external iCal calendar which override primary events.
                    type: string
                  icalUrlPrimary:
                    description: |-
                      (String) The URL of the external calendar iCal file.
                      The URL of the external calendar iCal file.
                    type: string
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  name:
                    description: |-
                      (String) The schedule's name.
                      The schedule's name.
                    type: string
                  shifts:
                    description: |-
                      call shifts.
                      The list of ID's of on-call shifts.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  slack:
                    description: |-
                      specific settings for a schedule. (see below for nested schema)
                      The Slack-specific settings for a schedule.
                    items:
                      properties:
                        channelId:
                          description: |-
                            (String) Slack channel id. Reminder about schedule shifts will be directed to this channel in Slack.
                            Slack channel id. Reminder about schedule shifts will be directed to this channel in Slack.
                          type: string
                        userGroupId:
                          description: |-
                            call users change.
                            Slack user group id. Members of user group will be updated when on-call users change.
                          type: string
                      type: object
                    type: array
                  teamId:
                    description: |-
                      (String) The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the grafana_oncall_team datasource.
                      The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the `grafana_oncall_team` datasource.
                    type: string
                  timeZone:
                    description: |-
                      (String) The schedule's time zone.
                      The schedule's time zone.
                    type: string
                  type:
                    description: |-
                      (String) The schedule's type. Valid values are ical, calendar.
                      The schedule's type. Valid values are `ical`, `calendar`.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: usernotificationrules.oncall.grafana.crossplane.io
spec:
  group: oncall.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: UserNotificationRule
    listKind: UserNotificationRuleList
    plural: usernotificationrules
    singular: usernotificationrule
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'UserNotificationRule is the Schema for the UserNotificationRules
          API. HTTP API https://grafana.com/docs/oncall/latest/oncall-api-reference/personal_notification_rules/
          Note: you must be running Grafana OnCall >= v1.8.0 to use this resource.'
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: UserNotificationRuleSpec defines the desired state of UserNotificationRule
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  duration:
                    description: |-
                      (Number) A time in seconds to wait (when type=wait). Can be 60, 300, 900, 1800, 3600
                      A time in seconds to wait (when `type=wait`). Can be 60, 300, 900, 1800, 3600
                    type: number
                  important:
                    description: |-
                      (Boolean) Boolean value which indicates if a rule is “important”
                      Boolean value which indicates if a rule is “important”
                    type: boolean
                  position:
                    description: |-
                      (Number) Personal notification rules execute one after another starting from position=0. A new escalation policy created with a position of an existing escalation policy will move the old one (and all following) down on the list.
                      Personal notification rules execute one after another starting from position=0. A new escalation policy created with a position of an existing escalation policy will move the old one (and all following) down on the list.
                    type: number
                  type:
                    description: |-
                      (String) The type of notification rule. Can be wait, notify_by_slack, notify_by_msteams, notify_by_sms, notify_by_phone_call, notify_by_telegram, notify_by_email, notify_by_mobile_app, notify_by_mobile_app_critical. NOTE: notify_by_msteams is only available for Grafana Cloud customers.
                      The type of notification rule. Can be wait, notify_by_slack, notify_by_msteams, notify_by_sms, notify_by_phone_call, notify_by_telegram, notify_by_email, notify_by_mobile_app, notify_by_mobile_app_critical. NOTE: `notify_by_msteams` is only available for Grafana Cloud customers.
                    type: string
                  userId:
                    description: |-
                      (String) User ID
                      User ID
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  duration:
                    description: |-
                      (Number) A time in seconds to wait (when type=wait). Can be 60, 300, 900, 1800, 3600
                      A time in seconds to wait (when `type=wait`). Can be 60, 300, 900, 1800, 3600
                    type: number
                  important:
                    description: |-
                      (Boolean) Boolean value which indicates if a rule is “important”
                      Boolean value which indicates if a rule is “important”
                    type: boolean
                  position:
                    description: |-
                      (Number) Personal notification rules execute one after another starting from position=0. A new escalation policy created with a position of an existing escalation policy will move the old one (and all following) down on the list.
                      Personal notification rules execute one after another starting from position=0. A new escalation policy created with a position of an existing escalation policy will move the old one (and all following) down on the list.
                    type: number
                  type:
                    description: |-
                      (String) The type of notification rule. Can be wait, notify_by_slack, notify_by_msteams, notify_by_sms, notify_by_phone_call, notify_by_telegram, notify_by_email, notify_by_mobile_app, notify_by_mobile_app_critical. NOTE: notify_by_msteams is only available for Grafana Cloud customers.
                      The type of notification rule. Can be wait, notify_by_slack, notify_by_msteams, notify_by_sms, notify_by_phone_call, notify_by_telegram, notify_by_email, notify_by_mobile_app, notify_by_mobile_app_critical. NOTE: `notify_by_msteams` is only available for Grafana Cloud customers.
                    type: string
                  userId:
                    description: |-
                      (String) User ID
                      User ID
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.type is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.type)
                || (has(self.initProvider) && has(self.initProvider.type))'
            - message: spec.forProvider.userId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.userId)
                || (has(self.initProvider) && has(self.initProvider.userId))'
          status:
            description: UserNotificationRuleStatus defines the observed state of
              UserNotificationRule.
            properties:
              atProvider:
                properties:
                  duration:
                    description: |-
                      (Number) A time in seconds to wait (when type=wait). Can be 60, 300, 900, 1800, 3600
                      A time in seconds to wait (when `type=wait`). Can be 60, 300, 900, 1800, 3600
                    type: number
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  important:
                    description: |-
                      (Boolean) Boolean value which indicates if a rule is “important”
                      Boolean value which indicates if a rule is “important”
                    type: boolean
                  position:
                    description: |-
                      (Number) Personal notification rules execute one after another starting from position=0. A new escalation policy created with a position of an existing escalation policy will move the old one (and all following) down on the list.
                      Personal notification rules execute one after another starting from position=0. A new escalation policy created with a position of an existing escalation policy will move the old one (and all following) down on the list.
                    type: number
                  type:
                    description: |-
                      (String) The type of notification rule. Can be wait, notify_by_slack, notify_by_msteams, notify_by_sms, notify_by_phone_call, notify_by_telegram, notify_by_email, notify_by_mobile_app, notify_by_mobile_app_critical. NOTE: notify_by_msteams is only available for Grafana Cloud customers.
                      The type of notification rule. Can be wait, notify_by_slack, notify_by_msteams, notify_by_sms, notify_by_phone_call, notify_by_telegram, notify_by_email, notify_by_mobile_app, notify_by_mobile_app_critical. NOTE: `notify_by_msteams` is only available for Grafana Cloud customers.
                    type: string
                  userId:
                    description: |-
                      (String) User ID
                      User ID
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: annotations.oss.grafana.crossplane.io
spec:
  group: oss.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: Annotation
    listKind: AnnotationList
    plural: annotations
    singular: annotation
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Annotation is the Schema for the Annotations API. Official documentation
          https://grafana.com/docs/grafana/latest/dashboards/build-dashboards/annotate-visualizations/HTTP
          API https://grafana.com/docs/grafana/latest/developers/http_api/annotations/
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AnnotationSpec defines the desired state of Annotation
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  dashboardRef:
                    description: Reference to a Dashboard in oss to populate dashboardUid.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  dashboardSelector:
                    description: Selector for a Dashboard in oss to populate dashboardUid.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  dashboardUid:
                    description: |-
                      (String) The UID of the dashboard on which to create the annotation.
                      The UID of the dashboard on which to create the annotation.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  panelId:
                    description: |-
                      (Number) The ID of the dashboard panel on which to create the annotation.
                      The ID of the dashboard panel on which to create the annotation.
                    type: number
                  tags:
                    description: |-
                      (Set of String) The tags to associate with the annotation.
                      The tags to associate with the annotation.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  text:
                    description: |-
                      (String) The text to associate with the annotation.
                      The text to associate with the annotation.
                    type: string
                  time:
                    description: |-
                      formatted time string indicating the annotation's time.
                      The RFC 3339-formatted time string indicating the annotation's time.
                    type: string
                  timeEnd:
                    description: |-
                      formatted time string indicating the annotation's end time.
                      The RFC 3339-formatted time string indicating the annotation's end time.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  dashboardRef:
                    description: Reference to a Dashboard in oss to populate dashboardUid.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  dashboardSelector:
                    description: Selector for a Dashboard in oss to populate dashboardUid.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  dashboardUid:
                    description: |-
                      (String) The UID of the dashboard on which to create the annotation.
                      The UID of the dashboard on which to create the annotation.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  panelId:
                    description: |-
                      (Number) The ID of the dashboard panel on which to create the annotation.
                      The ID of the dashboard panel on which to create the annotation.
                    type: number
                  tags:
                    description: |-
                      (Set of String) The tags to associate with the annotation.
                      The tags to associate with the annotation.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  text:
                    description: |-
                      (String) The text to associate with the annotation.
                      The text to associate with the annotation.
                    type: string
                  time:
                    description: |-
                      formatted time string indicating the annotation's time.
                      The RFC 3339-formatted time string indicating the annotation's time.
                    type: string
                  timeEnd:
                    description: |-
                      formatted time string indicating the annotation's end time.
                      The RFC 3339-formatted time string indicating the annotation's end time.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.text is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.text)
                || (has(self.initProvider) && has(self.initProvider.text))'
          status:
            description: AnnotationStatus defines the observed state of Annotation.
            properties:
              atProvider:
                properties:
                  dashboardUid:
                    description: |-
                      (String) The UID of the dashboard on which to create the annotation.
                      The UID of the dashboard on which to create the annotation.
                    type: string
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  panelId:
                    description: |-
                      (Number) The ID of the dashboard panel on which to create the annotation.
                      The ID of the dashboard panel on which to create the annotation.
                    type: number
                  tags:
                    description: |-
                      (Set of String) The tags to associate with the annotation.
                      The tags to associate with the annotation.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  text:
                    description: |-
                      (String) The text to associate with the annotation.
                      The text to associate with the annotation.
                    type: string
                  time:
                    description: |-
                      formatted time string indicating the annotation's time.
                      The RFC 3339-formatted time string indicating the annotation's time.
                    type: string
                  timeEnd:
                    description: |-
                      formatted time string indicating the annotation's end time.
                      The RFC 3339-formatted time string indicating the annotation's end time.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: dashboardpermissions.oss.grafana.crossplane.io
spec:
  group: oss.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: DashboardPermission
    listKind: DashboardPermissionList
    plural: dashboardpermissions
    singular: dashboardpermission
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DashboardPermission is the Schema for the DashboardPermissions
          API. Manages the entire set of permissions for a dashboard. Permissions
          that aren't specified when applying this resource will be removed. Official
          documentation https://grafana.com/docs/grafana/latest/administration/roles-and-permissions/access-control/HTTP
          API https://grafana.com/docs/grafana/latest/developers/http_api/dashboard_permissions/
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DashboardPermissionSpec defines the desired state of DashboardPermission
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  dashboardRef:
                    description: Reference to a Dashboard in oss to populate dashboardUid.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  dashboardSelector:
                    description: Selector for a Dashboard in oss to populate dashboardUid.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  dashboardUid:
                    description: |-
                      (String) UID of the dashboard to apply permissions to.
                      UID of the dashboard to apply permissions to.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  permissions:
                    description: |-
                      (Block Set) The permission items to add/update. Items that are omitted from the list will be removed. (see below for nested schema)
                      The permission items to add/update. Items that are omitted from the list will be removed.
                    items:
                      properties:
                        permission:
                          description: |-
                            (String) Permission to associate with item. Must be one of View, Edit, or Admin.
                            Permission to associate with item. Must be one of `View`, `Edit`, or `Admin`.
                          type: string
                        role:
                          description: |-
                            (String) Name of the basic role to manage permissions for. Options: Viewer, Editor or Admin.
                            Name of the basic role to manage permissions for. Options: `Viewer`, `Editor` or `Admin`.
                          type: string
                        teamId:
                          description: |-
                            (String) ID of the team to manage permissions for. Defaults to 0.
                            ID of the team to manage permissions for. Defaults to `0`.
                          type: string
                        teamRef:
                          description: Reference to a Team in oss to populate teamId.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        teamSelector:
                          description: Selector for a Team in oss to populate teamId.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        userId:
                          description: |-
                            (String) ID of the user or service account to manage permissions for. Defaults to 0.
                            ID of the user or service account to manage permissions for. Defaults to `0`.
                          type: string
                        userRef:
                          description: Reference to a User in oss to populate userId.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        userSelector:
                          description: Selector for a User in oss to populate userId.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  dashboardRef:
                    description: Reference to a Dashboard in oss to populate dashboardUid.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  dashboardSelector:
                    description: Selector for a Dashboard in oss to populate dashboardUid.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  dashboardUid:
                    description: |-
                      (String) UID of the dashboard to apply permissions to.
                      UID of the dashboard to apply permissions to.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  permissions:
                    description: |-
                      (Block Set) The permission items to add/update. Items that are omitted from the list will be removed. (see below for nested schema)
                      The permission items to add/update. Items that are omitted from the list will be removed.
                    items:
                      properties:
                        permission:
                          description: |-
                            (String) Permission to associate with item. Must be one of View, Edit, or Admin.
                            Permission to associate with item. Must be one of `View`, `Edit`, or `Admin`.
                          type: string
                        role:
                          description: |-
                            (String) Name of the basic role to manage permissions for. Options: Viewer, Editor or Admin.
                            Name of the basic role to manage permissions for. Options: `Viewer`, `Editor` or `Admin`.
                          type: string
                        teamId:
                          description: |-
                            (String) ID of the team to manage permissions for. Defaults to 0.
                            ID of the team to manage permissions for. Defaults to `0`.
                          type: string
                        teamRef:
                          description: Reference to a Team in oss to populate teamId.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        teamSelector:
                          description: Selector for a Team in oss to populate teamId.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        userId:
                          description: |-
                            (String) ID of the user or service account to manage permissions for. Defaults to 0.
                            ID of the user or service account to manage permissions for. Defaults to `0`.
                          type: string
                        userRef:
                          description: Reference to a User in oss to populate userId.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        userSelector:
                          description: Selector for a User in oss to populate userId.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: DashboardPermissionStatus defines the observed state of DashboardPermission.
            properties:
              atProvider:
                properties:
                  dashboardUid:
                    description: |-
                      (String) UID of the dashboard to apply permissions to.
                      UID of the dashboard to apply permissions to.
                    type: string
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  permissions:
                    description: |-
                      (Block Set) The permission items to add/update. Items that are omitted from the list will be removed. (see below for nested schema)
                      The permission items to add/update. Items that are omitted from the list will be removed.
                    items:
                      properties:
                        permission:
                          description: |-
                            (String) Permission to associate with item. Must be one of View, Edit, or Admin.
                            Permission to associate with item. Must be one of `View`, `Edit`, or `Admin`.
                          type: string
                        role:
                          description: |-
                            (String) Name of the basic role to manage permissions for. Options: Viewer, Editor or Admin.
                            Name of the basic role to manage permissions for. Options: `Viewer`, `Editor` or `Admin`.
                          type: string
                        teamId:
                          description: |-
                            (String) ID of the team to manage permissions for. Defaults to 0.
                            ID of the team to manage permissions for. Defaults to `0`.
                          type: string
                        userId:
                          description: |-
                            (String) ID of the user or service account to manage permissions for. Defaults to 0.
                            ID of the user or service account to manage permissions for. Defaults to `0`.
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: dashboardpublics.oss.grafana.crossplane.io
spec:
  group: oss.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: DashboardPublic
    listKind: DashboardPublicList
    plural: dashboardpublics
    singular: dashboardpublic
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'DashboardPublic is the Schema for the DashboardPublics API.
          Manages Grafana public dashboards. Note: This resource is available only
          with Grafana 10.2+. Official documentation https://grafana.com/docs/grafana/latest/dashboards/dashboard-public/HTTP
          API https://grafana.com/docs/grafana/next/developers/http_api/dashboard_public/'
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DashboardPublicSpec defines the desired state of DashboardPublic
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accessToken:
                    description: |-
                      (String) A public unique identifier of a public dashboard. This is used to construct its URL. It's automatically generated if not provided when creating a public dashboard.
                      A public unique identifier of a public dashboard. This is used to construct its URL. It's automatically generated if not provided when creating a public dashboard.
                    type: string
                  annotationsEnabled:
                    description: |-
                      (Boolean) Set to true to show annotations. The default value is false.
                      Set to `true` to show annotations. The default value is `false`.
                    type: boolean
                  dashboardRef:
                    description: Reference to a Dashboard in oss to populate dashboardUid.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  dashboardSelector:
                    description: Selector for a Dashboard in oss to populate dashboardUid.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  dashboardUid:
                    description: |-
                      (String) The unique identifier of the original dashboard.
                      The unique identifier of the original dashboard.
                    type: string
                  isEnabled:
                    description: |-
                      (Boolean) Set to true to enable the public dashboard. The default value is false.
                      Set to `true` to enable the public dashboard. The default value is `false`.
                    type: boolean
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  share:
                    description: |-
                      (String) Set the share mode. The default value is public.
                      Set the share mode. The default value is `public`.
                    type: string
                  timeSelectionEnabled:
                    description: |-
                      (Boolean) Set to true to enable the time picker in the public dashboard. The default value is false.
                      Set to `true` to enable the time picker in the public dashboard. The default value is `false`.
                    type: boolean
                  uid:
                    description: |-
                      (String) The unique identifier of a public dashboard. It's automatically generated if not provided when creating a public dashboard.
                      The unique identifier of a public dashboard. It's automatically generated if not provided when creating a public dashboard.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  accessToken:
                    description: |-
                      (String) A public unique identifier of a public dashboard. This is used to construct its URL. It's automatically generated if not provided when creating a public dashboard.
                      A public unique identifier of a public dashboard. This is used to construct its URL. It's automatically generated if not provided when creating a public dashboard.
                    type: string
                  annotationsEnabled:
                    description: |-
                      (Boolean) Set to true to show annotations. The default value is false.
                      Set to `true` to show annotations. The default value is `false`.
                    type: boolean
                  dashboardRef:
                    description: Reference to a Dashboard in oss to populate dashboardUid.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  dashboardSelector:
                    description: Selector for a Dashboard in oss to populate dashboardUid.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  dashboardUid:
                    description: |-
                      (String) The unique identifier of the original dashboard.
                      The unique identifier of the original dashboard.
                    type: string
                  isEnabled:
                    description: |-
                      (Boolean) Set to true to enable the public dashboard. The default value is false.
                      Set to `true` to enable the public dashboard. The default value is `false`.
                    type: boolean
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  share:
                    description: |-
                      (String) Set the share mode. The default value is public.
                      Set the share mode. The default value is `public`.
                    type: string
                  timeSelectionEnabled:
                    description: |-
                      (Boolean) Set to true to enable the time picker in the public dashboard. The default value is false.
                      Set to `true` to enable the time picker in the public dashboard. The default value is `false`.
                    type: boolean
                  uid:
                    description: |-
                      (String) The unique identifier of a public dashboard. It's automatically generated if not provided when creating a public dashboard.
                      The unique identifier of a public dashboard. It's automatically generated if not provided when creating a public dashboard.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: DashboardPublicStatus defines the observed state of DashboardPublic.
            properties:
              atProvider:
                properties:
                  accessToken:
                    description: |-
                      (String) A public unique identifier of a public dashboard. This is used to construct its URL. It's automatically generated if not provided when creating a public dashboard.
                      A public unique identifier of a public dashboard. This is used to construct its URL. It's automatically generated if not provided when creating a public dashboard.
                    type: string
                  annotationsEnabled:
                    description: |-
                      (Boolean) Set to true to show annotations. The default value is false.
                      Set to `true` to show annotations. The default value is `false`.
                    type: boolean
                  dashboardUid:
                    description: |-
                      (String) The unique identifier of the original dashboard.
                      The unique identifier of the original dashboard.
                    type: string
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  isEnabled:
                    description: |-
                      (Boolean) Set to true to enable the public dashboard. The default value is false.
                      Set to `true` to enable the public dashboard. The default value is `false`.
                    type: boolean
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  share:
                    description: |-
                      (String) Set the share mode. The default value is public.
                      Set the share mode. The default value is `public`.
                    type: string
                  timeSelectionEnabled:
                    description: |-
                      (Boolean) Set to true to enable the time picker in the public dashboard. The default value is false.
                      Set to `true` to enable the time picker in the public dashboard. The default value is `false`.
                    type: boolean
                  uid:
                    description: |-
                      (String) The unique identifier of a public dashboard. It's automatically generated if not provided when creating a public dashboard.
                      The unique identifier of a public dashboard. It's automatically generated if not provided when creating a public dashboard.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: dashboards.oss.grafana.crossplane.io
spec:
  group: oss.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: Dashboard
    listKind: DashboardList
    plural: dashboards
    singular: dashboard
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Dashboard is the Schema for the Dashboards API. Manages Grafana
          dashboards. Official documentation https://grafana.com/docs/grafana/latest/dashboards/HTTP
          API https://grafana.com/docs/grafana/latest/developers/http_api/dashboard/
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DashboardSpec defines the desired state of Dashboard
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  configJson:
                    description: |-
                      (String) The complete dashboard model JSON.
                      The complete dashboard model JSON.
                    type: string
                  folder:
                    description: |-
                      (String) The id or UID of the folder to save the dashboard in.
                      The id or UID of the folder to save the dashboard in.
                    type: string
                  folderRef:
                    description: Reference to a Folder in oss to populate folder.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  folderSelector:
                    description: Selector for a Folder in oss to populate folder.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  message:
                    description: |-
                      (String) Set a commit message for the version history.
                      Set a commit message for the version history.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  overwrite:
                    description: |-
                      (Boolean) Set to true if you want to overwrite existing dashboard with newer version, same dashboard title in folder or same dashboard uid.
                      Set to true if you want to overwrite existing dashboard with newer version, same dashboard title in folder or same dashboard uid.
                    type: boolean
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  configJson:
                    description: |-
                      (String) The complete dashboard model JSON.
                      The complete dashboard model JSON.
                    type: string
                  folder:
                    description: |-
                      (String) The id or UID of the folder to save the dashboard in.
                      The id or UID of the folder to save the dashboard in.
                    type: string
                  folderRef:
                    description: Reference to a Folder in oss to populate folder.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  folderSelector:
                    description: Selector for a Folder in oss to populate folder.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  message:
                    description: |-
                      (String) Set a commit message for the version history.
                      Set a commit message for the version history.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  overwrite:
                    description: |-
                      (Boolean) Set to true if you want to overwrite existing dashboard with newer version, same dashboard title in folder or same dashboard uid.
                      Set to true if you want to overwrite existing dashboard with newer version, same dashboard title in folder or same dashboard uid.
                    type: boolean
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.configJson is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.configJson)
                || (has(self.initProvider) && has(self.initProvider.configJson))'
          status:
            description: DashboardStatus defines the observed state of Dashboard.
            properties:
              atProvider:
                properties:
                  configJson:
                    description: |-
                      (String) The complete dashboard model JSON.
                      The complete dashboard model JSON.
                    type: string
                  dashboardId:
                    description: |-
                      (Number) The numeric ID of the dashboard computed by Grafana.
                      The numeric ID of the dashboard computed by Grafana.
                    type: number
                  folder:
                    description: |-
                      (String) The id or UID of the folder to save the dashboard in.
                      The id or UID of the folder to save the dashboard in.
                    type: string
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  message:
                    description: |-
                      (String) Set a commit message for the version history.
                      Set a commit message for the version history.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  overwrite:
                    description: |-
                      (Boolean) Set to true if you want to overwrite existing dashboard with newer version, same dashboard title in folder or same dashboard uid.
                      Set to true if you want to overwrite existing dashboard with newer version, same dashboard title in folder or same dashboard uid.
                    type: boolean
                  uid:
                    description: |-
                      (String) The unique identifier of a dashboard. This is used to construct its URL. It's automatically generated if not provided when creating a dashboard. The uid allows having consistent URLs for accessing dashboards and when syncing dashboards between multiple Grafana installs.
                      The unique identifier of a dashboard. This is used to construct its URL. It's automatically generated if not provided when creating a dashboard. The uid allows having consistent URLs for accessing dashboards and when syncing dashboards between multiple Grafana installs.
                    type: string
                  url:
                    description: |-
                      (String) The full URL of the dashboard.
                      The full URL of the dashboard.
                    type: string
                  version:
                    description: |-
                      (Number) Whenever you save a version of your dashboard, a copy of that version is saved so that previous versions of your dashboard are not lost.
                      Whenever you save a version of your dashboard, a copy of that version is saved so that previous versions of your dashboard are not lost.
                    type: number
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: datasources.oss.grafana.crossplane.io
spec:
  group: oss.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: DataSource
    listKind: DataSourceList
    plural: datasources
    singular: datasource
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DataSource is the Schema for the DataSources API. Official documentation
          https://grafana.com/docs/grafana/latest/datasources/HTTP API https://grafana.com/docs/grafana/latest/developers/http_api/data_source/
          The required arguments for this resource vary depending on the type of data
          source selected (via the 'type' argument).
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DataSourceSpec defines the desired state of DataSource
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accessMode:
                    description: |-
                      (String) The method by which Grafana will access the data source: proxy or direct. Defaults to proxy.
                      The method by which Grafana will access the data source: `proxy` or `direct`. Defaults to `proxy`.
                    type: string
                  basicAuthEnabled:
                    description: |-
                      (Boolean) Whether to enable basic auth for the data source. Defaults to false.
                      Whether to enable basic auth for the data source. Defaults to `false`.
                    type: boolean
                  basicAuthUsername:
                    description: |-
                      (String) Basic auth username. Defaults to “.
                      Basic auth username. Defaults to “.
                    type: string
                  databaseName:
                    description: |-
                      (String)  The name of the database to use on the selected data source server. Defaults to “.
                      (Required by some data source types) The name of the database to use on the selected data source server. Defaults to “.
                    type: string
                  httpHeadersSecretRef:
                    description: |-
                      (Map of String, Sensitive) Custom HTTP headers
                      Custom HTTP headers
                    properties:
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  isDefault:
                    description: |-
                      (Boolean) Whether to set the data source as default. This should only be true to a single data source. Defaults to false.
                      Whether to set the data source as default. This should only be `true` to a single data source. Defaults to `false`.
                    type: boolean
                  jsonDataEncoded:
                    description: |-
                      (String) Serialized JSON string containing the json data. This attribute can be used to pass configuration options to the data source. To figure out what options a datasource has available, see its docs or inspect the network data when saving it from the Grafana UI. Note that keys in this map are usually camelCased.
                      Serialized JSON string containing the json data. This attribute can be used to pass configuration options to the data source. To figure out what options a datasource has available, see its docs or inspect the network data when saving it from the Grafana UI. Note that keys in this map are usually camelCased.
                    type: string
                  name:
                    description: |-
                      (String) A unique name for the data source.
                      A unique name for the data source.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  secureJsonDataEncodedSecretRef:
                    description: |-
                      (String, Sensitive) Serialized JSON string containing the secure json data. This attribute can be used to pass secure configuration options to the data source. To figure out what options a datasource has available, see its docs or inspect the network data when saving it from the Grafana UI. Note that keys in this map are usually camelCased.
                      Serialized JSON string containing the secure json data. This attribute can be used to pass secure configuration options to the data source. To figure out what options a datasource has available, see its docs or inspect the network data when saving it from the Grafana UI. Note that keys in this map are usually camelCased.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  type:
                    description: |-
                      (String) The data source type. Must be one of the supported data source keywords.
                      The data source type. Must be one of the supported data source keywords.
                    type: string
                  uid:
                    description: |-
                      (String) Unique identifier. If unset, this will be automatically generated.
                      Unique identifier. If unset, this will be automatically generated.
                    type: string
                  url:
                    description: |-
                      (String) The URL for the data source. The type of URL required varies depending on the chosen data source type.
                      The URL for the data source. The type of URL required varies depending on the chosen data source type.
                    type: string
                  username:
                    description: |-
                      (String)  The username to use to authenticate to the data source. Defaults to “.
                      (Required by some data source types) The username to use to authenticate to the data source. Defaults to “.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  accessMode:
                    description: |-
                      (String) The method by which Grafana will access the data source: proxy or direct. Defaults to proxy.
                      The method by which Grafana will access the data source: `proxy` or `direct`. Defaults to `proxy`.
                    type: string
                  basicAuthEnabled:
                    description: |-
                      (Boolean) Whether to enable basic auth for the data source. Defaults to false.
                      Whether to enable basic auth for the data source. Defaults to `false`.
                    type: boolean
                  basicAuthUsername:
                    description: |-
                      (String) Basic auth username. Defaults to “.
                      Basic auth username. Defaults to “.
                    type: string
                  databaseName:
                    description: |-
                      (String)  The name of the database to use on the selected data source server. Defaults to “.
                      (Required by some data source types) The name of the database to use on the selected data source server. Defaults to “.
                    type: string
                  httpHeadersSecretRef:
                    additionalProperties:
                      type: string
                    type: object
                  isDefault:
                    description: |-
                      (Boolean) Whether to set the data source as default. This should only be true to a single data source. Defaults to false.
                      Whether to set the data source as default. This should only be `true` to a single data source. Defaults to `false`.
                    type: boolean
                  jsonDataEncoded:
                    description: |-
                      (String) Serialized JSON string containing the json data. This attribute can be used to pass configuration options to the data source. To figure out what options a datasource has available, see its docs or inspect the network data when saving it from the Grafana UI. Note that keys in this map are usually camelCased.
                      Serialized JSON string containing the json data. This attribute can be used to pass configuration options to the data source. To figure out what options a datasource has available, see its docs or inspect the network data when saving it from the Grafana UI. Note that keys in this map are usually camelCased.
                    type: string
                  name:
                    description: |-
                      (String) A unique name for the data source.
                      A unique name for the data source.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  secureJsonDataEncodedSecretRef:
                    description: |-
                      (String, Sensitive) Serialized JSON string containing the secure json data. This attribute can be used to pass secure configuration options to the data source. To figure out what options a datasource has available, see its docs or inspect the network data when saving it from the Grafana UI. Note that keys in this map are usually camelCased.
                      Serialized JSON string containing the secure json data. This attribute can be used to pass secure configuration options to the data source. To figure out what options a datasource has available, see its docs or inspect the network data when saving it from the Grafana UI. Note that keys in this map are usually camelCased.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  type:
                    description: |-
                      (String) The data source type. Must be one of the supported data source keywords.
                      The data source type. Must be one of the supported data source keywords.
                    type: string
                  uid:
                    description: |-
                      (String) Unique identifier. If unset, this will be automatically generated.
                      Unique identifier. If unset, this will be automatically generated.
                    type: string
                  url:
                    description: |-
                      (String) The URL for the data source. The type of URL required varies depending on the chosen data source type.
                      The URL for the data source. The type of URL required varies depending on the chosen data source type.
                    type: string
                  username:
                    description: |-
                      (String)  The username to use to authenticate to the data source. Defaults to “.
                      (Required by some data source types) The username to use to authenticate to the data source. Defaults to “.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.type is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.type)
                || (has(self.initProvider) && has(self.initProvider.type))'
          status:
            description: DataSourceStatus defines the observed state of DataSource.
            properties:
              atProvider:
                properties:
                  accessMode:
                    description: |-
                      (String) The method by which Grafana will access the data source: proxy or direct. Defaults to proxy.
                      The method by which Grafana will access the data source: `proxy` or `direct`. Defaults to `proxy`.
                    type: string
                  basicAuthEnabled:
                    description: |-
                      (Boolean) Whether to enable basic auth for the data source. Defaults to false.
                      Whether to enable basic auth for the data source. Defaults to `false`.
                    type: boolean
                  basicAuthUsername:
                    description: |-
                      (String) Basic auth username. Defaults to “.
                      Basic auth username. Defaults to “.
                    type: string
                  databaseName:
                    description: |-
                      (String)  The name of the database to use on the selected data source server. Defaults to “.
                      (Required by some data source types) The name of the database to use on the selected data source server. Defaults to “.
                    type: string
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  isDefault:
                    description: |-
                      (Boolean) Whether to set the data source as default. This should only be true to a single data source. Defaults to false.
                      Whether to set the data source as default. This should only be `true` to a single data source. Defaults to `false`.
                    type: boolean
                  jsonDataEncoded:
                    description: |-
                      (String) Serialized JSON string containing the json data. This attribute can be used to pass configuration options to the data source. To figure out what options a datasource has available, see its docs or inspect the network data when saving it from the Grafana UI. Note that keys in this map are usually camelCased.
                      Serialized JSON string containing the json data. This attribute can be used to pass configuration options to the data source. To figure out what options a datasource has available, see its docs or inspect the network data when saving it from the Grafana UI. Note that keys in this map are usually camelCased.
                    type: string
                  name:
                    description: |-
                      (String) A unique name for the data source.
                      A unique name for the data source.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  type:
                    description: |-
                      (String) The data source type. Must be one of the supported data source keywords.
                      The data source type. Must be one of the supported data source keywords.
                    type: string
                  uid:
                    description: |-
                      (String) Unique identifier. If unset, this will be automatically generated.
                      Unique identifier. If unset, this will be automatically generated.
                    type: string
                  url:
                    description: |-
                      (String) The URL for the data source. The type of URL required varies depending on the chosen data source type.
                      The URL for the data source. The type of URL required varies depending on the chosen data source type.
                    type: string
                  username:
                    description: |-
                      (String)  The username to use to authenticate to the data source. Defaults to “.
                      (Required by some data source types) The username to use to authenticate to the data source. Defaults to “.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: folderpermissions.oss.grafana.crossplane.io
spec:
  group: oss.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: FolderPermission
    listKind: FolderPermissionList
    plural: folderpermissions
    singular: folderpermission
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FolderPermission is the Schema for the FolderPermissions API.
          Manages the entire set of permissions for a folder. Permissions that aren't
          specified when applying this resource will be removed. Official documentation
          https://grafana.com/docs/grafana/latest/administration/roles-and-permissions/access-control/HTTP
          API https://grafana.com/docs/grafana/latest/developers/http_api/folder_permissions/
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: FolderPermissionSpec defines the desired state of FolderPermission
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  folderRef:
                    description: Reference to a Folder in oss to populate folderUid.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  folderSelector:
                    description: Selector for a Folder in oss to populate folderUid.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  folderUid:
                    description: |-
                      (String) The UID of the folder.
                      The UID of the folder.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  permissions:
                    description: |-
                      (Block Set) The permission items to add/update. Items that are omitted from the list will be removed. (see below for nested schema)
                      The permission items to add/update. Items that are omitted from the list will be removed.
                    items:
                      properties:
                        permission:
                          description: |-
                            (String) Permission to associate with item. Must be one of View, Edit, or Admin.
                            Permission to associate with item. Must be one of `View`, `Edit`, or `Admin`.
                          type: string
                        role:
                          description: |-
                            (String) Name of the basic role to manage permissions for. Options: Viewer, Editor or Admin.
                            Name of the basic role to manage permissions for. Options: `Viewer`, `Editor` or `Admin`.
                          type: string
                        teamId:
                          description: |-
                            (String) ID of the team to manage permissions for. Defaults to 0.
                            ID of the team to manage permissions for. Defaults to `0`.
                          type: string
                        teamRef:
                          description: Reference to a Team in oss to populate teamId.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        teamSelector:
                          description: Selector for a Team in oss to populate teamId.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        userId:
                          description: |-
                            (String) ID of the user or service account to manage permissions for. Defaults to 0.
                            ID of the user or service account to manage permissions for. Defaults to `0`.
                          type: string
                        userRef:
                          description: Reference to a User in oss to populate userId.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        userSelector:
                          description: Selector for a User in oss to populate userId.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  folderRef:
                    description: Reference to a Folder in oss to populate folderUid.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  folderSelector:
                    description: Selector for a Folder in oss to populate folderUid.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  folderUid:
                    description: |-
                      (String) The UID of the folder.
                      The UID of the folder.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  permissions:
                    description: |-
                      (Block Set) The permission items to add/update. Items that are omitted from the list will be removed. (see below for nested schema)
                      The permission items to add/update. Items that are omitted from the list will be removed.
                    items:
                      properties:
                        permission:
                          description: |-
                            (String) Permission to associate with item. Must be one of View, Edit, or Admin.
                            Permission to associate with item. Must be one of `View`, `Edit`, or `Admin`.
                          type: string
                        role:
                          description: |-
                            (String) Name of the basic role to manage permissions for. Options: Viewer, Editor or Admin.
                            Name of the basic role to manage permissions for. Options: `Viewer`, `Editor` or `Admin`.
                          type: string
                        teamId:
                          description: |-
                            (String) ID of the team to manage permissions for. Defaults to 0.
                            ID of the team to manage permissions for. Defaults to `0`.
                          type: string
                        teamRef:
                          description: Reference to a Team in oss to populate teamId.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        teamSelector:
                          description: Selector for a Team in oss to populate teamId.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        userId:
                          description: |-
                            (String) ID of the user or service account to manage permissions for. Defaults to 0.
                            ID of the user or service account to manage permissions for. Defaults to `0`.
                          type: string
                        userRef:
                          description: Reference to a User in oss to populate userId.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        userSelector:
                          description: Selector for a User in oss to populate userId.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: FolderPermissionStatus defines the observed state of FolderPermission.
            properties:
              atProvider:
                properties:
                  folderUid:
                    description: |-
                      (String) The UID of the folder.
                      The UID of the folder.
                    type: string
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  permissions:
                    description: |-
                      (Block Set) The permission items to add/update. Items that are omitted from the list will be removed. (see below for nested schema)
                      The permission items to add/update. Items that are omitted from the list will be removed.
                    items:
                      properties:
                        permission:
                          description: |-
                            (String) Permission to associate with item. Must be one of View, Edit, or Admin.
                            Permission to associate with item. Must be one of `View`, `Edit`, or `Admin`.
                          type: string
                        role:
                          description: |-
                            (String) Name of the basic role to manage permissions for. Options: Viewer, Editor or Admin.
                            Name of the basic role to manage permissions for. Options: `Viewer`, `Editor` or `Admin`.
                          type: string
                        teamId:
                          description: |-
                            (String) ID of the team to manage permissions for. Defaults to 0.
                            ID of the team to manage permissions for. Defaults to `0`.
                          type: string
                        userId:
                          description: |-
                            (String) ID of the user or service account to manage permissions for. Defaults to 0.
                            ID of the user or service account to manage permissions for. Defaults to `0`.
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: folders.oss.grafana.crossplane.io
spec:
  group: oss.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: Folder
    listKind: FolderList
    plural: folders
    singular: folder
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Folder is the Schema for the Folders API. Official documentation
          https://grafana.com/docs/grafana/latest/dashboards/manage-dashboards/HTTP
          API https://grafana.com/docs/grafana/latest/developers/http_api/folder/
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: FolderSpec defines the desired state of Folder
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  folderRef:
                    description: Reference to a Folder in oss to populate parentFolderUid.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  folderSelector:
                    description: Selector for a Folder in oss to populate parentFolderUid.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  parentFolderUid:
                    description: |-
                      (String) The uid of the parent folder. If set, the folder will be nested. If not set, the folder will be created in the root folder. Note: This requires the nestedFolders feature flag to be enabled on your Grafana instance.
                      The uid of the parent folder. If set, the folder will be nested. If not set, the folder will be created in the root folder. Note: This requires the nestedFolders feature flag to be enabled on your Grafana instance.
                    type: string
                  preventDestroyIfNotEmpty:
                    description: |-
                      (Boolean) Prevent deletion of the folder if it is not empty (contains dashboards or alert rules). This feature requires Grafana 10.2 or later. Defaults to false.
                      Prevent deletion of the folder if it is not empty (contains dashboards or alert rules). This feature requires Grafana 10.2 or later. Defaults to `false`.
                    type: boolean
                  title:
                    description: |-
                      (String) The title of the folder.
                      The title of the folder.
                    type: string
                  uid:
                    description: |-
                      (String) Unique identifier.
                      Unique identifier.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  folderRef:
                    description: Reference to a Folder in oss to populate parentFolderUid.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  folderSelector:
                    description: Selector for a Folder in oss to populate parentFolderUid.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  parentFolderUid:
                    description: |-
                      (String) The uid of the parent folder. If set, the folder will be nested. If not set, the folder will be created in the root folder. Note: This requires the nestedFolders feature flag to be enabled on your Grafana instance.
                      The uid of the parent folder. If set, the folder will be nested. If not set, the folder will be created in the root folder. Note: This requires the nestedFolders feature flag to be enabled on your Grafana instance.
                    type: string
                  preventDestroyIfNotEmpty:
                    description: |-
                      (Boolean) Prevent deletion of the folder if it is not empty (contains dashboards or alert rules). This feature requires Grafana 10.2 or later. Defaults to false.
                      Prevent deletion of the folder if it is not empty (contains dashboards or alert rules). This feature requires Grafana 10.2 or later. Defaults to `false`.
                    type: boolean
                  title:
                    description: |-
                      (String) The title of the folder.
                      The title of the folder.
                    type: string
                  uid:
                    description: |-
                      (String) Unique identifier.
                      Unique identifier.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.title is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.title)
                || (has(self.initProvider) && has(self.initProvider.title))'
          status:
            description: FolderStatus defines the observed state of Folder.
            properties:
              atProvider:
                properties:
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  parentFolderUid:
                    description: |-
                      (String) The uid of the parent folder. If set, the folder will be nested. If not set, the folder will be created in the root folder. Note: This requires the nestedFolders feature flag to be enabled on your Grafana instance.
                      The uid of the parent folder. If set, the folder will be nested. If not set, the folder will be created in the root folder. Note: This requires the nestedFolders feature flag to be enabled on your Grafana instance.
                    type: string
                  preventDestroyIfNotEmpty:
                    description: |-
                      (Boolean) Prevent deletion of the folder if it is not empty (contains dashboards or alert rules). This feature requires Grafana 10.2 or later. Defaults to false.
                      Prevent deletion of the folder if it is not empty (contains dashboards or alert rules). This feature requires Grafana 10.2 or later. Defaults to `false`.
                    type: boolean
                  title:
                    description: |-
                      (String) The title of the folder.
                      The title of the folder.
                    type: string
                  uid:
                    description: |-
                      (String) Unique identifier.
                      Unique identifier.
                    type: string
                  url:
                    description: |-
                      (String) The full URL of the folder.
                      The full URL of the folder.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: librarypanels.oss.grafana.crossplane.io
spec:
  group: oss.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: LibraryPanel
    listKind: LibraryPanelList
    plural: librarypanels
    singular: librarypanel
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LibraryPanel is the Schema for the LibraryPanels API. Manages
          Grafana library panels. Official documentation https://grafana.com/docs/grafana/latest/dashboards/build-dashboards/manage-library-panels/HTTP
          API https://grafana.com/docs/grafana/latest/developers/http_api/library_element/
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: LibraryPanelSpec defines the desired state of LibraryPanel
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  folderRef:
                    description: Reference to a Folder in oss to populate folderUid.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  folderSelector:
                    description: Selector for a Folder in oss to populate folderUid.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  folderUid:
                    description: |-
                      (String) Unique ID (UID) of the folder containing the library panel.
                      Unique ID (UID) of the folder containing the library panel.
                    type: string
                  modelJson:
                    description: |-
                      (String) The JSON model for the library panel.
                      The JSON model for the library panel.
                    type: string
                  name:
                    description: |-
                      (String) Name of the library panel.
                      Name of the library panel.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  uid:
                    description: |-
                      (String) The unique identifier (UID) of a library panel uniquely identifies library panels between multiple Grafana installs. It’s automatically generated unless you specify it during library panel creation.The UID provides consistent URLs for accessing library panels and when syncing library panels between multiple Grafana installs.
                      The unique identifier (UID) of a library panel uniquely identifies library panels between multiple Grafana installs. It’s automatically generated unless you specify it during library panel creation.The UID provides consistent URLs for accessing library panels and when syncing library panels between multiple Grafana installs.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  folderRef:
                    description: Reference to a Folder in oss to populate folderUid.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  folderSelector:
                    description: Selector for a Folder in oss to populate folderUid.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  folderUid:
                    description: |-
                      (String) Unique ID (UID) of the folder containing the library panel.
                      Unique ID (UID) of the folder containing the library panel.
                    type: string
                  modelJson:
                    description: |-
                      (String) The JSON model for the library panel.
                      The JSON model for the library panel.
                    type: string
                  name:
                    description: |-
                      (String) Name of the library panel.
                      Name of the library panel.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  uid:
                    description: |-
                      (String) The unique identifier (UID) of a library panel uniquely identifies library panels between multiple Grafana installs. It’s automatically generated unless you specify it during library panel creation.The UID provides consistent URLs for accessing library panels and when syncing library panels between multiple Grafana installs.
                      The unique identifier (UID) of a library panel uniquely identifies library panels between multiple Grafana installs. It’s automatically generated unless you specify it during library panel creation.The UID provides consistent URLs for accessing library panels and when syncing library panels between multiple Grafana installs.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.modelJson is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.modelJson)
                || (has(self.initProvider) && has(self.initProvider.modelJson))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: LibraryPanelStatus defines the observed state of LibraryPanel.
            properties:
              atProvider:
                properties:
                  created:
                    description: |-
                      (String) Timestamp when the library panel was created.
                      Timestamp when the library panel was created.
                    type: string
                  dashboardIds:
                    description: |-
                      (List of Number) Numerical IDs of Grafana dashboards containing the library panel.
                      Numerical IDs of Grafana dashboards containing the library panel.
                    items:
                      type: number
                    type: array
                  description:
                    description: |-
                      (String) Description of the library panel.
                      Description of the library panel.
                    type: string
                  folderName:
                    description: |-
                      (String) Name of the folder containing the library panel.
                      Name of the folder containing the library panel.
                    type: string
                  folderUid:
                    description: |-
                      (String) Unique ID (UID) of the folder containing the library panel.
                      Unique ID (UID) of the folder containing the library panel.
                    type: string
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  modelJson:
                    description: |-
                      (String) The JSON model for the library panel.
                      The JSON model for the library panel.
                    type: string
                  name:
                    description: |-
                      (String) Name of the library panel.
                      Name of the library panel.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  panelId:
                    description: |-
                      (Number) The numeric ID of the library panel computed by Grafana.
                      The numeric ID of the library panel computed by Grafana.
                    type: number
                  type:
                    description: |-
                      (String) Type of the library panel (eg. text).
                      Type of the library panel (eg. text).
                    type: string
                  uid:
                    description: |-
                      (String) The unique identifier (UID) of a library panel uniquely identifies library panels between multiple Grafana installs. It’s automatically generated unless you specify it during library panel creation.The UID provides consistent URLs for accessing library panels and when syncing library panels between multiple Grafana installs.
                      The unique identifier (UID) of a library panel uniquely identifies library panels between multiple Grafana installs. It’s automatically generated unless you specify it during library panel creation.The UID provides consistent URLs for accessing library panels and when syncing library panels between multiple Grafana installs.
                    type: string
                  updated:
                    description: |-
                      (String) Timestamp when the library panel was last modified.
                      Timestamp when the library panel was last modified.
                    type: string
                  version:
                    description: |-
                      (Number) Version of the library panel.
                      Version of the library panel.
                    type: number
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: organizationpreferences.oss.grafana.crossplane.io
spec:
  group: oss.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: OrganizationPreferences
    listKind: OrganizationPreferencesList
    plural: organizationpreferences
    singular: organizationpreferences
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: OrganizationPreferences is the Schema for the OrganizationPreferencess
          API. Official documentation https://grafana.com/docs/grafana/latest/administration/organization-management/HTTP
          API https://grafana.com/docs/grafana/latest/developers/http_api/preferences/#get-current-org-prefs
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: OrganizationPreferencesSpec defines the desired state of
              OrganizationPreferences
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  homeDashboardUid:
                    description: |-
                      (String) The Organization home dashboard UID. This is only available in Grafana 9.0+.
                      The Organization home dashboard UID. This is only available in Grafana 9.0+.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  theme:
                    description: |-
                      (String) The Organization theme. Available values are light, dark, system, or an empty string for the default.
                      The Organization theme. Available values are `light`, `dark`, `system`, or an empty string for the default.
                    type: string
                  timezone:
                    description: |-
                      (String) The Organization timezone. Available values are utc, browser, or an empty string for the default.
                      The Organization timezone. Available values are `utc`, `browser`, or an empty string for the default.
                    type: string
                  weekStart:
                    description: |-
                      (String) The Organization week start day. Available values are sunday, monday, saturday, or an empty string for the default. Defaults to “.
                      The Organization week start day. Available values are `sunday`, `monday`, `saturday`, or an empty string for the default. Defaults to “.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  homeDashboardUid:
                    description: |-
                      (String) The Organization home dashboard UID. This is only available in Grafana 9.0+.
                      The Organization home dashboard UID. This is only available in Grafana 9.0+.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  theme:
                    description: |-
                      (String) The Organization theme. Available values are light, dark, system, or an empty string for the default.
                      The Organization theme. Available values are `light`, `dark`, `system`, or an empty string for the default.
                    type: string
                  timezone:
                    description: |-
                      (String) The Organization timezone. Available values are utc, browser, or an empty string for the default.
                      The Organization timezone. Available values are `utc`, `browser`, or an empty string for the default.
                    type: string
                  weekStart:
                    description: |-
                      (String) The Organization week start day. Available values are sunday, monday, saturday, or an empty string for the default. Defaults to “.
                      The Organization week start day. Available values are `sunday`, `monday`, `saturday`, or an empty string for the default. Defaults to “.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: OrganizationPreferencesStatus defines the observed state
              of OrganizationPreferences.
            properties:
              atProvider:
                properties:
                  homeDashboardUid:
                    description: |-
                      (String) The Organization home dashboard UID. This is only available in Grafana 9.0+.
                      The Organization home dashboard UID. This is only available in Grafana 9.0+.
                    type: string
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  theme:
                    description: |-
                      (String) The Organization theme. Available values are light, dark, system, or an empty string for the default.
                      The Organization theme. Available values are `light`, `dark`, `system`, or an empty string for the default.
                    type: string
                  timezone:
                    description: |-
                      (String) The Organization timezone. Available values are utc, browser, or an empty string for the default.
                      The Organization timezone. Available values are `utc`, `browser`, or an empty string for the default.
                    type: string
                  weekStart:
                    description: |-
                      (String) The Organization week start day. Available values are sunday, monday, saturday, or an empty string for the default. Defaults to “.
                      The Organization week start day. Available values are `sunday`, `monday`, `saturday`, or an empty string for the default. Defaults to “.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: organizations.oss.grafana.crossplane.io
spec:
  group: oss.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: Organization
    listKind: OrganizationList
    plural: organizations
    singular: organization
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Organization is the Schema for the Organizations API. Official
          documentation https://grafana.com/docs/grafana/latest/administration/organization-management/HTTP
          API https://grafana.com/docs/grafana/latest/developers/http_api/org/ This
          resource represents an instance-scoped resource and uses Grafana's admin
          APIs. It does not work with API tokens or service accounts which are org-scoped.
          You must use basic auth.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: OrganizationSpec defines the desired state of Organization
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  adminUser:
                    description: |-
                      (String) The login name of the configured default admin user for the Grafana
                      installation. If unset, this value defaults to admin, the Grafana default.
                      Defaults to admin.
                      The login name of the configured default admin user for the Grafana
                      installation. If unset, this value defaults to admin, the Grafana default.
                      Defaults to `admin`.
                    type: string
                  admins:
                    description: |-
                      (Set of String) A list of email addresses corresponding to users who should be given admin
                      access to the organization. Note: users specified here must already exist in
                      Grafana unless 'create_users' is set to true.
                      A list of email addresses corresponding to users who should be given admin
                      access to the organization. Note: users specified here must already exist in
                      Grafana unless 'create_users' is set to true.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  createUsers:
                    description: |-
                      (Boolean) Whether or not to create Grafana users specified in the organization's
                      membership if they don't already exist in Grafana. If unspecified, this
                      parameter defaults to true, creating placeholder users with the name, login,
                      and email set to the email of the user, and a random password. Setting this
                      option to false will cause an error to be thrown for any users that do not
                      already exist in Grafana.
                      Defaults to true.
                      Whether or not to create Grafana users specified in the organization's
                      membership if they don't already exist in Grafana. If unspecified, this
                      parameter defaults to true, creating placeholder users with the name, login,
                      and email set to the email of the user, and a random password. Setting this
                      option to false will cause an error to be thrown for any users that do not
                      already exist in Grafana.
                      Defaults to `true`.
                    type: boolean
                  editors:
                    description: |-
                      (Set of String) A list of email addresses corresponding to users who should be given editor
                      access to the organization. Note: users specified here must already exist in
                      Grafana unless 'create_users' is set to true.
                      A list of email addresses corresponding to users who should be given editor
                      access to the organization. Note: users specified here must already exist in
                      Grafana unless 'create_users' is set to true.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  name:
                    description: |-
                      (String) The display name for the Grafana organization created.
                      The display name for the Grafana organization created.
                    type: string
                  usersWithoutAccess:
                    description: |-
                      (Set of String) A list of email addresses corresponding to users who should be given none access to the organization.
                      Note: users specified here must already exist in Grafana, unless 'create_users' is
                      set to true. This feature is only available in Grafana 10.2+.
                      A list of email addresses corresponding to users who should be given none access to the organization.
                      Note: users specified here must already exist in Grafana, unless 'create_users' is
                      set to true. This feature is only available in Grafana 10.2+.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  viewers:
                    description: |-
                      (Set of String) A list of email addresses corresponding to users who should be given viewer
                      access to the organization. Note: users specified here must already exist in
                      Grafana unless 'create_users' is set to true.
                      A list of email addresses corresponding to users who should be given viewer
                      access to the organization. Note: users specified here must already exist in
                      Grafana unless 'create_users' is set to true.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  adminUser:
                    description: |-
                      (String) The login name of the configured default admin user for the Grafana
                      installation. If unset, this value defaults to admin, the Grafana default.
                      Defaults to admin.
                      The login name of the configured default admin user for the Grafana
                      installation. If unset, this value defaults to admin, the Grafana default.
                      Defaults to `admin`.
                    type: string
                  admins:
                    description: |-
                      (Set of String) A list of email addresses corresponding to users who should be given admin
                      access to the organization. Note: users specified here must already exist in
                      Grafana unless 'create_users' is set to true.
                      A list of email addresses corresponding to users who should be given admin
                      access to the organization. Note: users specified here must already exist in
                      Grafana unless 'create_users' is set to true.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  createUsers:
                    description: |-
                      (Boolean) Whether or not to create Grafana users specified in the organization's
                      membership if they don't already exist in Grafana. If unspecified, this
                      parameter defaults to true, creating placeholder users with the name, login,
                      and email set to the email of the user, and a random password. Setting this
                      option to false will cause an error to be thrown for any users that do not
                      already exist in Grafana.
                      Defaults to true.
                      Whether or not to create Grafana users specified in the organization's
                      membership if they don't already exist in Grafana. If unspecified, this
                      parameter defaults to true, creating placeholder users with the name, login,
                      and email set to the email of the user, and a random password. Setting this
                      option to false will cause an error to be thrown for any users that do not
                      already exist in Grafana.
                      Defaults to `true`.
                    type: boolean
                  editors:
                    description: |-
                      (Set of String) A list of email addresses corresponding to users who should be given editor
                      access to the organization. Note: users specified here must already exist in
                      Grafana unless 'create_users' is set to true.
                      A list of email addresses corresponding to users who should be given editor
                      access to the organization. Note: users specified here must already exist in
                      Grafana unless 'create_users' is set to true.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  name:
                    description: |-
                      (String) The display name for the Grafana organization created.
                      The display name for the Grafana organization created.
                    type: string
                  usersWithoutAccess:
                    description: |-
                      (Set of String) A list of email addresses corresponding to users who should be given none access to the organization.
                      Note: users specified here must already exist in Grafana, unless 'create_users' is
                      set to true. This feature is only available in Grafana 10.2+.
                      A list of email addresses corresponding to users who should be given none access to the organization.
                      Note: users specified here must already exist in Grafana, unless 'create_users' is
                      set to true. This feature is only available in Grafana 10.2+.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  viewers:
                    description: |-
                      (Set of String) A list of email addresses corresponding to users who should be given viewer
                      access to the organization. Note: users specified here must already exist in
                      Grafana unless 'create_users' is set to true.
                      A list of email addresses corresponding to users who should be given viewer
                      access to the organization. Note: users specified here must already exist in
                      Grafana unless 'create_users' is set to true.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: OrganizationStatus defines the observed state of Organization.
            properties:
              atProvider:
                properties:
                  adminUser:
                    description: |-
                      (String) The login name of the configured default admin user for the Grafana
                      installation. If unset, this value defaults to admin, the Grafana default.
                      Defaults to admin.
                      The login name of the configured default admin user for the Grafana
                      installation. If unset, this value defaults to admin, the Grafana default.
                      Defaults to `admin`.
                    type: string
                  admins:
                    description: |-
                      (Set of String) A list of email addresses corresponding to users who should be given admin
                      access to the organization. Note: users specified here must already exist in
                      Grafana unless 'create_users' is set to true.
                      A list of email addresses corresponding to users who should be given admin
                      access to the organization. Note: users specified here must already exist in
                      Grafana unless 'create_users' is set to true.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  createUsers:
                    description: |-
                      (Boolean) Whether or not to create Grafana users specified in the organization's
                      membership if they don't already exist in Grafana. If unspecified, this
                      parameter defaults to true, creating placeholder users with the name, login,
                      and email set to the email of the user, and a random password. Setting this
                      option to false will cause an error to be thrown for any users that do not
                      already exist in Grafana.
                      Defaults to true.
                      Whether or not to create Grafana users specified in the organization's
                      membership if they don't already exist in Grafana. If unspecified, this
                      parameter defaults to true, creating placeholder users with the name, login,
                      and email set to the email of the user, and a random password. Setting this
                      option to false will cause an error to be thrown for any users that do not
                      already exist in Grafana.
                      Defaults to `true`.
                    type: boolean
                  editors:
                    description: |-
                      (Set of String) A list of email addresses corresponding to users who should be given editor
                      access to the organization. Note: users specified here must already exist in
                      Grafana unless 'create_users' is set to true.
                      A list of email addresses corresponding to users who should be given editor
                      access to the organization. Note: users specified here must already exist in
                      Grafana unless 'create_users' is set to true.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  name:
                    description: |-
                      (String) The display name for the Grafana organization created.
                      The display name for the Grafana organization created.
                    type: string
                  orgId:
                    description: |-
                      (Number) The organization id assigned to this organization by Grafana.
                      The organization id assigned to this organization by Grafana.
                    type: number
                  usersWithoutAccess:
                    description: |-
                      (Set of String) A list of email addresses corresponding to users who should be given none access to the organization.
                      Note: users specified here must already exist in Grafana, unless 'create_users' is
                      set to true. This feature is only available in Grafana 10.2+.
                      A list of email addresses corresponding to users who should be given none access to the organization.
                      Note: users specified here must already exist in Grafana, unless 'create_users' is
                      set to true. This feature is only available in Grafana 10.2+.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  viewers:
                    description: |-
                      (Set of String) A list of email addresses corresponding to users who should be given viewer
                      access to the organization. Note: users specified here must already exist in
                      Grafana unless 'create_users' is set to true.
                      A list of email addresses corresponding to users who should be given viewer
                      access to the organization. Note: users specified here must already exist in
                      Grafana unless 'create_users' is set to true.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: playlists.oss.grafana.crossplane.io
spec:
  group: oss.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: Playlist
    listKind: PlaylistList
    plural: playlists
    singular: playlist
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Playlist is the Schema for the Playlists API. Official documentation
          https://grafana.com/docs/grafana/latest/dashboards/create-manage-playlists/HTTP
          API https://grafana.com/docs/grafana/latest/developers/http_api/playlist/
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PlaylistSpec defines the desired state of Playlist
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  interval:
                    description: (String)
                    type: string
                  item:
                    description: '(Block Set, Min: 1) (see below for nested schema)'
                    items:
                      properties:
                        order:
                          description: (Number)
                          type: number
                        title:
                          description: (String)
                          type: string
                        type:
                          description: (String)
                          type: string
                        value:
                          description: (String)
                          type: string
                      type: object
                    type: array
                  name:
                    description: |-
                      (String) The name of the playlist.
                      The name of the playlist.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  interval:
                    description: (String)
                    type: string
                  item:
                    description: '(Block Set, Min: 1) (see below for nested schema)'
                    items:
                      properties:
                        order:
                          description: (Number)
                          type: number
                        title:
                          description: (String)
                          type: string
                        type:
                          description: (String)
                          type: string
                        value:
                          description: (String)
                          type: string
                      type: object
                    type: array
                  name:
                    description: |-
                      (String) The name of the playlist.
                      The name of the playlist.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.interval is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.interval)
                || (has(self.initProvider) && has(self.initProvider.interval))'
            - message: spec.forProvider.item is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.item)
                || (has(self.initProvider) && has(self.initProvider.item))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: PlaylistStatus defines the observed state of Playlist.
            properties:
              atProvider:
                properties:
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  interval:
                    description: (String)
                    type: string
                  item:
                    description: '(Block Set, Min: 1) (see below for nested schema)'
                    items:
                      properties:
                        id:
                          description: (String) The ID of this resource.
                          type: string
                        order:
                          description: (Number)
                          type: number
                        title:
                          description: (String)
                          type: string
                        type:
                          description: (String)
                          type: string
                        value:
                          description: (String)
                          type: string
                      type: object
                    type: array
                  name:
                    description: |-
                      (String) The name of the playlist.
                      The name of the playlist.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: serviceaccountpermissions.oss.grafana.crossplane.io
spec:
  group: oss.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: ServiceAccountPermission
    listKind: ServiceAccountPermissionList
    plural: serviceaccountpermissions
    singular: serviceaccountpermission
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'ServiceAccountPermission is the Schema for the ServiceAccountPermissions
          API. Manages the entire set of permissions for a service account. Permissions
          that aren''t specified when applying this resource will be removed. Note:
          This resource is available from Grafana 9.2.4 onwards. Official documentation
          https://grafana.com/docs/grafana/latest/administration/service-accounts/#manage-users-and-teams-permissions-for-a-service-account-in-grafana'
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ServiceAccountPermissionSpec defines the desired state of
              ServiceAccountPermission
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  permissions:
                    description: |-
                      (Block Set) The permission items to add/update. Items that are omitted from the list will be removed. (see below for nested schema)
                      The permission items to add/update. Items that are omitted from the list will be removed.
                    items:
                      properties:
                        permission:
                          description: |-
                            (String) Permission to associate with item. Must be one of View, Edit, or Admin.
                            Permission to associate with item. Must be one of `View`, `Edit`, or `Admin`.
                          type: string
                        teamId:
                          description: |-
                            (String) ID of the team to manage permissions for. Defaults to 0.
                            ID of the team to manage permissions for. Defaults to `0`.
                          type: string
                        teamRef:
                          description: Reference to a Team in oss to populate teamId.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        teamSelector:
                          description: Selector for a Team in oss to populate teamId.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        userId:
                          description: |-
                            (String) ID of the user or service account to manage permissions for. Defaults to 0.
                            ID of the user or service account to manage permissions for. Defaults to `0`.
                          type: string
                        userRef:
                          description: Reference to a User in oss to populate userId.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        userSelector:
                          description: Selector for a User in oss to populate userId.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                      type: object
                    type: array
                  serviceAccountId:
                    description: |-
                      (String) The id of the service account.
                      The id of the service account.
                    type: string
                  serviceAccountRef:
                    description: Reference to a ServiceAccount in oss to populate
                      serviceAccountId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  serviceAccountSelector:
                    description: Selector for a ServiceAccount in oss to populate
                      serviceAccountId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  permissions:
                    description: |-
                      (Block Set) The permission items to add/update. Items that are omitted from the list will be removed. (see below for nested schema)
                      The permission items to add/update. Items that are omitted from the list will be removed.
                    items:
                      properties:
                        permission:
                          description: |-
                            (String) Permission to associate with item. Must be one of View, Edit, or Admin.
                            Permission to associate with item. Must be one of `View`, `Edit`, or `Admin`.
                          type: string
                        teamId:
                          description: |-
                            (String) ID of the team to manage permissions for. Defaults to 0.
                            ID of the team to manage permissions for. Defaults to `0`.
                          type: string
                        teamRef:
                          description: Reference to a Team in oss to populate teamId.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        teamSelector:
                          description: Selector for a Team in oss to populate teamId.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        userId:
                          description: |-
                            (String) ID of the user or service account to manage permissions for. Defaults to 0.
                            ID of the user or service account to manage permissions for. Defaults to `0`.
                          type: string
                        userRef:
                          description: Reference to a User in oss to populate userId.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        userSelector:
                          description: Selector for a User in oss to populate userId.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                      type: object
                    type: array
                  serviceAccountId:
                    description: |-
                      (String) The id of the service account.
                      The id of the service account.
                    type: string
                  serviceAccountRef:
                    description: Reference to a ServiceAccount in oss to populate
                      serviceAccountId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  serviceAccountSelector:
                    description: Selector for a ServiceAccount in oss to populate
                      serviceAccountId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ServiceAccountPermissionStatus defines the observed state
              of ServiceAccountPermission.
            properties:
              atProvider:
                properties:
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  permissions:
                    description: |-
                      (Block Set) The permission items to add/update. Items that are omitted from the list will be removed. (see below for nested schema)
                      The permission items to add/update. Items that are omitted from the list will be removed.
                    items:
                      properties:
                        permission:
                          description: |-
                            (String) Permission to associate with item. Must be one of View, Edit, or Admin.
                            Permission to associate with item. Must be one of `View`, `Edit`, or `Admin`.
                          type: string
                        teamId:
                          description: |-
                            (String) ID of the team to manage permissions for. Defaults to 0.
                            ID of the team to manage permissions for. Defaults to `0`.
                          type: string
                        userId:
                          description: |-
                            (String) ID of the user or service account to manage permissions for. Defaults to 0.
                            ID of the user or service account to manage permissions for. Defaults to `0`.
                          type: string
                      type: object
                    type: array
                  serviceAccountId:
                    description: |-
                      (String) The id of the service account.
                      The id of the service account.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: serviceaccounts.oss.grafana.crossplane.io
spec:
  group: oss.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: ServiceAccount
    listKind: ServiceAccountList
    plural: serviceaccounts
    singular: serviceaccount
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'ServiceAccount is the Schema for the ServiceAccounts API. Note:
          This resource is available only with Grafana 9.1+. Official documentation
          https://grafana.com/docs/grafana/latest/administration/service-accounts/HTTP
          API https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api'
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ServiceAccountSpec defines the desired state of ServiceAccount
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  isDisabled:
                    description: |-
                      (Boolean) The disabled status for the service account. Defaults to false.
                      The disabled status for the service account. Defaults to `false`.
                    type: boolean
                  name:
                    description: |-
                      (String) The name of the service account.
                      The name of the service account.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  role:
                    description: |-
                      (String) The basic role of the service account in the organization.
                      The basic role of the service account in the organization.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  isDisabled:
                    description: |-
                      (Boolean) The disabled status for the service account. Defaults to false.
                      The disabled status for the service account. Defaults to `false`.
                    type: boolean
                  name:
                    description: |-
                      (String) The name of the service account.
                      The name of the service account.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  role:
                    description: |-
                      (String) The basic role of the service account in the organization.
                      The basic role of the service account in the organization.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.role is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.role)
                || (has(self.initProvider) && has(self.initProvider.role))'
          status:
            description: ServiceAccountStatus defines the observed state of ServiceAccount.
            properties:
              atProvider:
                properties:
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  isDisabled:
                    description: |-
                      (Boolean) The disabled status for the service account. Defaults to false.
                      The disabled status for the service account. Defaults to `false`.
                    type: boolean
                  name:
                    description: |-
                      (String) The name of the service account.
                      The name of the service account.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  role:
                    description: |-
                      (String) The basic role of the service account in the organization.
                      The basic role of the service account in the organization.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: serviceaccounttokens.oss.grafana.crossplane.io
spec:
  group: oss.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: ServiceAccountToken
    listKind: ServiceAccountTokenList
    plural: serviceaccounttokens
    singular: serviceaccounttoken
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'ServiceAccountToken is the Schema for the ServiceAccountTokens
          API. Note: This resource is available only with Grafana 9.1+. Official documentation
          https://grafana.com/docs/grafana/latest/administration/service-accounts/HTTP
          API https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api'
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ServiceAccountTokenSpec defines the desired state of ServiceAccountToken
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  name:
                    description: |-
                      (String) The name of the service account token.
                      The name of the service account token.
                    type: string
                  secondsToLive:
                    description: |-
                      (Number) The key expiration in seconds. It is optional. If it is a positive number an expiration date for the key is set. If it is null, zero or is omitted completely (unless api_key_max_seconds_to_live configuration option is set) the key will never expire.
                      The key expiration in seconds. It is optional. If it is a positive number an expiration date for the key is set. If it is null, zero or is omitted completely (unless `api_key_max_seconds_to_live` configuration option is set) the key will never expire.
                    type: number
                  serviceAccountId:
                    description: |-
                      (String) The ID of the service account to which the token belongs.
                      The ID of the service account to which the token belongs.
                    type: string
                  serviceAccountRef:
                    description: Reference to a ServiceAccount in oss to populate
                      serviceAccountId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  serviceAccountSelector:
                    description: Selector for a ServiceAccount in oss to populate
                      serviceAccountId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  name:
                    description: |-
                      (String) The name of the service account token.
                      The name of the service account token.
                    type: string
                  secondsToLive:
                    description: |-
                      (Number) The key expiration in seconds. It is optional. If it is a positive number an expiration date for the key is set. If it is null, zero or is omitted completely (unless api_key_max_seconds_to_live configuration option is set) the key will never expire.
                      The key expiration in seconds. It is optional. If it is a positive number an expiration date for the key is set. If it is null, zero or is omitted completely (unless `api_key_max_seconds_to_live` configuration option is set) the key will never expire.
                    type: number
                  serviceAccountId:
                    description: |-
                      (String) The ID of the service account to which the token belongs.
                      The ID of the service account to which the token belongs.
                    type: string
                  serviceAccountRef:
                    description: Reference to a ServiceAccount in oss to populate
                      serviceAccountId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  serviceAccountSelector:
                    description: Selector for a ServiceAccount in oss to populate
                      serviceAccountId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: ServiceAccountTokenStatus defines the observed state of ServiceAccountToken.
            properties:
              atProvider:
                properties:
                  expiration:
                    description: |-
                      (String) The expiration date of the service account token.
                      The expiration date of the service account token.
                    type: string
                  hasExpired:
                    description: |-
                      (Boolean) The status of the service account token.
                      The status of the service account token.
                    type: boolean
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  name:
                    description: |-
                      (String) The name of the service account token.
                      The name of the service account token.
                    type: string
                  secondsToLive:
                    description: |-
                      (Number) The key expiration in seconds. It is optional. If it is a positive number an expiration date for the key is set. If it is null, zero or is omitted completely (unless api_key_max_seconds_to_live configuration option is set) the key will never expire.
                      The key expiration in seconds. It is optional. If it is a positive number an expiration date for the key is set. If it is null, zero or is omitted completely (unless `api_key_max_seconds_to_live` configuration option is set) the key will never expire.
                    type: number
                  serviceAccountId:
                    description: |-
                      (String) The ID of the service account to which the token belongs.
                      The ID of the service account to which the token belongs.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: ssosettings.oss.grafana.crossplane.io
spec:
  group: oss.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: SsoSettings
    listKind: SsoSettingsList
    plural: ssosettings
    singular: ssosettings
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SsoSettings is the Schema for the SsoSettingss API. Manages Grafana
          SSO Settings for OAuth2 and SAML. Support for SAML is currently in preview,
          it will be available in Grafana Enterprise starting with v11.1. Official
          documentation https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-authentication/HTTP
          API https://grafana.com/docs/grafana/latest/developers/http_api/sso-settings/
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: SsoSettingsSpec defines the desired state of SsoSettings
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  oauth2Settings:
                    description: |-
                      (Block Set, Max: 1) The OAuth2 settings set. Required for github, gitlab, google, azuread, okta, generic_oauth providers. (see below for nested schema)
                      The OAuth2 settings set. Required for github, gitlab, google, azuread, okta, generic_oauth providers.
                    items:
                      properties:
                        allowAssignGrafanaAdmin:
                          description: |-
                            (Boolean) If enabled, it will automatically sync the Grafana server administrator role.
                            If enabled, it will automatically sync the Grafana server administrator role.
                          type: boolean
                        allowSignUp:
                          description: |-
                            (Boolean) If not enabled, only existing Grafana users can log in using OAuth.
                            If not enabled, only existing Grafana users can log in using OAuth.
                          type: boolean
                        allowedDomains:
                          description: |-
                            or space-separated domains. The user should belong to at least one domain to log in.
                            List of comma- or space-separated domains. The user should belong to at least one domain to log in.
                          type: string
                        allowedGroups:
                          description: |-
                            or space-separated groups. The user should be a member of at least one group to log in. For Generic OAuth, if you configure allowed_groups, you must also configure groups_attribute_path.
                            List of comma- or space-separated groups. The user should be a member of at least one group to log in. For Generic OAuth, if you configure allowed_groups, you must also configure groups_attribute_path.
                          type: string
                        allowedOrganizations:
                          description: |-
                            or space-separated organizations. The user should be a member of at least one organization to log in.
                            List of comma- or space-separated organizations. The user should be a member of at least one organization to log in.
                          type: string
                        apiUrl:
                          description: |-
                            (String) The user information endpoint of your OAuth2 provider. Required for okta and generic_oauth providers.
                            The user information endpoint of your OAuth2 provider. Required for okta and generic_oauth providers.
                          type: string
                        authStyle:
                          description: |-
                            (String) It determines how client_id and client_secret are sent to Oauth2 provider. Possible values are AutoDetect, InParams, InHeader. Default is AutoDetect.
                            It determines how client_id and client_secret are sent to Oauth2 provider. Possible values are AutoDetect, InParams, InHeader. Default is AutoDetect.
                          type: string
                        authUrl:
                          description: |-
                            (String) The authorization endpoint of your OAuth2 provider. Required for azuread, okta and generic_oauth providers.
                            The authorization endpoint of your OAuth2 provider. Required for azuread, okta and generic_oauth providers.
                          type: string
                        autoLogin:
                          description: |-
                            (Boolean) Log in automatically, skipping the login screen.
                            Log in automatically, skipping the login screen.
                          type: boolean
                        clientId:
                          description: |-
                            (String) The client Id of your OAuth2 app.
                            The client Id of your OAuth2 app.
                          type: string
                        clientSecretSecretRef:
                          description: |-
                            (String, Sensitive) The client secret of your OAuth2 app.
                            The client secret of your OAuth2 app.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        custom:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) Custom fields to configure for OAuth2 such as the force_use_graph_api field.
                            Custom fields to configure for OAuth2 such as the [force_use_graph_api](https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-authentication/azuread/#force-fetching-groups-from-microsoft-graph-api) field.
                          type: object
                          x-kubernetes-map-type: granular
                        defineAllowedGroups:
                          description: |-
                            (Boolean) Define allowed groups.
                            Define allowed groups.
                          type: boolean
                        defineAllowedTeamsIds:
                          description: |-
                            (Boolean) Define allowed teams ids.
                            Define allowed teams ids.
                          type: boolean
                        emailAttributeName:
                          description: |-
                            (String) Name of the key to use for user email lookup within the attributes map of OAuth2 ID token. Only applicable to Generic OAuth.
                            Name of the key to use for user email lookup within the attributes map of OAuth2 ID token. Only applicable to Generic OAuth.
                          type: string
                        emailAttributePath:
                          description: |-
                            (String) JMESPath expression to use for user email lookup from the user information. Only applicable to Generic OAuth.
                            JMESPath expression to use for user email lookup from the user information. Only applicable to Generic OAuth.
                          type: string
                        emptyScopes:
                          description: |-
                            (Boolean) If enabled, no scopes will be sent to the OAuth2 provider.
                            If enabled, no scopes will be sent to the OAuth2 provider.
                          type: boolean
                        enabled:
                          description: |-
                            (Boolean) Define whether this configuration is enabled for the specified provider. Defaults to true.
                            Define whether this configuration is enabled for the specified provider. Defaults to `true`.
                          type: boolean
                        groupsAttributePath:
                          description: |-
                            (String) JMESPath expression to use for user group lookup. If you configure allowed_groups, you must also configure groups_attribute_path.
                            JMESPath expression to use for user group lookup. If you configure allowed_groups, you must also configure groups_attribute_path.
                          type: string
                        idTokenAttributeName:
                          description: |-
                            (String) The name of the key used to extract the ID token from the returned OAuth2 token. Only applicable to Generic OAuth.
                            The name of the key used to extract the ID token from the returned OAuth2 token. Only applicable to Generic OAuth.
                          type: string
                        loginAttributePath:
                          description: |-
                            (String) JMESPath expression to use for user login lookup from the user ID token. Only applicable to Generic OAuth.
                            JMESPath expression to use for user login lookup from the user ID token. Only applicable to Generic OAuth.
                          type: string
                        name:
                          description: |-
                            (String) Helpful if you use more than one identity providers or SSO protocols.
                            Helpful if you use more than one identity providers or SSO protocols.
                          type: string
                        nameAttributePath:
                          description: |-
                            (String) JMESPath expression to use for user name lookup from the user ID token. This name will be used as the user’s display name. Only applicable to Generic OAuth.
                            JMESPath expression to use for user name lookup from the user ID token. This name will be used as the user’s display name. Only applicable to Generic OAuth.
                          type: string
                        roleAttributePath:
                          description: |-
                            (String) JMESPath expression to use for Grafana role lookup.
                            JMESPath expression to use for Grafana role lookup.
                          type: string
                        roleAttributeStrict:
                          description: |-
                            (Boolean) If enabled, denies user login if the Grafana role cannot be extracted using Role attribute path.
                            If enabled, denies user login if the Grafana role cannot be extracted using Role attribute path.
                          type: boolean
                        scopes:
                          description: |-
                            or space-separated OAuth2 scopes.
                            List of comma- or space-separated OAuth2 scopes.
                          type: string
                        signoutRedirectUrl:
                          description: |-
                            (String) The URL to redirect the user to after signing out from Grafana.
                            The URL to redirect the user to after signing out from Grafana.
                          type: string
                        skipOrgRoleSync:
                          description: |-
                            (Boolean) Prevent synchronizing users’ organization roles from your IdP.
                            Prevent synchronizing users’ organization roles from your IdP.
                          type: boolean
                        teamIds:
                          description: |-
                            (String) String list of Team Ids. If set, the user must be a member of one of the given teams to log in. If you configure team_ids, you must also configure teams_url and team_ids_attribute_path.
                            String list of Team Ids. If set, the user must be a member of one of the given teams to log in. If you configure team_ids, you must also configure teams_url and team_ids_attribute_path.
                          type: string
                        teamIdsAttributePath:
                          description: |-
                            (String) The JMESPath expression to use for Grafana Team Id lookup within the results returned by the teams_url endpoint. Only applicable to Generic OAuth.
                            The JMESPath expression to use for Grafana Team Id lookup within the results returned by the teams_url endpoint. Only applicable to Generic OAuth.
                          type: string
                        teamsUrl:
                          description: |-
                            (String) The URL used to query for Team Ids. If not set, the default value is /teams. If you configure teams_url, you must also configure team_ids_attribute_path. Only applicable to Generic OAuth.
                            The URL used to query for Team Ids. If not set, the default value is /teams. If you configure teams_url, you must also configure team_ids_attribute_path. Only applicable to Generic OAuth.
                          type: string
                        tlsClientCa:
                          description: |-
                            (String) The path to the trusted certificate authority list. Is not applicable on Grafana Cloud.
                            The path to the trusted certificate authority list. Is not applicable on Grafana Cloud.
                          type: string
                        tlsClientCert:
                          description: |-
                            (String) The path to the certificate. Is not applicable on Grafana Cloud.
                            The path to the certificate. Is not applicable on Grafana Cloud.
                          type: string
                        tlsClientKey:
                          description: |-
                            (String) The path to the key. Is not applicable on Grafana Cloud.
                            The path to the key. Is not applicable on Grafana Cloud.
                          type: string
                        tlsSkipVerifyInsecure:
                          description: |-
                            in-the-middle attacks.
                            If enabled, the client accepts any certificate presented by the server and any host name in that certificate. You should only use this for testing, because this mode leaves SSL/TLS susceptible to man-in-the-middle attacks.
                          type: boolean
                        tokenUrl:
                          description: |-
                            (String) The token endpoint of your OAuth2 provider. Required for azuread, okta and generic_oauth providers.
                            The token endpoint of your OAuth2 provider. Required for azuread, okta and generic_oauth providers.
                          type: string
                        usePkce:
                          description: |-
                            (Boolean) If enabled, Grafana will use Proof Key for Code Exchange (PKCE) with the OAuth2 Authorization Code Grant.
                            If enabled, Grafana will use Proof Key for Code Exchange (PKCE) with the OAuth2 Authorization Code Grant.
                          type: boolean
                        useRefreshToken:
                          description: |-
                            (Boolean) If enabled, Grafana will fetch a new access token using the refresh token provided by the OAuth2 provider.
                            If enabled, Grafana will fetch a new access token using the refresh token provided by the OAuth2 provider.
                          type: boolean
                      type: object
                    type: array
                  providerName:
                    description: |-
                      (String) The name of the SSO provider. Supported values: github, gitlab, google, azuread, okta, generic_oauth, saml.
                      The name of the SSO provider. Supported values: github, gitlab, google, azuread, okta, generic_oauth, saml.
                    type: string
                  samlSettings:
                    description: |-
                      (Block Set, Max: 1) The SAML settings set. Required for the saml provider. (see below for nested schema)
                      The SAML settings set. Required for the saml provider.
                    items:
                      properties:
                        allowIdpInitiated:
                          description: |-
                            initiated login is allowed.
                            Whether SAML IdP-initiated login is allowed.
                          type: boolean
                        allowSignUp:
                          description: |-
                            (Boolean) If not enabled, only existing Grafana users can log in using OAuth.
                            Whether to allow new Grafana user creation through SAML login. If set to false, then only existing Grafana users can log in with SAML.
                          type: boolean
                        allowedOrganizations:
                          description: |-
                            or space-separated organizations. The user should be a member of at least one organization to log in.
                            List of comma- or space-separated organizations. User should be a member of at least one organization to log in.
                          type: string
                        assertionAttributeEmail:
                          description: |-
                            (String) Friendly name or name of the attribute within the SAML assertion to use as the user email.
                            Friendly name or name of the attribute within the SAML assertion to use as the user email.
                          type: string
                        assertionAttributeGroups:
                          description: |-
                            (String) Friendly name or name of the attribute within the SAML assertion to use as the user groups.
                            Friendly name or name of the attribute within the SAML assertion to use as the user groups.
                          type: string
                        assertionAttributeLogin:
                          description: |-
                            (String) Friendly name or name of the attribute within the SAML assertion to use as the user login handle.
                            Friendly name or name of the attribute within the SAML assertion to use as the user login handle.
                          type: string
                        assertionAttributeName:
                          description: |-
                            (String) Friendly name or name of the attribute within the SAML assertion to use as the user name. Alternatively, this can be a template with variables that match the names of attributes within the SAML assertion.
                            Friendly name or name of the attribute within the SAML assertion to use as the user name. Alternatively, this can be a template with variables that match the names of attributes within the SAML assertion.
                          type: string
                        assertionAttributeOrg:
                          description: |-
                            (String) Friendly name or name of the attribute within the SAML assertion to use as the user organization.
                            Friendly name or name of the attribute within the SAML assertion to use as the user organization.
                          type: string
                        assertionAttributeRole:
                          description: |-
                            (String) Friendly name or name of the attribute within the SAML assertion to use as the user roles.
                            Friendly name or name of the attribute within the SAML assertion to use as the user roles.
                          type: string
                        autoLogin:
                          description: |-
                            (Boolean) Log in automatically, skipping the login screen.
                            Whether SAML auto login is enabled.
                          type: boolean
                        certificatePath:
                          description: |-
                            (String) Path for the SP X.509 certificate.
                            Path for the SP X.509 certificate.
                          type: string
                        certificateSecretRef:
                          description: |-
                            encoded string for the SP X.509 certificate.
                            Base64-encoded string for the SP X.509 certificate.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        enabled:
                          description: |-
                            (Boolean) Define whether this configuration is enabled for the specified provider. Defaults to true.
                            Define whether this configuration is enabled for SAML. Defaults to `true`.
                          type: boolean
                        idpMetadata:
                          description: |-
                            encoded string for the IdP SAML metadata XML.
                            Base64-encoded string for the IdP SAML metadata XML.
                          type: string
                        idpMetadataPath:
                          description: |-
                            (String) Path for the IdP SAML metadata XML.
                            Path for the IdP SAML metadata XML.
                          type: string
                        idpMetadataUrl:
                          description: |-
                            (String) URL for the IdP SAML metadata XML.
                            URL for the IdP SAML metadata XML.
                          type: string
                        maxIssueDelay:
                          description: |-
                            (String) Duration, since the IdP issued a response and the SP is allowed to process it. For example: 90s, 1h.
                            Duration, since the IdP issued a response and the SP is allowed to process it. For example: 90s, 1h.
                          type: string
                        metadataValidDuration:
                          description: |-
                            (String) Duration, for how long the SP metadata is valid. For example: 48h, 5d.
                            Duration, for how long the SP metadata is valid. For example: 48h, 5d.
                          type: string
                        name:
                          description: |-
                            (String) Helpful if you use more than one identity providers or SSO protocols.
                            Name used to refer to the SAML authentication.
                          type: string
                        nameIdFormat:
                          description: |-
                            format:transient
                            The Name ID Format to request within the SAML assertion. Defaults to urn:oasis:names:tc:SAML:2.0:nameid-format:transient
                          type: string
                        orgMapping:
                          description: |-
                            or space-separated Organization:OrgId:Role mappings. Organization can be * meaning “All users”. Role is optional and can have the following values: Viewer, Editor or Admin.
                            List of comma- or space-separated Organization:OrgId:Role mappings. Organization can be * meaning “All users”. Role is optional and can have the following values: Viewer, Editor or Admin.
                          type: string
                        privateKeyPath:
                          description: |-
                            (String) Path for the SP private key.
                            Path for the SP private key.
                          type: string
                        privateKeySecretRef:
                          description: |-
                            encoded string for the SP private key.
                            Base64-encoded string for the SP private key.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        relayState:
                          description: |-
                            initiated login. Should match relay state configured in IdP.
                            Relay state for IdP-initiated login. Should match relay state configured in IdP.
                          type: string
                        roleValuesAdmin:
                          description: |-
                            or space-separated roles which will be mapped into the Admin role.
                            List of comma- or space-separated roles which will be mapped into the Admin role.
                          type: string
                        roleValuesEditor:
                          description: |-
                            or space-separated roles which will be mapped into the Editor role.
                            List of comma- or space-separated roles which will be mapped into the Editor role.
                          type: string
                        roleValuesGrafanaAdmin:
                          description: |-
                            or space-separated roles which will be mapped into the Grafana Admin (Super Admin) role.
                            List of comma- or space-separated roles which will be mapped into the Grafana Admin (Super Admin) role.
                          type: string
                        roleValuesNone:
                          description: |-
                            or space-separated roles which will be mapped into the None role.
                            List of comma- or space-separated roles which will be mapped into the None role.
                          type: string
                        roleValuesViewer:
                          description: |-
                            or space-separated roles which will be mapped into the Viewer role.
                            List of comma- or space-separated roles which will be mapped into the Viewer role.
                          type: string
                        signatureAlgorithm:
                          description: |-
                            sha1, rsa-sha256, rsa-sha512.
                            Signature algorithm used for signing requests to the IdP. Supported values are rsa-sha1, rsa-sha256, rsa-sha512.
                          type: string
                        singleLogout:
                          description: |-
                            (Boolean) Whether SAML Single Logout is enabled.
                            Whether SAML Single Logout is enabled.
                          type: boolean
                        skipOrgRoleSync:
                          description: |-
                            (Boolean) Prevent synchronizing users’ organization roles from your IdP.
                            Prevent synchronizing users’ organization roles from your IdP.
                          type: boolean
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  oauth2Settings:
                    description: |-
                      (Block Set, Max: 1) The OAuth2 settings set. Required for github, gitlab, google, azuread, okta, generic_oauth providers. (see below for nested schema)
                      The OAuth2 settings set. Required for github, gitlab, google, azuread, okta, generic_oauth providers.
                    items:
                      properties:
                        allowAssignGrafanaAdmin:
                          description: |-
                            (Boolean) If enabled, it will automatically sync the Grafana server administrator role.
                            If enabled, it will automatically sync the Grafana server administrator role.
                          type: boolean
                        allowSignUp:
                          description: |-
                            (Boolean) If not enabled, only existing Grafana users can log in using OAuth.
                            If not enabled, only existing Grafana users can log in using OAuth.
                          type: boolean
                        allowedDomains:
                          description: |-
                            or space-separated domains. The user should belong to at least one domain to log in.
                            List of comma- or space-separated domains. The user should belong to at least one domain to log in.
                          type: string
                        allowedGroups:
                          description: |-
                            or space-separated groups. The user should be a member of at least one group to log in. For Generic OAuth, if you configure allowed_groups, you must also configure groups_attribute_path.
                            List of comma- or space-separated groups. The user should be a member of at least one group to log in. For Generic OAuth, if you configure allowed_groups, you must also configure groups_attribute_path.
                          type: string
                        allowedOrganizations:
                          description: |-
                            or space-separated organizations. The user should be a member of at least one organization to log in.
                            List of comma- or space-separated organizations. The user should be a member of at least one organization to log in.
                          type: string
                        apiUrl:
                          description: |-
                            (String) The user information endpoint of your OAuth2 provider. Required for okta and generic_oauth providers.
                            The user information endpoint of your OAuth2 provider. Required for okta and generic_oauth providers.
                          type: string
                        authStyle:
                          description: |-
                            (String) It determines how client_id and client_secret are sent to Oauth2 provider. Possible values are AutoDetect, InParams, InHeader. Default is AutoDetect.
                            It determines how client_id and client_secret are sent to Oauth2 provider. Possible values are AutoDetect, InParams, InHeader. Default is AutoDetect.
                          type: string
                        authUrl:
                          description: |-
                            (String) The authorization endpoint of your OAuth2 provider. Required for azuread, okta and generic_oauth providers.
                            The authorization endpoint of your OAuth2 provider. Required for azuread, okta and generic_oauth providers.
                          type: string
                        autoLogin:
                          description: |-
                            (Boolean) Log in automatically, skipping the login screen.
                            Log in automatically, skipping the login screen.
                          type: boolean
                        clientId:
                          description: |-
                            (String) The client Id of your OAuth2 app.
                            The client Id of your OAuth2 app.
                          type: string
                        clientSecretSecretRef:
                          description: |-
                            (String, Sensitive) The client secret of your OAuth2 app.
                            The client secret of your OAuth2 app.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        custom:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) Custom fields to configure for OAuth2 such as the force_use_graph_api field.
                            Custom fields to configure for OAuth2 such as the [force_use_graph_api](https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-authentication/azuread/#force-fetching-groups-from-microsoft-graph-api) field.
                          type: object
                          x-kubernetes-map-type: granular
                        defineAllowedGroups:
                          description: |-
                            (Boolean) Define allowed groups.
                            Define allowed groups.
                          type: boolean
                        defineAllowedTeamsIds:
                          description: |-
                            (Boolean) Define allowed teams ids.
                            Define allowed teams ids.
                          type: boolean
                        emailAttributeName:
                          description: |-
                            (String) Name of the key to use for user email lookup within the attributes map of OAuth2 ID token. Only applicable to Generic OAuth.
                            Name of the key to use for user email lookup within the attributes map of OAuth2 ID token. Only applicable to Generic OAuth.
                          type: string
                        emailAttributePath:
                          description: |-
                            (String) JMESPath expression to use for user email lookup from the user information. Only applicable to Generic OAuth.
                            JMESPath expression to use for user email lookup from the user information. Only applicable to Generic OAuth.
                          type: string
                        emptyScopes:
                          description: |-
                            (Boolean) If enabled, no scopes will be sent to the OAuth2 provider.
                            If enabled, no scopes will be sent to the OAuth2 provider.
                          type: boolean
                        enabled:
                          description: |-
                            (Boolean) Define whether this configuration is enabled for the specified provider. Defaults to true.
                            Define whether this configuration is enabled for the specified provider. Defaults to `true`.
                          type: boolean
                        groupsAttributePath:
                          description: |-
                            (String) JMESPath expression to use for user group lookup. If you configure allowed_groups, you must also configure groups_attribute_path.
                            JMESPath expression to use for user group lookup. If you configure allowed_groups, you must also configure groups_attribute_path.
                          type: string
                        idTokenAttributeName:
                          description: |-
                            (String) The name of the key used to extract the ID token from the returned OAuth2 token. Only applicable to Generic OAuth.
                            The name of the key used to extract the ID token from the returned OAuth2 token. Only applicable to Generic OAuth.
                          type: string
                        loginAttributePath:
                          description: |-
                            (String) JMESPath expression to use for user login lookup from the user ID token. Only applicable to Generic OAuth.
                            JMESPath expression to use for user login lookup from the user ID token. Only applicable to Generic OAuth.
                          type: string
                        name:
                          description: |-
                            (String) Helpful if you use more than one identity providers or SSO protocols.
                            Helpful if you use more than one identity providers or SSO protocols.
                          type: string
                        nameAttributePath:
                          description: |-
                            (String) JMESPath expression to use for user name lookup from the user ID token. This name will be used as the user’s display name. Only applicable to Generic OAuth.
                            JMESPath expression to use for user name lookup from the user ID token. This name will be used as the user’s display name. Only applicable to Generic OAuth.
                          type: string
                        roleAttributePath:
                          description: |-
                            (String) JMESPath expression to use for Grafana role lookup.
                            JMESPath expression to use for Grafana role lookup.
                          type: string
                        roleAttributeStrict:
                          description: |-
                            (Boolean) If enabled, denies user login if the Grafana role cannot be extracted using Role attribute path.
                            If enabled, denies user login if the Grafana role cannot be extracted using Role attribute path.
                          type: boolean
                        scopes:
                          description: |-
                            or space-separated OAuth2 scopes.
                            List of comma- or space-separated OAuth2 scopes.
                          type: string
                        signoutRedirectUrl:
                          description: |-
                            (String) The URL to redirect the user to after signing out from Grafana.
                            The URL to redirect the user to after signing out from Grafana.
                          type: string
                        skipOrgRoleSync:
                          description: |-
                            (Boolean) Prevent synchronizing users’ organization roles from your IdP.
                            Prevent synchronizing users’ organization roles from your IdP.
                          type: boolean
                        teamIds:
                          description: |-
                            (String) String list of Team Ids. If set, the user must be a member of one of the given teams to log in. If you configure team_ids, you must also configure teams_url and team_ids_attribute_path.
                            String list of Team Ids. If set, the user must be a member of one of the given teams to log in. If you configure team_ids, you must also configure teams_url and team_ids_attribute_path.
                          type: string
                        teamIdsAttributePath:
                          description: |-
                            (String) The JMESPath expression to use for Grafana Team Id lookup within the results returned by the teams_url endpoint. Only applicable to Generic OAuth.
                            The JMESPath expression to use for Grafana Team Id lookup within the results returned by the teams_url endpoint. Only applicable to Generic OAuth.
                          type: string
                        teamsUrl:
                          description: |-
                            (String) The URL used to query for Team Ids. If not set, the default value is /teams. If you configure teams_url, you must also configure team_ids_attribute_path. Only applicable to Generic OAuth.
                            The URL used to query for Team Ids. If not set, the default value is /teams. If you configure teams_url, you must also configure team_ids_attribute_path. Only applicable to Generic OAuth.
                          type: string
                        tlsClientCa:
                          description: |-
                            (String) The path to the trusted certificate authority list. Is not applicable on Grafana Cloud.
                            The path to the trusted certificate authority list. Is not applicable on Grafana Cloud.
                          type: string
                        tlsClientCert:
                          description: |-
                            (String) The path to the certificate. Is not applicable on Grafana Cloud.
                            The path to the certificate. Is not applicable on Grafana Cloud.
                          type: string
                        tlsClientKey:
                          description: |-
                            (String) The path to the key. Is not applicable on Grafana Cloud.
                            The path to the key. Is not applicable on Grafana Cloud.
                          type: string
                        tlsSkipVerifyInsecure:
                          description: |-
                            in-the-middle attacks.
                            If enabled, the client accepts any certificate presented by the server and any host name in that certificate. You should only use this for testing, because this mode leaves SSL/TLS susceptible to man-in-the-middle attacks.
                          type: boolean
                        tokenUrl:
                          description: |-
                            (String) The token endpoint of your OAuth2 provider. Required for azuread, okta and generic_oauth providers.
                            The token endpoint of your OAuth2 provider. Required for azuread, okta and generic_oauth providers.
                          type: string
                        usePkce:
                          description: |-
                            (Boolean) If enabled, Grafana will use Proof Key for Code Exchange (PKCE) with the OAuth2 Authorization Code Grant.
                            If enabled, Grafana will use Proof Key for Code Exchange (PKCE) with the OAuth2 Authorization Code Grant.
                          type: boolean
                        useRefreshToken:
                          description: |-
                            (Boolean) If enabled, Grafana will fetch a new access token using the refresh token provided by the OAuth2 provider.
                            If enabled, Grafana will fetch a new access token using the refresh token provided by the OAuth2 provider.
                          type: boolean
                      type: object
                    type: array
                  providerName:
                    description: |-
                      (String) The name of the SSO provider. Supported values: github, gitlab, google, azuread, okta, generic_oauth, saml.
                      The name of the SSO provider. Supported values: github, gitlab, google, azuread, okta, generic_oauth, saml.
                    type: string
                  samlSettings:
                    description: |-
                      (Block Set, Max: 1) The SAML settings set. Required for the saml provider. (see below for nested schema)
                      The SAML settings set. Required for the saml provider.
                    items:
                      properties:
                        allowIdpInitiated:
                          description: |-
                            initiated login is allowed.
                            Whether SAML IdP-initiated login is allowed.
                          type: boolean
                        allowSignUp:
                          description: |-
                            (Boolean) If not enabled, only existing Grafana users can log in using OAuth.
                            Whether to allow new Grafana user creation through SAML login. If set to false, then only existing Grafana users can log in with SAML.
                          type: boolean
                        allowedOrganizations:
                          description: |-
                            or space-separated organizations. The user should be a member of at least one organization to log in.
                            List of comma- or space-separated organizations. User should be a member of at least one organization to log in.
                          type: string
                        assertionAttributeEmail:
                          description: |-
                            (String) Friendly name or name of the attribute within the SAML assertion to use as the user email.
                            Friendly name or name of the attribute within the SAML assertion to use as the user email.
                          type: string
                        assertionAttributeGroups:
                          description: |-
                            (String) Friendly name or name of the attribute within the SAML assertion to use as the user groups.
                            Friendly name or name of the attribute within the SAML assertion to use as the user groups.
                          type: string
                        assertionAttributeLogin:
                          description: |-
                            (String) Friendly name or name of the attribute within the SAML assertion to use as the user login handle.
                            Friendly name or name of the attribute within the SAML assertion to use as the user login handle.
                          type: string
                        assertionAttributeName:
                          description: |-
                            (String) Friendly name or name of the attribute within the SAML assertion to use as the user name. Alternatively, this can be a template with variables that match the names of attributes within the SAML assertion.
                            Friendly name or name of the attribute within the SAML assertion to use as the user name. Alternatively, this can be a template with variables that match the names of attributes within the SAML assertion.
                          type: string
                        assertionAttributeOrg:
                          description: |-
                            (String) Friendly name or name of the attribute within the SAML assertion to use as the user organization.
                            Friendly name or name of the attribute within the SAML assertion to use as the user organization.
                          type: string
                        assertionAttributeRole:
                          description: |-
                            (String) Friendly name or name of the attribute within the SAML assertion to use as the user roles.
                            Friendly name or name of the attribute within the SAML assertion to use as the user roles.
                          type: string
                        autoLogin:
                          description: |-
                            (Boolean) Log in automatically, skipping the login screen.
                            Whether SAML auto login is enabled.
                          type: boolean
                        certificatePath:
                          description: |-
                            (String) Path for the SP X.509 certificate.
                            Path for the SP X.509 certificate.
                          type: string
                        certificateSecretRef:
                          description: |-
                            encoded string for the SP X.509 certificate.
                            Base64-encoded string for the SP X.509 certificate.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        enabled:
                          description: |-
                            (Boolean) Define whether this configuration is enabled for the specified provider. Defaults to true.
                            Define whether this configuration is enabled for SAML. Defaults to `true`.
                          type: boolean
                        idpMetadata:
                          description: |-
                            encoded string for the IdP SAML metadata XML.
                            Base64-encoded string for the IdP SAML metadata XML.
                          type: string
                        idpMetadataPath:
                          description: |-
                            (String) Path for the IdP SAML metadata XML.
                            Path for the IdP SAML metadata XML.
                          type: string
                        idpMetadataUrl:
                          description: |-
                            (String) URL for the IdP SAML metadata XML.
                            URL for the IdP SAML metadata XML.
                          type: string
                        maxIssueDelay:
                          description: |-
                            (String) Duration, since the IdP issued a response and the SP is allowed to process it. For example: 90s, 1h.
                            Duration, since the IdP issued a response and the SP is allowed to process it. For example: 90s, 1h.
                          type: string
                        metadataValidDuration:
                          description: |-
                            (String) Duration, for how long the SP metadata is valid. For example: 48h, 5d.
                            Duration, for how long the SP metadata is valid. For example: 48h, 5d.
                          type: string
                        name:
                          description: |-
                            (String) Helpful if you use more than one identity providers or SSO protocols.
                            Name used to refer to the SAML authentication.
                          type: string
                        nameIdFormat:
                          description: |-
                            format:transient
                            The Name ID Format to request within the SAML assertion. Defaults to urn:oasis:names:tc:SAML:2.0:nameid-format:transient
                          type: string
                        orgMapping:
                          description: |-
                            or space-separated Organization:OrgId:Role mappings. Organization can be * meaning “All users”. Role is optional and can have the following values: Viewer, Editor or Admin.
                            List of comma- or space-separated Organization:OrgId:Role mappings. Organization can be * meaning “All users”. Role is optional and can have the following values: Viewer, Editor or Admin.
                          type: string
                        privateKeyPath:
                          description: |-
                            (String) Path for the SP private key.
                            Path for the SP private key.
                          type: string
                        privateKeySecretRef:
                          description: |-
                            encoded string for the SP private key.
                            Base64-encoded string for the SP private key.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        relayState:
                          description: |-
                            initiated login. Should match relay state configured in IdP.
                            Relay state for IdP-initiated login. Should match relay state configured in IdP.
                          type: string
                        roleValuesAdmin:
                          description: |-
                            or space-separated roles which will be mapped into the Admin role.
                            List of comma- or space-separated roles which will be mapped into the Admin role.
                          type: string
                        roleValuesEditor:
                          description: |-
                            or space-separated roles which will be mapped into the Editor role.
                            List of comma- or space-separated roles which will be mapped into the Editor role.
                          type: string
                        roleValuesGrafanaAdmin:
                          description: |-
                            or space-separated roles which will be mapped into the Grafana Admin (Super Admin) role.
                            List of comma- or space-separated roles which will be mapped into the Grafana Admin (Super Admin) role.
                          type: string
                        roleValuesNone:
                          description: |-
                            or space-separated roles which will be mapped into the None role.
                            List of comma- or space-separated roles which will be mapped into the None role.
                          type: string
                        roleValuesViewer:
                          description: |-
                            or space-separated roles which will be mapped into the Viewer role.
                            List of comma- or space-separated roles which will be mapped into the Viewer role.
                          type: string
                        signatureAlgorithm:
                          description: |-
                            sha1, rsa-sha256, rsa-sha512.
                            Signature algorithm used for signing requests to the IdP. Supported values are rsa-sha1, rsa-sha256, rsa-sha512.
                          type: string
                        singleLogout:
                          description: |-
                            (Boolean) Whether SAML Single Logout is enabled.
                            Whether SAML Single Logout is enabled.
                          type: boolean
                        skipOrgRoleSync:
                          description: |-
                            (Boolean) Prevent synchronizing users’ organization roles from your IdP.
                            Prevent synchronizing users’ organization roles from your IdP.
                          type: boolean
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.providerName is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.providerName)
                || (has(self.initProvider) && has(self.initProvider.providerName))'
          status:
            description: SsoSettingsStatus defines the observed state of SsoSettings.
            properties:
              atProvider:
                properties:
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  oauth2Settings:
                    description: |-
                      (Block Set, Max: 1) The OAuth2 settings set. Required for github, gitlab, google, azuread, okta, generic_oauth providers. (see below for nested schema)
                      The OAuth2 settings set. Required for github, gitlab, google, azuread, okta, generic_oauth providers.
                    items:
                      properties:
                        allowAssignGrafanaAdmin:
                          description: |-
                            (Boolean) If enabled, it will automatically sync the Grafana server administrator role.
                            If enabled, it will automatically sync the Grafana server administrator role.
                          type: boolean
                        allowSignUp:
                          description: |-
                            (Boolean) If not enabled, only existing Grafana users can log in using OAuth.
                            If not enabled, only existing Grafana users can log in using OAuth.
                          type: boolean
                        allowedDomains:
                          description: |-
                            or space-separated domains. The user should belong to at least one domain to log in.
                            List of comma- or space-separated domains. The user should belong to at least one domain to log in.
                          type: string
                        allowedGroups:
                          description: |-
                            or space-separated groups. The user should be a member of at least one group to log in. For Generic OAuth, if you configure allowed_groups, you must also configure groups_attribute_path.
                            List of comma- or space-separated groups. The user should be a member of at least one group to log in. For Generic OAuth, if you configure allowed_groups, you must also configure groups_attribute_path.
                          type: string
                        allowedOrganizations:
                          description: |-
                            or space-separated organizations. The user should be a member of at least one organization to log in.
                            List of comma- or space-separated organizations. The user should be a member of at least one organization to log in.
                          type: string
                        apiUrl:
                          description: |-
                            (String) The user information endpoint of your OAuth2 provider. Required for okta and generic_oauth providers.
                            The user information endpoint of your OAuth2 provider. Required for okta and generic_oauth providers.
                          type: string
                        authStyle:
                          description: |-
                            (String) It determines how client_id and client_secret are sent to Oauth2 provider. Possible values are AutoDetect, InParams, InHeader. Default is AutoDetect.
                            It determines how client_id and client_secret are sent to Oauth2 provider. Possible values are AutoDetect, InParams, InHeader. Default is AutoDetect.
                          type: string
                        authUrl:
                          description: |-
                            (String) The authorization endpoint of your OAuth2 provider. Required for azuread, okta and generic_oauth providers.
                            The authorization endpoint of your OAuth2 provider. Required for azuread, okta and generic_oauth providers.
                          type: string
                        autoLogin:
                          description: |-
                            (Boolean) Log in automatically, skipping the login screen.
                            Log in automatically, skipping the login screen.
                          type: boolean
                        clientId:
                          description: |-
                            (String) The client Id of your OAuth2 app.
                            The client Id of your OAuth2 app.
                          type: string
                        custom:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) Custom fields to configure for OAuth2 such as the force_use_graph_api field.
                            Custom fields to configure for OAuth2 such as the [force_use_graph_api](https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-authentication/azuread/#force-fetching-groups-from-microsoft-graph-api) field.
                          type: object
                          x-kubernetes-map-type: granular
                        defineAllowedGroups:
                          description: |-
                            (Boolean) Define allowed groups.
                            Define allowed groups.
                          type: boolean
                        defineAllowedTeamsIds:
                          description: |-
                            (Boolean) Define allowed teams ids.
                            Define allowed teams ids.
                          type: boolean
                        emailAttributeName:
                          description: |-
                            (String) Name of the key to use for user email lookup within the attributes map of OAuth2 ID token. Only applicable to Generic OAuth.
                            Name of the key to use for user email lookup within the attributes map of OAuth2 ID token. Only applicable to Generic OAuth.
                          type: string
                        emailAttributePath:
                          description: |-
                            (String) JMESPath expression to use for user email lookup from the user information. Only applicable to Generic OAuth.
                            JMESPath expression to use for user email lookup from the user information. Only applicable to Generic OAuth.
                          type: string
                        emptyScopes:
                          description: |-
                            (Boolean) If enabled, no scopes will be sent to the OAuth2 provider.
                            If enabled, no scopes will be sent to the OAuth2 provider.
                          type: boolean
                        enabled:
                          description: |-
                            (Boolean) Define whether this configuration is enabled for the specified provider. Defaults to true.
                            Define whether this configuration is enabled for the specified provider. Defaults to `true`.
                          type: boolean
                        groupsAttributePath:
                          description: |-
                            (String) JMESPath expression to use for user group lookup. If you configure allowed_groups, you must also configure groups_attribute_path.
                            JMESPath expression to use for user group lookup. If you configure allowed_groups, you must also configure groups_attribute_path.
                          type: string
                        idTokenAttributeName:
                          description: |-
                            (String) The name of the key used to extract the ID token from the returned OAuth2 token. Only applicable to Generic OAuth.
                            The name of the key used to extract the ID token from the returned OAuth2 token. Only applicable to Generic OAuth.
                          type: string
                        loginAttributePath:
                          description: |-
                            (String) JMESPath expression to use for user login lookup from the user ID token. Only applicable to Generic OAuth.
                            JMESPath expression to use for user login lookup from the user ID token. Only applicable to Generic OAuth.
                          type: string
                        name:
                          description: |-
                            (String) Helpful if you use more than one identity providers or SSO protocols.
                            Helpful if you use more than one identity providers or SSO protocols.
                          type: string
                        nameAttributePath:
                          description: |-
                            (String) JMESPath expression to use for user name lookup from the user ID token. This name will be used as the user’s display name. Only applicable to Generic OAuth.
                            JMESPath expression to use for user name lookup from the user ID token. This name will be used as the user’s display name. Only applicable to Generic OAuth.
                          type: string
                        roleAttributePath:
                          description: |-
                            (String) JMESPath expression to use for Grafana role lookup.
                            JMESPath expression to use for Grafana role lookup.
                          type: string
                        roleAttributeStrict:
                          description: |-
                            (Boolean) If enabled, denies user login if the Grafana role cannot be extracted using Role attribute path.
                            If enabled, denies user login if the Grafana role cannot be extracted using Role attribute path.
                          type: boolean
                        scopes:
                          description: |-
                            or space-separated OAuth2 scopes.
                            List of comma- or space-separated OAuth2 scopes.
                          type: string
                        signoutRedirectUrl:
                          description: |-
                            (String) The URL to redirect the user to after signing out from Grafana.
                            The URL to redirect the user to after signing out from Grafana.
                          type: string
                        skipOrgRoleSync:
                          description: |-
                            (Boolean) Prevent synchronizing users’ organization roles from your IdP.
                            Prevent synchronizing users’ organization roles from your IdP.
                          type: boolean
                        teamIds:
                          description: |-
                            (String) String list of Team Ids. If set, the user must be a member of one of the given teams to log in. If you configure team_ids, you must also configure teams_url and team_ids_attribute_path.
                            String list of Team Ids. If set, the user must be a member of one of the given teams to log in. If you configure team_ids, you must also configure teams_url and team_ids_attribute_path.
                          type: string
                        teamIdsAttributePath:
                          description: |-
                            (String) The JMESPath expression to use for Grafana Team Id lookup within the results returned by the teams_url endpoint. Only applicable to Generic OAuth.
                            The JMESPath expression to use for Grafana Team Id lookup within the results returned by the teams_url endpoint. Only applicable to Generic OAuth.
                          type: string
                        teamsUrl:
                          description: |-
                            (String) The URL used to query for Team Ids. If not set, the default value is /teams. If you configure teams_url, you must also configure team_ids_attribute_path. Only applicable to Generic OAuth.
                            The URL used to query for Team Ids. If not set, the default value is /teams. If you configure teams_url, you must also configure team_ids_attribute_path. Only applicable to Generic OAuth.
                          type: string
                        tlsClientCa:
                          description: |-
                            (String) The path to the trusted certificate authority list. Is not applicable on Grafana Cloud.
                            The path to the trusted certificate authority list. Is not applicable on Grafana Cloud.
                          type: string
                        tlsClientCert:
                          description: |-
                            (String) The path to the certificate. Is not applicable on Grafana Cloud.
                            The path to the certificate. Is not applicable on Grafana Cloud.
                          type: string
                        tlsClientKey:
                          description: |-
                            (String) The path to the key. Is not applicable on Grafana Cloud.
                            The path to the key. Is not applicable on Grafana Cloud.
                          type: string
                        tlsSkipVerifyInsecure:
                          description: |-
                            in-the-middle attacks.
                            If enabled, the client accepts any certificate presented by the server and any host name in that certificate. You should only use this for testing, because this mode leaves SSL/TLS susceptible to man-in-the-middle attacks.
                          type: boolean
                        tokenUrl:
                          description: |-
                            (String) The token endpoint of your OAuth2 provider. Required for azuread, okta and generic_oauth providers.
                            The token endpoint of your OAuth2 provider. Required for azuread, okta and generic_oauth providers.
                          type: string
                        usePkce:
                          description: |-
                            (Boolean) If enabled, Grafana will use Proof Key for Code Exchange (PKCE) with the OAuth2 Authorization Code Grant.
                            If enabled, Grafana will use Proof Key for Code Exchange (PKCE) with the OAuth2 Authorization Code Grant.
                          type: boolean
                        useRefreshToken:
                          description: |-
                            (Boolean) If enabled, Grafana will fetch a new access token using the refresh token provided by the OAuth2 provider.
                            If enabled, Grafana will fetch a new access token using the refresh token provided by the OAuth2 provider.
                          type: boolean
                      type: object
                    type: array
                  providerName:
                    description: |-
                      (String) The name of the SSO provider. Supported values: github, gitlab, google, azuread, okta, generic_oauth, saml.
                      The name of the SSO provider. Supported values: github, gitlab, google, azuread, okta, generic_oauth, saml.
                    type: string
                  samlSettings:
                    description: |-
                      (Block Set, Max: 1) The SAML settings set. Required for the saml provider. (see below for nested schema)
                      The SAML settings set. Required for the saml provider.
                    items:
                      properties:
                        allowIdpInitiated:
                          description: |-
                            initiated login is allowed.
                            Whether SAML IdP-initiated login is allowed.
                          type: boolean
                        allowSignUp:
                          description: |-
                            (Boolean) If not enabled, only existing Grafana users can log in using OAuth.
                            Whether to allow new Grafana user creation through SAML login. If set to false, then only existing Grafana users can log in with SAML.
                          type: boolean
                        allowedOrganizations:
                          description: |-
                            or space-separated organizations. The user should be a member of at least one organization to log in.
                            List of comma- or space-separated organizations. User should be a member of at least one organization to log in.
                          type: string
                        assertionAttributeEmail:
                          description: |-
                            (String) Friendly name or name of the attribute within the SAML assertion to use as the user email.
                            Friendly name or name of the attribute within the SAML assertion to use as the user email.
                          type: string
                        assertionAttributeGroups:
                          description: |-
                            (String) Friendly name or name of the attribute within the SAML assertion to use as the user groups.
                            Friendly name or name of the attribute within the SAML assertion to use as the user groups.
                          type: string
                        assertionAttributeLogin:
                          description: |-
                            (String) Friendly name or name of the attribute within the SAML assertion to use as the user login handle.
                            Friendly name or name of the attribute within the SAML assertion to use as the user login handle.
                          type: string
                        assertionAttributeName:
                          description: |-
                            (String) Friendly name or name of the attribute within the SAML assertion to use as the user name. Alternatively, this can be a template with variables that match the names of attributes within the SAML assertion.
                            Friendly name or name of the attribute within the SAML assertion to use as the user name. Alternatively, this can be a template with variables that match the names of attributes within the SAML assertion.
                          type: string
                        assertionAttributeOrg:
                          description: |-
                            (String) Friendly name or name of the attribute within the SAML assertion to use as the user organization.
                            Friendly name or name of the attribute within the SAML assertion to use as the user organization.
                          type: string
                        assertionAttributeRole:
                          description: |-
                            (String) Friendly name or name of the attribute within the SAML assertion to use as the user roles.
                            Friendly name or name of the attribute within the SAML assertion to use as the user roles.
                          type: string
                        autoLogin:
                          description: |-
                            (Boolean) Log in automatically, skipping the login screen.
                            Whether SAML auto login is enabled.
                          type: boolean
                        certificatePath:
                          description: |-
                            (String) Path for the SP X.509 certificate.
                            Path for the SP X.509 certificate.
                          type: string
                        enabled:
                          description: |-
                            (Boolean) Define whether this configuration is enabled for the specified provider. Defaults to true.
                            Define whether this configuration is enabled for SAML. Defaults to `true`.
                          type: boolean
                        idpMetadata:
                          description: |-
                            encoded string for the IdP SAML metadata XML.
                            Base64-encoded string for the IdP SAML metadata XML.
                          type: string
                        idpMetadataPath:
                          description: |-
                            (String) Path for the IdP SAML metadata XML.
                            Path for the IdP SAML metadata XML.
                          type: string
                        idpMetadataUrl:
                          description: |-
                            (String) URL for the IdP SAML metadata XML.
                            URL for the IdP SAML metadata XML.
                          type: string
                        maxIssueDelay:
                          description: |-
                            (String) Duration, since the IdP issued a response and the SP is allowed to process it. For example: 90s, 1h.
                            Duration, since the IdP issued a response and the SP is allowed to process it. For example: 90s, 1h.
                          type: string
                        metadataValidDuration:
                          description: |-
                            (String) Duration, for how long the SP metadata is valid. For example: 48h, 5d.
                            Duration, for how long the SP metadata is valid. For example: 48h, 5d.
                          type: string
                        name:
                          description: |-
                            (String) Helpful if you use more than one identity providers or SSO protocols.
                            Name used to refer to the SAML authentication.
                          type: string
                        nameIdFormat:
                          description: |-
                            format:transient
                            The Name ID Format to request within the SAML assertion. Defaults to urn:oasis:names:tc:SAML:2.0:nameid-format:transient
                          type: string
                        orgMapping:
                          description: |-
                            or space-separated Organization:OrgId:Role mappings. Organization can be * meaning “All users”. Role is optional and can have the following values: Viewer, Editor or Admin.
                            List of comma- or space-separated Organization:OrgId:Role mappings. Organization can be * meaning “All users”. Role is optional and can have the following values: Viewer, Editor or Admin.
                          type: string
                        privateKeyPath:
                          description: |-
                            (String) Path for the SP private key.
                            Path for the SP private key.
                          type: string
                        relayState:
                          description: |-
                            initiated login. Should match relay state configured in IdP.
                            Relay state for IdP-initiated login. Should match relay state configured in IdP.
                          type: string
                        roleValuesAdmin:
                          description: |-
                            or space-separated roles which will be mapped into the Admin role.
                            List of comma- or space-separated roles which will be mapped into the Admin role.
                          type: string
                        roleValuesEditor:
                          description: |-
                            or space-separated roles which will be mapped into the Editor role.
                            List of comma- or space-separated roles which will be mapped into the Editor role.
                          type: string
                        roleValuesGrafanaAdmin:
                          description: |-
                            or space-separated roles which will be mapped into the Grafana Admin (Super Admin) role.
                            List of comma- or space-separated roles which will be mapped into the Grafana Admin (Super Admin) role.
                          type: string
                        roleValuesNone:
                          description: |-
                            or space-separated roles which will be mapped into the None role.
                            List of comma- or space-separated roles which will be mapped into the None role.
                          type: string
                        roleValuesViewer:
                          description: |-
                            or space-separated roles which will be mapped into the Viewer role.
                            List of comma- or space-separated roles which will be mapped into the Viewer role.
                          type: string
                        signatureAlgorithm:
                          description: |-
                            sha1, rsa-sha256, rsa-sha512.
                            Signature algorithm used for signing requests to the IdP. Supported values are rsa-sha1, rsa-sha256, rsa-sha512.
                          type: string
                        singleLogout:
                          description: |-
                            (Boolean) Whether SAML Single Logout is enabled.
                            Whether SAML Single Logout is enabled.
                          type: boolean
                        skipOrgRoleSync:
                          description: |-
                            (Boolean) Prevent synchronizing users’ organization roles from your IdP.
                            Prevent synchronizing users’ organization roles from your IdP.
                          type: boolean
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: teams.oss.grafana.crossplane.io
spec:
  group: oss.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: Team
    listKind: TeamList
    plural: teams
    singular: team
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Team is the Schema for the Teams API. Official documentation
          https://grafana.com/docs/grafana/latest/administration/team-management/HTTP
          API https://grafana.com/docs/grafana/latest/developers/http_api/team/
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TeamSpec defines the desired state of Team
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  email:
                    description: |-
                      (String) An email address for the team.
                      An email address for the team.
                    type: string
                  ignoreExternallySyncedMembers:
                    description: |-
                      (Boolean) Ignores team members that have been added to team by Team Sync.
                      Team Sync can be provisioned using grafana_team_external_group resource.
                      Defaults to true.
                      Ignores team members that have been added to team by [Team Sync](https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-team-sync/).
                      Team Sync can be provisioned using [grafana_team_external_group resource](https://registry.io/providers/grafana/grafana/latest/docs/resources/team_external_group).
                      Defaults to `true`.
                    type: boolean
                  memberRefs:
                    description: References to User in oss to populate members.
                    items:
                      description: A Reference to a named object.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: |-
                                Resolution specifies whether resolution of this reference is required.
                                The default is 'Required', which means the reconcile will fail if the
                                reference cannot be resolved. 'Optional' means this reference will be
                                a no-op if it cannot be resolved.
                              enum:
                              - Required
                              - Optional
                              type: string
                            resolve:
                              description: |-
                                Resolve specifies when this reference should be resolved. The default
                                is 'IfNotPresent', which will attempt to resolve the reference only when
                                the corresponding field is not present. Use 'Always' to resolve the
                                reference on every reconcile.
                              enum:
                              - Always
                              - IfNotPresent
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  memberSelector:
                    description: Selector for a list of User in oss to populate members.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  members:
                    description: |-
                      (Set of String) A set of email addresses corresponding to users who should be given membership
                      to the team. Note: users specified here must already exist in Grafana.
                      A set of email addresses corresponding to users who should be given membership
                      to the team. Note: users specified here must already exist in Grafana.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  name:
                    description: |-
                      (String) The display name for the Grafana team created.
                      The display name for the Grafana team created.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  preferences:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        homeDashboardUid:
                          description: |-
                            (String) The UID of the dashboard to display when a team member logs in. Defaults to “.
                            The UID of the dashboard to display when a team member logs in. Defaults to “.
                          type: string
                        theme:
                          description: |-
                            (String) The default theme for this team. Available themes are light, dark, system, or an empty string for the default theme. Defaults to “.
                            The default theme for this team. Available themes are `light`, `dark`, `system`, or an empty string for the default theme. Defaults to “.
                          type: string
                        timezone:
                          description: |-
                            (String) The default timezone for this team. Available values are utc, browser, or an empty string for the default. Defaults to “.
                            The default timezone for this team. Available values are `utc`, `browser`, or an empty string for the default. Defaults to “.
                          type: string
                        weekStart:
                          description: |-
                            (String) The default week start day for this team. Available values are sunday, monday, saturday, or an empty string for the default. Defaults to “.
                            The default week start day for this team. Available values are `sunday`, `monday`, `saturday`, or an empty string for the default. Defaults to “.
                          type: string
                      type: object
                    type: array
                  teamSync:
                    description: |-
                      (Block List, Max: 1) Sync external auth provider groups with this Grafana team. Only available in Grafana Enterprise.
                      Sync external auth provider groups with this Grafana team. Only available in Grafana Enterprise.
                      * [Official documentation](https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-team-sync/)
                      * [HTTP API](https://grafana.com/docs/grafana/latest/developers/http_api/team_sync/)
                    items:
                      properties:
                        groups:
                          description: (Set of String)
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  email:
                    description: |-
                      (String) An email address for the team.
                      An email address for the team.
                    type: string
                  ignoreExternallySyncedMembers:
                    description: |-
                      (Boolean) Ignores team members that have been added to team by Team Sync.
                      Team Sync can be provisioned using grafana_team_external_group resource.
                      Defaults to true.
                      Ignores team members that have been added to team by [Team Sync](https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-team-sync/).
                      Team Sync can be provisioned using [grafana_team_external_group resource](https://registry.io/providers/grafana/grafana/latest/docs/resources/team_external_group).
                      Defaults to `true`.
                    type: boolean
                  memberRefs:
                    description: References to User in oss to populate members.
                    items:
                      description: A Reference to a named object.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: |-
                                Resolution specifies whether resolution of this reference is required.
                                The default is 'Required', which means the reconcile will fail if the
                                reference cannot be resolved. 'Optional' means this reference will be
                                a no-op if it cannot be resolved.
                              enum:
                              - Required
                              - Optional
                              type: string
                            resolve:
                              description: |-
                                Resolve specifies when this reference should be resolved. The default
                                is 'IfNotPresent', which will attempt to resolve the reference only when
                                the corresponding field is not present. Use 'Always' to resolve the
                                reference on every reconcile.
                              enum:
                              - Always
                              - IfNotPresent
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  memberSelector:
                    description: Selector for a list of User in oss to populate members.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  members:
                    description: |-
                      (Set of String) A set of email addresses corresponding to users who should be given membership
                      to the team. Note: users specified here must already exist in Grafana.
                      A set of email addresses corresponding to users who should be given membership
                      to the team. Note: users specified here must already exist in Grafana.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  name:
                    description: |-
                      (String) The display name for the Grafana team created.
                      The display name for the Grafana team created.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  preferences:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        homeDashboardUid:
                          description: |-
                            (String) The UID of the dashboard to display when a team member logs in. Defaults to “.
                            The UID of the dashboard to display when a team member logs in. Defaults to “.
                          type: string
                        theme:
                          description: |-
                            (String) The default theme for this team. Available themes are light, dark, system, or an empty string for the default theme. Defaults to “.
                            The default theme for this team. Available themes are `light`, `dark`, `system`, or an empty string for the default theme. Defaults to “.
                          type: string
                        timezone:
                          description: |-
                            (String) The default timezone for this team. Available values are utc, browser, or an empty string for the default. Defaults to “.
                            The default timezone for this team. Available values are `utc`, `browser`, or an empty string for the default. Defaults to “.
                          type: string
                        weekStart:
                          description: |-
                            (String) The default week start day for this team. Available values are sunday, monday, saturday, or an empty string for the default. Defaults to “.
                            The default week start day for this team. Available values are `sunday`, `monday`, `saturday`, or an empty string for the default. Defaults to “.
                          type: string
                      type: object
                    type: array
                  teamSync:
                    description: |-
                      (Block List, Max: 1) Sync external auth provider groups with this Grafana team. Only available in Grafana Enterprise.
                      Sync external auth provider groups with this Grafana team. Only available in Grafana Enterprise.
                      * [Official documentation](https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-team-sync/)
                      * [HTTP API](https://grafana.com/docs/grafana/latest/developers/http_api/team_sync/)
                    items:
                      properties:
                        groups:
                          description: (Set of String)
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: TeamStatus defines the observed state of Team.
            properties:
              atProvider:
                properties:
                  email:
                    description: |-
                      (String) An email address for the team.
                      An email address for the team.
                    type: string
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  ignoreExternallySyncedMembers:
                    description: |-
                      (Boolean) Ignores team members that have been added to team by Team Sync.
                      Team Sync can be provisioned using grafana_team_external_group resource.
                      Defaults to true.
                      Ignores team members that have been added to team by [Team Sync](https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-team-sync/).
                      Team Sync can be provisioned using [grafana_team_external_group resource](https://registry.io/providers/grafana/grafana/latest/docs/resources/team_external_group).
                      Defaults to `true`.
                    type: boolean
                  members:
                    description: |-
                      (Set of String) A set of email addresses corresponding to users who should be given membership
                      to the team. Note: users specified here must already exist in Grafana.
                      A set of email addresses corresponding to users who should be given membership
                      to the team. Note: users specified here must already exist in Grafana.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  name:
                    description: |-
                      (String) The display name for the Grafana team created.
                      The display name for the Grafana team created.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  preferences:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        homeDashboardUid:
                          description: |-
                            (String) The UID of the dashboard to display when a team member logs in. Defaults to “.
                            The UID of the dashboard to display when a team member logs in. Defaults to “.
                          type: string
                        theme:
                          description: |-
                            (String) The default theme for this team. Available themes are light, dark, system, or an empty string for the default theme. Defaults to “.
                            The default theme for this team. Available themes are `light`, `dark`, `system`, or an empty string for the default theme. Defaults to “.
                          type: string
                        timezone:
                          description: |-
                            (String) The default timezone for this team. Available values are utc, browser, or an empty string for the default. Defaults to “.
                            The default timezone for this team. Available values are `utc`, `browser`, or an empty string for the default. Defaults to “.
                          type: string
                        weekStart:
                          description: |-
                            (String) The default week start day for this team. Available values are sunday, monday, saturday, or an empty string for the default. Defaults to “.
                            The default week start day for this team. Available values are `sunday`, `monday`, `saturday`, or an empty string for the default. Defaults to “.
                          type: string
                      type: object
                    type: array
                  teamId:
                    description: |-
                      (Number) The team id assigned to this team by Grafana.
                      The team id assigned to this team by Grafana.
                    type: number
                  teamSync:
                    description: |-
                      (Block List, Max: 1) Sync external auth provider groups with this Grafana team. Only available in Grafana Enterprise.
                      Sync external auth provider groups with this Grafana team. Only available in Grafana Enterprise.
                      * [Official documentation](https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-team-sync/)
                      * [HTTP API](https://grafana.com/docs/grafana/latest/developers/http_api/team_sync/)
                    items:
                      properties:
                        groups:
                          description: (Set of String)
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: users.oss.grafana.crossplane.io
spec:
  group: oss.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: User
    listKind: UserList
    plural: users
    singular: user
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: User is the Schema for the Users API. Official documentation
          https://grafana.com/docs/grafana/latest/administration/user-management/server-user-management/HTTP
          API https://grafana.com/docs/grafana/latest/developers/http_api/user/ This
          resource represents an instance-scoped resource and uses Grafana's admin
          APIs. It does not work with API tokens or service accounts which are org-scoped.
          You must use basic auth.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: UserSpec defines the desired state of User
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  email:
                    description: |-
                      (String) The email address of the Grafana user.
                      The email address of the Grafana user.
                    type: string
                  isAdmin:
                    description: |-
                      (Boolean) Whether to make user an admin. Defaults to false.
                      Whether to make user an admin. Defaults to `false`.
                    type: boolean
                  login:
                    description: |-
                      (String) The username for the Grafana user.
                      The username for the Grafana user.
                    type: string
                  name:
                    description: |-
                      (String) The display name for the Grafana user.
                      The display name for the Grafana user.
                    type: string
                  passwordSecretRef:
                    description: |-
                      (String, Sensitive) The password for the Grafana user.
                      The password for the Grafana user.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  email:
                    description: |-
                      (String) The email address of the Grafana user.
                      The email address of the Grafana user.
                    type: string
                  isAdmin:
                    description: |-
                      (Boolean) Whether to make user an admin. Defaults to false.
                      Whether to make user an admin. Defaults to `false`.
                    type: boolean
                  login:
                    description: |-
                      (String) The username for the Grafana user.
                      The username for the Grafana user.
                    type: string
                  name:
                    description: |-
                      (String) The display name for the Grafana user.
                      The display name for the Grafana user.
                    type: string
                  passwordSecretRef:
                    description: |-
                      (String, Sensitive) The password for the Grafana user.
                      The password for the Grafana user.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                required:
                - passwordSecretRef
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.email is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.email)
                || (has(self.initProvider) && has(self.initProvider.email))'
            - message: spec.forProvider.passwordSecretRef is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.passwordSecretRef)'
          status:
            description: UserStatus defines the observed state of User.
            properties:
              atProvider:
                properties:
                  email:
                    description: |-
                      (String) The email address of the Grafana user.
                      The email address of the Grafana user.
                    type: string
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  isAdmin:
                    description: |-
                      (Boolean) Whether to make user an admin. Defaults to false.
                      Whether to make user an admin. Defaults to `false`.
                    type: boolean
                  login:
                    description: |-
                      (String) The username for the Grafana user.
                      The username for the Grafana user.
                    type: string
                  name:
                    description: |-
                      (String) The display name for the Grafana user.
                      The display name for the Grafana user.
                    type: string
                  userId:
                    description: |-
                      (Number) The numerical ID of the Grafana user.
                      The numerical ID of the Grafana user.
                    type: number
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: slos.slo.grafana.crossplane.io
spec:
  group: slo.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: SLO
    listKind: SLOList
    plural: slos
    singular: slo
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SLO is the Schema for the SLOs API. Resource manages Grafana
          SLOs. Official documentation https://grafana.com/docs/grafana-cloud/alerting-and-irm/slo/API
          documentation https://grafana.com/docs/grafana-cloud/alerting-and-irm/slo/api/Additional
          Information On Alerting Rule Annotations and Labels https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/#templating/
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: SLOSpec defines the desired state of SLO
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  alerting:
                    description: |-
                      term error budget burn is very high, the
                      long-term error budget burn rate is high, or when the remaining
                      error budget is below a certain threshold. Annotations and Labels support templating. (see below for nested schema)
                      Configures the alerting rules that will be generated for each
                      time window associated with the SLO. Grafana SLOs can generate
                      alerts when the short-term error budget burn is very high, the
                      long-term error budget burn rate is high, or when the remaining
                      error budget is below a certain threshold. Annotations and Labels support templating.
                    items:
                      properties:
                        advancedOptions:
                          description: |-
                            (Block List, Max: 1) Advanced Options for Alert Rules (see below for nested schema)
                            Advanced Options for Alert Rules
                          items:
                            properties:
                              minFailures:
                                description: |-
                                  (Number) Minimum number of failed events to trigger an alert
                                  Minimum number of failed events to trigger an alert
                                type: number
                            type: object
                          type: array
                        annotation:
                          description: |-
                            (Block List) Annotations will be attached to all alerts generated by any of these rules. (see below for nested schema)
                            Annotations will be attached to all alerts generated by any of these rules.
                          items:
                            properties:
                              key:
                                description: (String)
                                type: string
                              value:
                                description: (Number) Value between 0 and 1. If the
                                  value of the query is above the objective, the SLO
                                  is met.
                                type: string
                            type: object
                          type: array
                        fastburn:
                          description: |-
                            (Block List, Max: 1) Alerting Rules generated for Fast Burn alerts (see below for nested schema)
                            Alerting Rules generated for Fast Burn alerts
                          items:
                            properties:
                              annotation:
                                description: |-
                                  (Block List) Annotations will be attached to all alerts generated by any of these rules. (see below for nested schema)
                                  Annotations to attach only to Fast Burn alerts.
                                items:
                                  properties:
                                    key:
                                      description: (String)
                                      type: string
                                    value:
                                      description: (Number) Value between 0 and 1.
                                        If the value of the query is above the objective,
                                        the SLO is met.
                                      type: string
                                  type: object
                                type: array
                              label:
                                description: |-
                                  "^[a-zA-Z_][a-zA-Z0-9_]*$" (see below for nested schema)
                                  Labels to attach only to Fast Burn alerts.
                                items:
                                  properties:
                                    key:
                                      description: (String)
                                      type: string
                                    value:
                                      description: (Number) Value between 0 and 1.
                                        If the value of the query is above the objective,
                                        the SLO is met.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        label:
                          description: |-
                            "^[a-zA-Z_][a-zA-Z0-9_]*$" (see below for nested schema)
                            Labels will be attached to all alerts generated by any of these rules.
                          items:
                            properties:
                              key:
                                description: (String)
                                type: string
                              value:
                                description: (Number) Value between 0 and 1. If the
                                  value of the query is above the objective, the SLO
                                  is met.
                                type: string
                            type: object
                          type: array
                        slowburn:
                          description: |-
                            (Block List, Max: 1) Alerting Rules generated for Slow Burn alerts (see below for nested schema)
                            Alerting Rules generated for Slow Burn alerts
                          items:
                            properties:
                              annotation:
                                description: |-
                                  (Block List) Annotations will be attached to all alerts generated by any of these rules. (see below for nested schema)
                                  Annotations to attach only to Slow Burn alerts.
                                items:
                                  properties:
                                    key:
                                      description: (String)
                                      type: string
                                    value:
                                      description: (Number) Value between 0 and 1.
                                        If the value of the query is above the objective,
                                        the SLO is met.
                                      type: string
                                  type: object
                                type: array
                              label:
                                description: |-
                                  "^[a-zA-Z_][a-zA-Z0-9_]*$" (see below for nested schema)
                                  Labels to attach only to Slow Burn alerts.
                                items:
                                  properties:
                                    key:
                                      description: (String)
                                      type: string
                                    value:
                                      description: (Number) Value between 0 and 1.
                                        If the value of the query is above the objective,
                                        the SLO is met.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  description:
                    description: |-
                      text field that can provide more context to an SLO.
                      Description is a free-text field that can provide more context to an SLO.
                    type: string
                  destinationDatasource:
                    description: |-
                      (Block List, Max: 1) Destination Datasource sets the datasource defined for an SLO (see below for nested schema)
                      Destination Datasource sets the datasource defined for an SLO
                    items:
                      properties:
                        ref:
                          description: Reference to a DataSource in oss to populate
                            uid.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        selector:
                          description: Selector for a DataSource in oss to populate
                            uid.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        uid:
                          description: |-
                            (String) UID for the Mimir Datasource
                            UID for the Mimir Datasource
                          type: string
                      type: object
                    type: array
                  folderUid:
                    description: |-
                      (String) UID for the SLO folder
                      UID for the SLO folder
                    type: string
                  label:
                    description: |-
                      "^[a-zA-Z_][a-zA-Z0-9_]*$" (see below for nested schema)
                      Additional labels that will be attached to all metrics generated from the query. These labels are useful for grouping SLOs in dashboard views that you create by hand. Labels must adhere to Prometheus label name schema - "^[a-zA-Z_][a-zA-Z0-9_]*$"
                    items:
                      properties:
                        key:
                          description: (String)
                          type: string
                        value:
                          description: (Number) Value between 0 and 1. If the value
                            of the query is above the objective, the SLO is met.
                          type: string
                      type: object
                    type: array
                  name:
                    description: |-
                      (String) Name should be a short description of your indicator. Consider names like "API Availability"
                      Name should be a short description of your indicator. Consider names like "API Availability"
                    type: string
                  objectives:
                    description: |-
                      (Block List, Min: 1) Over each rolling time window, the remaining error budget will be calculated, and separate alerts can be generated for each time window based on the SLO burn rate or remaining error budget. (see below for nested schema)
                      Over each rolling time window, the remaining error budget will be calculated, and separate alerts can be generated for each time window based on the SLO burn rate or remaining error budget.
                    items:
                      properties:
                        value:
                          description: |-
                            (Number) Value between 0 and 1. If the value of the query is above the objective, the SLO is met.
                            Value between 0 and 1. If the value of the query is above the objective, the SLO is met.
                          type: number
                        window:
                          description: |-
                            parsable time duration string like 24h, 60m. This is the time window the objective is measured over.
                            A Prometheus-parsable time duration string like 24h, 60m. This is the time window the objective is measured over.
                          type: string
                      type: object
                    type: array
                  query:
                    description: |-
                      (Block List, Min: 1) Query describes the indicator that will be measured against the objective. Freeform Query types are currently supported. (see below for nested schema)
                      Query describes the indicator that will be measured against the objective. Freeform Query types are currently supported.
                    items:
                      properties:
                        freeform:
                          description: '(Block List, Max: 1) (see below for nested
                            schema)'
                          items:
                            properties:
                              query:
                                description: |-
                                  (Block List, Min: 1) Query describes the indicator that will be measured against the objective. Freeform Query types are currently supported. (see below for nested schema)
                                  Freeform Query Field
                                type: string
                            type: object
                          type: array
                        ratio:
                          description: '(Block List, Max: 1) (see below for nested
                            schema)'
                          items:
                            properties:
                              groupByLabels:
                                description: |-
                                  label alerting. These appear as variables on SLO dashboards to enable filtering and aggregation. Labels must adhere to Prometheus label name schema - "^[a-zA-Z_][a-zA-Z0-9_]*$"
                                  Defines Group By Labels used for per-label alerting. These appear as variables on SLO dashboards to enable filtering and aggregation. Labels must adhere to Prometheus label name schema - "^[a-zA-Z_][a-zA-Z0-9_]*$"
                                items:
                                  type: string
                                type: array
                              successMetric:
                                description: |-
                                  (String) Counter metric for success events (numerator)
                                  Counter metric for success events (numerator)
                                type: string
                              totalMetric:
                                description: |-
                                  (String) Metric for total events (denominator)
                                  Metric for total events (denominator)
                                type: string
                            type: object
                          type: array
                        type:
                          description: |-
                            (String) Query type must be one of: "freeform", "query", "ratio", or "threshold"
                            Query type must be one of: "freeform", "query", "ratio", or "threshold"
                          type: string
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  alerting:
                    description: |-
                      term error budget burn is very high, the
                      long-term error budget burn rate is high, or when the remaining
                      error budget is below a certain threshold. Annotations and Labels support templating. (see below for nested schema)
                      Configures the alerting rules that will be generated for each
                      time window associated with the SLO. Grafana SLOs can generate
                      alerts when the short-term error budget burn is very high, the
                      long-term error budget burn rate is high, or when the remaining
                      error budget is below a certain threshold. Annotations and Labels support templating.
                    items:
                      properties:
                        advancedOptions:
                          description: |-
                            (Block List, Max: 1) Advanced Options for Alert Rules (see below for nested schema)
                            Advanced Options for Alert Rules
                          items:
                            properties:
                              minFailures:
                                description: |-
                                  (Number) Minimum number of failed events to trigger an alert
                                  Minimum number of failed events to trigger an alert
                                type: number
                            type: object
                          type: array
                        annotation:
                          description: |-
                            (Block List) Annotations will be attached to all alerts generated by any of these rules. (see below for nested schema)
                            Annotations will be attached to all alerts generated by any of these rules.
                          items:
                            properties:
                              key:
                                description: (String)
                                type: string
                              value:
                                description: (Number) Value between 0 and 1. If the
                                  value of the query is above the objective, the SLO
                                  is met.
                                type: string
                            type: object
                          type: array
                        fastburn:
                          description: |-
                            (Block List, Max: 1) Alerting Rules generated for Fast Burn alerts (see below for nested schema)
                            Alerting Rules generated for Fast Burn alerts
                          items:
                            properties:
                              annotation:
                                description: |-
                                  (Block List) Annotations will be attached to all alerts generated by any of these rules. (see below for nested schema)
                                  Annotations to attach only to Fast Burn alerts.
                                items:
                                  properties:
                                    key:
                                      description: (String)
                                      type: string
                                    value:
                                      description: (Number) Value between 0 and 1.
                                        If the value of the query is above the objective,
                                        the SLO is met.
                                      type: string
                                  type: object
                                type: array
                              label:
                                description: |-
                                  "^[a-zA-Z_][a-zA-Z0-9_]*$" (see below for nested schema)
                                  Labels to attach only to Fast Burn alerts.
                                items:
                                  properties:
                                    key:
                                      description: (String)
                                      type: string
                                    value:
                                      description: (Number) Value between 0 and 1.
                                        If the value of the query is above the objective,
                                        the SLO is met.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        label:
                          description: |-
                            "^[a-zA-Z_][a-zA-Z0-9_]*$" (see below for nested schema)
                            Labels will be attached to all alerts generated by any of these rules.
                          items:
                            properties:
                              key:
                                description: (String)
                                type: string
                              value:
                                description: (Number) Value between 0 and 1. If the
                                  value of the query is above the objective, the SLO
                                  is met.
                                type: string
                            type: object
                          type: array
                        slowburn:
                          description: |-
                            (Block List, Max: 1) Alerting Rules generated for Slow Burn alerts (see below for nested schema)
                            Alerting Rules generated for Slow Burn alerts
                          items:
                            properties:
                              annotation:
                                description: |-
                                  (Block List) Annotations will be attached to all alerts generated by any of these rules. (see below for nested schema)
                                  Annotations to attach only to Slow Burn alerts.
                                items:
                                  properties:
                                    key:
                                      description: (String)
                                      type: string
                                    value:
                                      description: (Number) Value between 0 and 1.
                                        If the value of the query is above the objective,
                                        the SLO is met.
                                      type: string
                                  type: object
                                type: array
                              label:
                                description: |-
                                  "^[a-zA-Z_][a-zA-Z0-9_]*$" (see below for nested schema)
                                  Labels to attach only to Slow Burn alerts.
                                items:
                                  properties:
                                    key:
                                      description: (String)
                                      type: string
                                    value:
                                      description: (Number) Value between 0 and 1.
                                        If the value of the query is above the objective,
                                        the SLO is met.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  description:
                    description: |-
                      text field that can provide more context to an SLO.
                      Description is a free-text field that can provide more context to an SLO.
                    type: string
                  destinationDatasource:
                    description: |-
                      (Block List, Max: 1) Destination Datasource sets the datasource defined for an SLO (see below for nested schema)
                      Destination Datasource sets the datasource defined for an SLO
                    items:
                      properties:
                        ref:
                          description: Reference to a DataSource in oss to populate
                            uid.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        selector:
                          description: Selector for a DataSource in oss to populate
                            uid.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        uid:
                          description: |-
                            (String) UID for the Mimir Datasource
                            UID for the Mimir Datasource
                          type: string
                      type: object
                    type: array
                  folderUid:
                    description: |-
                      (String) UID for the SLO folder
                      UID for the SLO folder
                    type: string
                  label:
                    description: |-
                      "^[a-zA-Z_][a-zA-Z0-9_]*$" (see below for nested schema)
                      Additional labels that will be attached to all metrics generated from the query. These labels are useful for grouping SLOs in dashboard views that you create by hand. Labels must adhere to Prometheus label name schema - "^[a-zA-Z_][a-zA-Z0-9_]*$"
                    items:
                      properties:
                        key:
                          description: (String)
                          type: string
                        value:
                          description: (Number) Value between 0 and 1. If the value
                            of the query is above the objective, the SLO is met.
                          type: string
                      type: object
                    type: array
                  name:
                    description: |-
                      (String) Name should be a short description of your indicator. Consider names like "API Availability"
                      Name should be a short description of your indicator. Consider names like "API Availability"
                    type: string
                  objectives:
                    description: |-
                      (Block List, Min: 1) Over each rolling time window, the remaining error budget will be calculated, and separate alerts can be generated for each time window based on the SLO burn rate or remaining error budget. (see below for nested schema)
                      Over each rolling time window, the remaining error budget will be calculated, and separate alerts can be generated for each time window based on the SLO burn rate or remaining error budget.
                    items:
                      properties:
                        value:
                          description: |-
                            (Number) Value between 0 and 1. If the value of the query is above the objective, the SLO is met.
                            Value between 0 and 1. If the value of the query is above the objective, the SLO is met.
                          type: number
                        window:
                          description: |-
                            parsable time duration string like 24h, 60m. This is the time window the objective is measured over.
                            A Prometheus-parsable time duration string like 24h, 60m. This is the time window the objective is measured over.
                          type: string
                      type: object
                    type: array
                  query:
                    description: |-
                      (Block List, Min: 1) Query describes the indicator that will be measured against the objective. Freeform Query types are currently supported. (see below for nested schema)
                      Query describes the indicator that will be measured against the objective. Freeform Query types are currently supported.
                    items:
                      properties:
                        freeform:
                          description: '(Block List, Max: 1) (see below for nested
                            schema)'
                          items:
                            properties:
                              query:
                                description: |-
                                  (Block List, Min: 1) Query describes the indicator that will be measured against the objective. Freeform Query types are currently supported. (see below for nested schema)
                                  Freeform Query Field
                                type: string
                            type: object
                          type: array
                        ratio:
                          description: '(Block List, Max: 1) (see below for nested
                            schema)'
                          items:
                            properties:
                              groupByLabels:
                                description: |-
                                  label alerting. These appear as variables on SLO dashboards to enable filtering and aggregation. Labels must adhere to Prometheus label name schema - "^[a-zA-Z_][a-zA-Z0-9_]*$"
                                  Defines Group By Labels used for per-label alerting. These appear as variables on SLO dashboards to enable filtering and aggregation. Labels must adhere to Prometheus label name schema - "^[a-zA-Z_][a-zA-Z0-9_]*$"
                                items:
                                  type: string
                                type: array
                              successMetric:
                                description: |-
                                  (String) Counter metric for success events (numerator)
                                  Counter metric for success events (numerator)
                                type: string
                              totalMetric:
                                description: |-
                                  (String) Metric for total events (denominator)
                                  Metric for total events (denominator)
                                type: string
                            type: object
                          type: array
                        type:
                          description: |-
                            (String) Query type must be one of: "freeform", "query", "ratio", or "threshold"
                            Query type must be one of: "freeform", "query", "ratio", or "threshold"
                          type: string
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.description is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.description)
                || (has(self.initProvider) && has(self.initProvider.description))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.objectives is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.objectives)
                || (has(self.initProvider) && has(self.initProvider.objectives))'
            - message: spec.forProvider.query is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.query)
                || (has(self.initProvider) && has(self.initProvider.query))'
          status:
            description: SLOStatus defines the observed state of SLO.
            properties:
              atProvider:
                properties:
                  alerting:
                    description: |-
                      term error budget burn is very high, the
                      long-term error budget burn rate is high, or when the remaining
                      error budget is below a certain threshold. Annotations and Labels support templating. (see below for nested schema)
                      Configures the alerting rules that will be generated for each
                      time window associated with the SLO. Grafana SLOs can generate
                      alerts when the short-term error budget burn is very high, the
                      long-term error budget burn rate is high, or when the remaining
                      error budget is below a certain threshold. Annotations and Labels support templating.
                    items:
                      properties:
                        advancedOptions:
                          description: |-
                            (Block List, Max: 1) Advanced Options for Alert Rules (see below for nested schema)
                            Advanced Options for Alert Rules
                          items:
                            properties:
                              minFailures:
                                description: |-
                                  (Number) Minimum number of failed events to trigger an alert
                                  Minimum number of failed events to trigger an alert
                                type: number
                            type: object
                          type: array
                        annotation:
                          description: |-
                            (Block List) Annotations will be attached to all alerts generated by any of these rules. (see below for nested schema)
                            Annotations will be attached to all alerts generated by any of these rules.
                          items:
                            properties:
                              key:
                                description: (String)
                                type: string
                              value:
                                description: (Number) Value between 0 and 1. If the
                                  value of the query is above the objective, the SLO
                                  is met.
                                type: string
                            type: object
                          type: array
                        fastburn:
                          description: |-
                            (Block List, Max: 1) Alerting Rules generated for Fast Burn alerts (see below for nested schema)
                            Alerting Rules generated for Fast Burn alerts
                          items:
                            properties:
                              annotation:
                                description: |-
                                  (Block List) Annotations will be attached to all alerts generated by any of these rules. (see below for nested schema)
                                  Annotations to attach only to Fast Burn alerts.
                                items:
                                  properties:
                                    key:
                                      description: (String)
                                      type: string
                                    value:
                                      description: (Number) Value between 0 and 1.
                                        If the value of the query is above the objective,
                                        the SLO is met.
                                      type: string
                                  type: object
                                type: array
                              label:
                                description: |-
                                  "^[a-zA-Z_][a-zA-Z0-9_]*$" (see below for nested schema)
                                  Labels to attach only to Fast Burn alerts.
                                items:
                                  properties:
                                    key:
                                      description: (String)
                                      type: string
                                    value:
                                      description: (Number) Value between 0 and 1.
                                        If the value of the query is above the objective,
                                        the SLO is met.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        label:
                          description: |-
                            "^[a-zA-Z_][a-zA-Z0-9_]*$" (see below for nested schema)
                            Labels will be attached to all alerts generated by any of these rules.
                          items:
                            properties:
                              key:
                                description: (String)
                                type: string
                              value:
                                description: (Number) Value between 0 and 1. If the
                                  value of the query is above the objective, the SLO
                                  is met.
                                type: string
                            type: object
                          type: array
                        slowburn:
                          description: |-
                            (Block List, Max: 1) Alerting Rules generated for Slow Burn alerts (see below for nested schema)
                            Alerting Rules generated for Slow Burn alerts
                          items:
                            properties:
                              annotation:
                                description: |-
                                  (Block List) Annotations will be attached to all alerts generated by any of these rules. (see below for nested schema)
                                  Annotations to attach only to Slow Burn alerts.
                                items:
                                  properties:
                                    key:
                                      description: (String)
                                      type: string
                                    value:
                                      description: (Number) Value between 0 and 1.
                                        If the value of the query is above the objective,
                                        the SLO is met.
                                      type: string
                                  type: object
                                type: array
                              label:
                                description: |-
                                  "^[a-zA-Z_][a-zA-Z0-9_]*$" (see below for nested schema)
                                  Labels to attach only to Slow Burn alerts.
                                items:
                                  properties:
                                    key:
                                      description: (String)
                                      type: string
                                    value:
                                      description: (Number) Value between 0 and 1.
                                        If the value of the query is above the objective,
                                        the SLO is met.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  description:
                    description: |-
                      text field that can provide more context to an SLO.
                      Description is a free-text field that can provide more context to an SLO.
                    type: string
                  destinationDatasource:
                    description: |-
                      (Block List, Max: 1) Destination Datasource sets the datasource defined for an SLO (see below for nested schema)
                      Destination Datasource sets the datasource defined for an SLO
                    items:
                      properties:
                        uid:
                          description: |-
                            (String) UID for the Mimir Datasource
                            UID for the Mimir Datasource
                          type: string
                      type: object
                    type: array
                  folderUid:
                    description: |-
                      (String) UID for the SLO folder
                      UID for the SLO folder
                    type: string
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  label:
                    description: |-
                      "^[a-zA-Z_][a-zA-Z0-9_]*$" (see below for nested schema)
                      Additional labels that will be attached to all metrics generated from the query. These labels are useful for grouping SLOs in dashboard views that you create by hand. Labels must adhere to Prometheus label name schema - "^[a-zA-Z_][a-zA-Z0-9_]*$"
                    items:
                      properties:
                        key:
                          description: (String)
                          type: string
                        value:
                          description: (Number) Value between 0 and 1. If the value
                            of the query is above the objective, the SLO is met.
                          type: string
                      type: object
                    type: array
                  name:
                    description: |-
                      (String) Name should be a short description of your indicator. Consider names like "API Availability"
                      Name should be a short description of your indicator. Consider names like "API Availability"
                    type: string
                  objectives:
                    description: |-
                      (Block List, Min: 1) Over each rolling time window, the remaining error budget will be calculated, and separate alerts can be generated for each time window based on the SLO burn rate or remaining error budget. (see below for nested schema)
                      Over each rolling time window, the remaining error budget will be calculated, and separate alerts can be generated for each time window based on the SLO burn rate or remaining error budget.
                    items:
                      properties:
                        value:
                          description: |-
                            (Number) Value between 0 and 1. If the value of the query is above the objective, the SLO is met.
                            Value between 0 and 1. If the value of the query is above the objective, the SLO is met.
                          type: number
                        window:
                          description: |-
                            parsable time duration string like 24h, 60m. This is the time window the objective is measured over.
                            A Prometheus-parsable time duration string like 24h, 60m. This is the time window the objective is measured over.
                          type: string
                      type: object
                    type: array
                  query:
                    description: |-
                      (Block List, Min: 1) Query describes the indicator that will be measured against the objective. Freeform Query types are currently supported. (see below for nested schema)
                      Query describes the indicator that will be measured against the objective. Freeform Query types are currently supported.
                    items:
                      properties:
                        freeform:
                          description: '(Block List, Max: 1) (see below for nested
                            schema)'
                          items:
                            properties:
                              query:
                                description: |-
                                  (Block List, Min: 1) Query describes the indicator that will be measured against the objective. Freeform Query types are currently supported. (see below for nested schema)
                                  Freeform Query Field
                                type: string
                            type: object
                          type: array
                        ratio:
                          description: '(Block List, Max: 1) (see below for nested
                            schema)'
                          items:
                            properties:
                              groupByLabels:
                                description: |-
                                  label alerting. These appear as variables on SLO dashboards to enable filtering and aggregation. Labels must adhere to Prometheus label name schema - "^[a-zA-Z_][a-zA-Z0-9_]*$"
                                  Defines Group By Labels used for per-label alerting. These appear as variables on SLO dashboards to enable filtering and aggregation. Labels must adhere to Prometheus label name schema - "^[a-zA-Z_][a-zA-Z0-9_]*$"
                                items:
                                  type: string
                                type: array
                              successMetric:
                                description: |-
                                  (String) Counter metric for success events (numerator)
                                  Counter metric for success events (numerator)
                                type: string
                              totalMetric:
                                description: |-
                                  (String) Metric for total events (denominator)
                                  Metric for total events (denominator)
                                type: string
                            type: object
                          type: array
                        type:
                          description: |-
                            (String) Query type must be one of: "freeform", "query", "ratio", or "threshold"
                            Query type must be one of: "freeform", "query", "ratio", or "threshold"
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: checks.sm.grafana.crossplane.io
spec:
  group: sm.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: Check
    listKind: CheckList
    plural: checks
    singular: check
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Check is the Schema for the Checks API. Synthetic Monitoring
          checks are tests that run on selected probes at defined intervals and report
          metrics and logs back to your Grafana Cloud account. The target for checks
          can be a domain name, a server, or a website, depending on what information
          you would like to gather about your endpoint. You can define multiple checks
          for a single endpoint to check different capabilities. Official documentation
          https://grafana.com/docs/grafana-cloud/testing/synthetic-monitoring/create-checks/checks/
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: CheckSpec defines the desired state of Check
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  alertSensitivity:
                    description: |-
                      (String) Can be set to none, low, medium, or high to correspond to the check alert levels. Defaults to none.
                      Can be set to `none`, `low`, `medium`, or `high` to correspond to the check [alert levels](https://grafana.com/docs/grafana-cloud/testing/synthetic-monitoring/configure-alerts/synthetic-monitoring-alerting/). Defaults to `none`.
                    type: string
                  basicMetricsOnly:
                    description: |-
                      (Boolean) Metrics are reduced by default. Set this to false if you'd like to publish all metrics. We maintain a full list of metrics collected for each. Defaults to true.
                      Metrics are reduced by default. Set this to `false` if you'd like to publish all metrics. We maintain a [full list of metrics](https://github.com/grafana/synthetic-monitoring-agent/tree/main/internal/scraper/testdata) collected for each. Defaults to `true`.
                    type: boolean
                  enabled:
                    description: |-
                      (Boolean) Whether to enable the check. Defaults to true.
                      Whether to enable the check. Defaults to `true`.
                    type: boolean
                  frequency:
                    description: |-
                      (Number) How often the check runs in milliseconds (the value is not truly a "frequency" but a "period"). The minimum acceptable value is 1 second (1000 ms), and the maximum is 1 hour (3600000 ms). Defaults to 60000.
                      How often the check runs in milliseconds (the value is not truly a "frequency" but a "period"). The minimum acceptable value is 1 second (1000 ms), and the maximum is 1 hour (3600000 ms). Defaults to `60000`.
                    type: number
                  job:
                    description: |-
                      (String) Name used for job label.
                      Name used for job label.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      specific labels, to the outgoing metrics. The names and values of the labels cannot be empty, and the maximum length is 32 bytes.
                      Custom labels to be included with collected metrics and logs. The maximum number of labels that can be specified per check is 5. These are applied, along with the probe-specific labels, to the outgoing metrics. The names and values of the labels cannot be empty, and the maximum length is 32 bytes.
                    type: object
                    x-kubernetes-map-type: granular
                  probes:
                    description: |-
                      (Set of Number) List of probe location IDs where this target will be checked from.
                      List of probe location IDs where this target will be checked from.
                    items:
                      type: number
                    type: array
                    x-kubernetes-list-type: set
                  settings:
                    description: |-
                      (Block Set, Min: 1, Max: 1) Check settings. Should contain exactly one nested block. (see below for nested schema)
                      Check settings. Should contain exactly one nested block.
                    items:
                      properties:
                        dns:
                          description: |-
                            (Block Set, Max: 1) Settings for DNS check. The target must be a valid hostname (or IP address for PTR records). (see below for nested schema)
                            Settings for DNS check. The target must be a valid hostname (or IP address for `PTR` records).
                          items:
                            properties:
                              ipVersion:
                                description: |-
                                  (String) Options are V4, V6, Any. Specifies whether the corresponding check will be performed using IPv4 or IPv6. The Any value indicates that IPv6 should be used, falling back to IPv4 if that's not available. Defaults to V4.
                                  Options are `V4`, `V6`, `Any`. Specifies whether the corresponding check will be performed using IPv4 or IPv6. The `Any` value indicates that IPv6 should be used, falling back to IPv4 if that's not available. Defaults to `V4`.
                                type: string
                              port:
                                description: |-
                                  (Number) Port to target. Defaults to 53.
                                  Port to target. Defaults to `53`.
                                type: number
                              protocol:
                                description: |-
                                  (String) TCP or UDP. Defaults to UDP.
                                  `TCP` or `UDP`. Defaults to `UDP`.
                                type: string
                              recordType:
                                description: |-
                                  (String) One of ANY, A, AAAA, CNAME, MX, NS, PTR, SOA, SRV, TXT. Defaults to A.
                                  One of `ANY`, `A`, `AAAA`, `CNAME`, `MX`, `NS`, `PTR`, `SOA`, `SRV`, `TXT`. Defaults to `A`.
                                type: string
                              server:
                                description: |-
                                  (String) DNS server address to target. Defaults to 8.8.8.8.
                                  DNS server address to target. Defaults to `8.8.8.8`.
                                type: string
                              sourceIpAddress:
                                description: |-
                                  (String) Source IP address.
                                  Source IP address.
                                type: string
                              validRCodes:
                                description: |-
                                  (Set of String) List of valid response codes. Options include NOERROR, BADALG, BADMODE, BADKEY, BADCOOKIE, BADNAME, BADSIG, BADTIME, BADTRUNC, BADVERS, FORMERR, NOTIMP, NOTAUTH, NOTZONE, NXDOMAIN, NXRRSET, REFUSED, SERVFAIL, YXDOMAIN, YXRRSET.
                                  List of valid response codes. Options include `NOERROR`, `BADALG`, `BADMODE`, `BADKEY`, `BADCOOKIE`, `BADNAME`, `BADSIG`, `BADTIME`, `BADTRUNC`, `BADVERS`, `FORMERR`, `NOTIMP`, `NOTAUTH`, `NOTZONE`, `NXDOMAIN`, `NXRRSET`, `REFUSED`, `SERVFAIL`, `YXDOMAIN`, `YXRRSET`.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              validateAdditionalRrs:
                                description: |-
                                  (Block Set) Validate additional matches. (see below for nested schema)
                                  Validate additional matches.
                                items:
                                  properties:
                                    failIfMatchesRegexp:
                                      description: |-
                                        (Set of String) Fail if value matches regex.
                                        Fail if value matches regex.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                    failIfNotMatchesRegexp:
                                      description: |-
                                        (Set of String) Fail if value does not match regex.
                                        Fail if value does not match regex.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                  type: object
                                type: array
                              validateAnswerRrs:
                                description: |-
                                  (Block Set, Max: 1) Validate response answer. (see below for nested schema)
                                  Validate response answer.
                                items:
                                  properties:
                                    failIfMatchesRegexp:
                                      description: |-
                                        (Set of String) Fail if value matches regex.
                                        Fail if value matches regex.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                    failIfNotMatchesRegexp:
                                      description: |-
                                        (Set of String) Fail if value does not match regex.
                                        Fail if value does not match regex.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                  type: object
                                type: array
                              validateAuthorityRrs:
                                description: |-
                                  (Block Set, Max: 1) Validate response authority. (see below for nested schema)
                                  Validate response authority.
                                items:
                                  properties:
                                    failIfMatchesRegexp:
                                      description: |-
                                        (Set of String) Fail if value matches regex.
                                        Fail if value matches regex.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                    failIfNotMatchesRegexp:
                                      description: |-
                                        (Set of String) Fail if value does not match regex.
                                        Fail if value does not match regex.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                  type: object
                                type: array
                            type: object
                          type: array
                        grpc:
                          description: |-
                            (Block Set, Max: 1) Settings for gRPC Health check. The target must be of the form <host>:<port>, where the host portion must be a valid hostname or IP address. (see below for nested schema)
                            Settings for gRPC Health check. The target must be of the form `<host>:<port>`, where the host portion must be a valid hostname or IP address.
                          items:
                            properties:
                              ipVersion:
                                description: |-
                                  (String) Options are V4, V6, Any. Specifies whether the corresponding check will be performed using IPv4 or IPv6. The Any value indicates that IPv6 should be used, falling back to IPv4 if that's not available. Defaults to V4.
                                  Options are `V4`, `V6`, `Any`. Specifies whether the corresponding check will be performed using IPv4 or IPv6. The `Any` value indicates that IPv6 should be used, falling back to IPv4 if that's not available. Defaults to `V4`.
                                type: string
                              service:
                                description: |-
                                  (String) gRPC service.
                                  gRPC service.
                                type: string
                              tls:
                                description: |-
                                  (Boolean) Whether or not TLS is used when the connection is initiated. Defaults to false.
                                  Whether or not TLS is used when the connection is initiated. Defaults to `false`.
                                type: boolean
                              tlsConfig:
                                description: |-
                                  (Block Set, Max: 1) TLS config. (see below for nested schema)
                                  TLS config.
                                items:
                                  properties:
                                    caCert:
                                      description: |-
                                        (String) CA certificate in PEM format.
                                        CA certificate in PEM format.
                                      type: string
                                    clientCert:
                                      description: |-
                                        (String) Client certificate in PEM format.
                                        Client certificate in PEM format.
                                      type: string
                                    clientKeySecretRef:
                                      description: |-
                                        (String, Sensitive) Client key in PEM format.
                                        Client key in PEM format.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: Name of the secret.
                                          type: string
                                        namespace:
                                          description: Namespace of the secret.
                                          type: string
                                      required:
                                      - key
                                      - name
                                      - namespace
                                      type: object
                                    insecureSkipVerify:
                                      description: |-
                                        (Boolean) Disable target certificate validation. Defaults to false.
                                        Disable target certificate validation. Defaults to `false`.
                                      type: boolean
                                    serverName:
                                      description: |-
                                        (String) Used to verify the hostname for the targets.
                                        Used to verify the hostname for the targets.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        http:
                          description: |-
                            (Block Set, Max: 1) Settings for HTTP check. The target must be a URL (http or https). (see below for nested schema)
                            Settings for HTTP check. The target must be a URL (http or https).
                          items:
                            properties:
                              basicAuth:
                                description: |-
                                  (Block Set, Max: 1) Basic auth settings. (see below for nested schema)
                                  Basic auth settings.
                                items:
                                  properties:
                                    password:
                                      description: |-
                                        (String) Basic auth password.
                                        Basic auth password.
                                      type: string
                                    username:
                                      description: |-
                                        (String) Basic auth username.
                                        Basic auth username.
                                      type: string
                                  type: object
                                type: array
                              bearerToken:
                                description: |-
                                  (String) Token for use with bearer authorization header.
                                  Token for use with bearer authorization header.
                                type: string
                              body:
                                description: |-
                                  (String) The body of the HTTP request used in probe.
                                  The body of the HTTP request used in probe.
                                type: string
                              cacheBustingQueryParamName:
                                description: |-
                                  (String) The name of the query parameter used to prevent the server from using a cached response. Each probe will assign a random value to this parameter each time a request is made.
                                  The name of the query parameter used to prevent the server from using a cached response. Each probe will assign a random value to this parameter each time a request is made.
                                type: string
                              failIfBodyMatchesRegexp:
                                description: |-
                                  (Set of String) List of regexes. If any match the response body, the check will fail.
                                  List of regexes. If any match the response body, the check will fail.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              failIfBodyNotMatchesRegexp:
                                description: |-
                                  (Set of String) List of regexes. If any do not match the response body, the check will fail.
                                  List of regexes. If any do not match the response body, the check will fail.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              failIfHeaderMatchesRegexp:
                                description: |-
                                  (Block Set) Check fails if headers match. (see below for nested schema)
                                  Check fails if headers match.
                                items:
                                  properties:
                                    allowMissing:
                                      description: |-
                                        (Boolean) Allow header to be missing from responses. Defaults to false.
                                        Allow header to be missing from responses. Defaults to `false`.
                                      type: boolean
                                    header:
                                      description: |-
                                        (String) Header name.
                                        Header name.
                                      type: string
                                    regexp:
                                      description: |-
                                        (String) Regex that header value should match.
                                        Regex that header value should match.
                                      type: string
                                  type: object
                                type: array
                              failIfHeaderNotMatchesRegexp:
                                description: |-
                                  (Block Set) Check fails if headers do not match. (see below for nested schema)
                                  Check fails if headers do not match.
                                items:
                                  properties:
                                    allowMissing:
                                      description: |-
                                        (Boolean) Allow header to be missing from responses. Defaults to false.
                                        Allow header to be missing from responses. Defaults to `false`.
                                      type: boolean
                                    header:
                                      description: |-
                                        (String) Header name.
                                        Header name.
                                      type: string
                                    regexp:
                                      description: |-
                                        (String) Regex that header value should match.
                                        Regex that header value should match.
                                      type: string
                                  type: object
                                type: array
                              failIfNotSsl:
                                description: |-
                                  (Boolean) Fail if SSL is not present. Defaults to false.
                                  Fail if SSL is not present. Defaults to `false`.
                                type: boolean
                              failIfSsl:
                                description: |-
                                  (Boolean) Fail if SSL is present. Defaults to false.
                                  Fail if SSL is present. Defaults to `false`.
                                type: boolean
                              headers:
                                description: |-
                                  (Set of String) The HTTP headers set for the probe.
                                  The HTTP headers set for the probe.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              ipVersion:
                                description: |-
                                  (String) Options are V4, V6, Any. Specifies whether the corresponding check will be performed using IPv4 or IPv6. The Any value indicates that IPv6 should be used, falling back to IPv4 if that's not available. Defaults to V4.
                                  Options are `V4`, `V6`, `Any`. Specifies whether the corresponding check will be performed using IPv4 or IPv6. The `Any` value indicates that IPv6 should be used, falling back to IPv4 if that's not available. Defaults to `V4`.
                                type: string
                              method:
                                description: |-
                                  (String) Request method. One of GET, CONNECT, DELETE, HEAD, OPTIONS, POST, PUT, TRACE Defaults to GET.
                                  Request method. One of `GET`, `CONNECT`, `DELETE`, `HEAD`, `OPTIONS`, `POST`, `PUT`, `TRACE` Defaults to `GET`.
                                type: string
                              noFollowRedirects:
                                description: |-
                                  (Boolean) Do not follow redirects. Defaults to false.
                                  Do not follow redirects. Defaults to `false`.
                                type: boolean
                              proxyConnectHeaders:
                                description: |-
                                  (Set of String) The HTTP headers sent to the proxy URL
                                  The HTTP headers sent to the proxy URL
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              proxyUrl:
                                description: |-
                                  (String) Proxy URL.
                                  Proxy URL.
                                type: string
                              tlsConfig:
                                description: |-
                                  (Block Set, Max: 1) TLS config. (see below for nested schema)
                                  TLS config.
                                items:
                                  properties:
                                    caCert:
                                      description: |-
                                        (String) CA certificate in PEM format.
                                        CA certificate in PEM format.
                                      type: string
                                    clientCert:
                                      description: |-
                                        (String) Client certificate in PEM format.
                                        Client certificate in PEM format.
                                      type: string
                                    clientKeySecretRef:
                                      description: |-
                                        (String, Sensitive) Client key in PEM format.
                                        Client key in PEM format.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: Name of the secret.
                                          type: string
                                        namespace:
                                          description: Namespace of the secret.
                                          type: string
                                      required:
                                      - key
                                      - name
                                      - namespace
                                      type: object
                                    insecureSkipVerify:
                                      description: |-
                                        (Boolean) Disable target certificate validation. Defaults to false.
                                        Disable target certificate validation. Defaults to `false`.
                                      type: boolean
                                    serverName:
                                      description: |-
                                        (String) Used to verify the hostname for the targets.
                                        Used to verify the hostname for the targets.
                                      type: string
                                  type: object
                                type: array
                              validHttpVersions:
                                description: |-
                                  (Set of String) List of valid HTTP versions. Options include HTTP/1.0, HTTP/1.1, HTTP/2.0
                                  List of valid HTTP versions. Options include `HTTP/1.0`, `HTTP/1.1`, `HTTP/2.0`
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              validStatusCodes:
                                description: |-
                                  (Set of Number) Accepted status codes. If unset, defaults to 2xx.
                                  Accepted status codes. If unset, defaults to 2xx.
                                items:
                                  type: number
                                type: array
                                x-kubernetes-list-type: set
                            type: object
                          type: array
                        multihttp:
                          description: |-
                            (Block Set, Max: 1) Settings for MultiHTTP check. The target must be a URL (http or https) (see below for nested schema)
                            Settings for MultiHTTP check. The target must be a URL (http or https)
                          items:
                            properties:
                              entries:
                                description: (Block List) (see below for nested schema)
                                items:
                                  properties:
                                    assertions:
                                      description: |-
                                        (Block List) Assertions to make on the request response (see below for nested schema)
                                        Assertions to make on the request response
                                      items:
                                        properties:
                                          condition:
                                            description: |-
                                              (String) The condition of the assertion: NOT_CONTAINS, EQUALS, STARTS_WITH, ENDS_WITH, TYPE_OF, CONTAINS
                                              The condition of the assertion: NOT_CONTAINS, EQUALS, STARTS_WITH, ENDS_WITH, TYPE_OF, CONTAINS
                                            type: string
                                          expression:
                                            description: |-
                                              (String) The expression of the assertion. Should start with $.
                                              The expression of the assertion. Should start with $.
                                            type: string
                                          subject:
                                            description: |-
                                              (String) The subject of the assertion: RESPONSE_HEADERS, HTTP_STATUS_CODE, RESPONSE_BODY
                                              The subject of the assertion: RESPONSE_HEADERS, HTTP_STATUS_CODE, RESPONSE_BODY
                                            type: string
                                          type:
                                            description: |-
                                              (String) The type of assertion to make: TEXT, JSON_PATH_VALUE, JSON_PATH_ASSERTION, REGEX_ASSERTION
                                              The type of assertion to make: TEXT, JSON_PATH_VALUE, JSON_PATH_ASSERTION, REGEX_ASSERTION
                                            type: string
                                          value:
                                            description: |-
                                              (String) The value of the assertion
                                              The value of the assertion
                                            type: string
                                        type: object
                                      type: array
                                    request:
                                      description: |-
                                        (Block Set, Max: 1) An individual MultiHTTP request (see below for nested schema)
                                        An individual MultiHTTP request
                                      items:
                                        properties:
                                          body:
                                            description: |-
                                              (String) The body of the HTTP request used in probe.
                                              The body of the HTTP request used in probe.
                                            items:
                                              properties:
                                                contentEncoding:
                                                  description: |-
                                                    (String) The content encoding of the body
                                                    The content encoding of the body
                                                  type: string
                                                contentType:
                                                  description: |-
                                                    (String) The content type of the body
                                                    The content type of the body
                                                  type: string
                                                payload:
                                                  description: |-
                                                    (String) The body payload
                                                    The body payload
                                                  type: string
                                              type: object
                                            type: array
                                          headers:
                                            description: |-
                                              (Set of String) The HTTP headers set for the probe.
                                              The headers to send with the request
                                            items:
                                              properties:
                                                name:
                                                  description: |-
                                                    (String) Name of the header to send
                                                    Name of the header to send
                                                  type: string
                                                value:
                                                  description: |-
                                                    (String) The value of the assertion
                                                    Value of the header to send
                                                  type: string
                                              type: object
                                            type: array
                                          method:
                                            description: |-
                                              (String) Request method. One of GET, CONNECT, DELETE, HEAD, OPTIONS, POST, PUT, TRACE Defaults to GET.
                                              The HTTP method to use
                                            type: string
                                          queryFields:
                                            description: |-
                                              (Block Set) Query fields to send with the request (see below for nested schema)
                                              Query fields to send with the request
                                            items:
                                              properties:
                                                name:
                                                  description: |-
                                                    (String) Name of the header to send
                                                    Name of the query field to send
                                                  type: string
                                                value:
                                                  description: |-
                                                    (String) The value of the assertion
                                                    Value of the query field to send
                                                  type: string
                                              type: object
                                            type: array
                                          url:
                                            description: |-
                                              (String) The URL for the request
                                              The URL for the request
                                            type: string
                                        type: object
                                      type: array
                                    variables:
                                      description: |-
                                        (Block List) Variables to extract from the request response (see below for nested schema)
                                        Variables to extract from the request response
                                      items:
                                        properties:
                                          attribute:
                                            description: |-
                                              (String) The attribute to use when finding the variable value. Only used when type is CSS_SELECTOR
                                              The attribute to use when finding the variable value. Only used when type is CSS_SELECTOR
                                            type: string
                                          expression:
                                            description: |-
                                              (String) The expression of the assertion. Should start with $.
                                              The expression to when finding the variable. Should start with $. Only use when type is JSON_PATH or REGEX
                                            type: string
                                          name:
                                            description: |-
                                              (String) Name of the header to send
                                              The name of the variable to extract
                                            type: string
                                          type:
                                            description: |-
                                              (String) The type of assertion to make: TEXT, JSON_PATH_VALUE, JSON_PATH_ASSERTION, REGEX_ASSERTION
                                              The method of finding the variable value to extract. JSON_PATH, REGEX, CSS_SELECTOR
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                        ping:
                          description: |-
                            (Block Set, Max: 1) Settings for ping (ICMP) check. The target must be a valid hostname or IP address. (see below for nested schema)
                            Settings for ping (ICMP) check. The target must be a valid hostname or IP address.
                          items:
                            properties:
                              dontFragment:
                                description: |-
                                  bit in the IP-header. Only works with ipV4. Defaults to false.
                                  Set the DF-bit in the IP-header. Only works with ipV4. Defaults to `false`.
                                type: boolean
                              ipVersion:
                                description: |-
                                  (String) Options are V4, V6, Any. Specifies whether the corresponding check will be performed using IPv4 or IPv6. The Any value indicates that IPv6 should be used, falling back to IPv4 if that's not available. Defaults to V4.
                                  Options are `V4`, `V6`, `Any`. Specifies whether the corresponding check will be performed using IPv4 or IPv6. The `Any` value indicates that IPv6 should be used, falling back to IPv4 if that's not available. Defaults to `V4`.
                                type: string
                              payloadSize:
                                description: |-
                                  (Number) Payload size. Defaults to 0.
                                  Payload size. Defaults to `0`.
                                type: number
                              sourceIpAddress:
                                description: |-
                                  (String) Source IP address.
                                  Source IP address.
                                type: string
                            type: object
                          type: array
                        scripted:
                          description: |-
                            cloud/testing/synthetic-monitoring/create-checks/checks/k6/. (see below for nested schema)
                            Settings for scripted check. See https://grafana.com/docs/grafana-cloud/testing/synthetic-monitoring/create-checks/checks/k6/.
                          items:
                            properties:
                              script:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        tcp:
                          description: |-
                            (Block Set, Max: 1) Settings for TCP check. The target must be of the form <host>:<port>, where the host portion must be a valid hostname or IP address. (see below for nested schema)
                            Settings for TCP check. The target must be of the form `<host>:<port>`, where the host portion must be a valid hostname or IP address.
                          items:
                            properties:
                              ipVersion:
                                description: |-
                                  (String) Options are V4, V6, Any. Specifies whether the corresponding check will be performed using IPv4 or IPv6. The Any value indicates that IPv6 should be used, falling back to IPv4 if that's not available. Defaults to V4.
                                  Options are `V4`, `V6`, `Any`. Specifies whether the corresponding check will be performed using IPv4 or IPv6. The `Any` value indicates that IPv6 should be used, falling back to IPv4 if that's not available. Defaults to `V4`.
                                type: string
                              queryResponse:
                                description: |-
                                  (Block Set) The query sent in the TCP probe and the expected associated response. (see below for nested schema)
                                  The query sent in the TCP probe and the expected associated response.
                                items:
                                  properties:
                                    expect:
                                      description: |-
                                        (String) Response to expect.
                                        Response to expect.
                                      type: string
                                    send:
                                      description: |-
                                        (String) Data to send.
                                        Data to send.
                                      type: string
                                    startTls:
                                      description: |-
                                        (Boolean) Upgrade TCP connection to TLS. Defaults to false.
                                        Upgrade TCP connection to TLS. Defaults to `false`.
                                      type: boolean
                                  type: object
                                type: array
                              sourceIpAddress:
                                description: |-
                                  (String) Source IP address.
                                  Source IP address.
                                type: string
                              tls:
                                description: |-
                                  (Boolean) Whether or not TLS is used when the connection is initiated. Defaults to false.
                                  Whether or not TLS is used when the connection is initiated. Defaults to `false`.
                                type: boolean
                              tlsConfig:
                                description: |-
                                  (Block Set, Max: 1) TLS config. (see below for nested schema)
                                  TLS config.
                                items:
                                  properties:
                                    caCert:
                                      description: |-
                                        (String) CA certificate in PEM format.
                                        CA certificate in PEM format.
                                      type: string
                                    clientCert:
                                      description: |-
                                        (String) Client certificate in PEM format.
                                        Client certificate in PEM format.
                                      type: string
                                    clientKeySecretRef:
                                      description: |-
                                        (String, Sensitive) Client key in PEM format.
                                        Client key in PEM format.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: Name of the secret.
                                          type: string
                                        namespace:
                                          description: Namespace of the secret.
                                          type: string
                                      required:
                                      - key
                                      - name
                                      - namespace
                                      type: object
                                    insecureSkipVerify:
                                      description: |-
                                        (Boolean) Disable target certificate validation. Defaults to false.
                                        Disable target certificate validation. Defaults to `false`.
                                      type: boolean
                                    serverName:
                                      description: |-
                                        (String) Used to verify the hostname for the targets.
                                        Used to verify the hostname for the targets.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        traceroute:
                          description: |-
                            (Block Set, Max: 1) Settings for traceroute check. The target must be a valid hostname or IP address (see below for nested schema)
                            Settings for traceroute check. The target must be a valid hostname or IP address
                          items:
                            properties:
                              maxHops:
                                description: |-
                                  (Number) Maximum TTL for the trace Defaults to 64.
                                  Maximum TTL for the trace Defaults to `64`.
                                type: number
                              maxUnknownHops:
                                description: |-
                                  (Number) Maximum number of hosts to travers that give no response Defaults to 15.
                                  Maximum number of hosts to travers that give no response Defaults to `15`.
                                type: number
                              ptrLookup:
                                description: |-
                                  (Boolean) Reverse lookup hostnames from IP addresses Defaults to true.
                                  Reverse lookup hostnames from IP addresses Defaults to `true`.
                                type: boolean
                            type: object
                          type: array
                      type: object
                    type: array
                  target:
                    description: |-
                      (String) Hostname to ping.
                      Hostname to ping.
                    type: string
                  timeout:
                    description: |-
                      (Number) Specifies the maximum running time for the check in milliseconds. The minimum acceptable value is 1 second (1000 ms), and the maximum 10 seconds (10000 ms). Defaults to 3000.
                      Specifies the maximum running time for the check in milliseconds. The minimum acceptable value is 1 second (1000 ms), and the maximum 10 seconds (10000 ms). Defaults to `3000`.
                    type: number
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  alertSensitivity:
                    description: |-
                      (String) Can be set to none, low, medium, or high to correspond to the check alert levels. Defaults to none.
                      Can be set to `none`, `low`, `medium`, or `high` to correspond to the check [alert levels](https://grafana.com/docs/grafana-cloud/testing/synthetic-monitoring/configure-alerts/synthetic-monitoring-alerting/). Defaults to `none`.
                    type: string
                  basicMetricsOnly:
                    description: |-
                      (Boolean) Metrics are reduced by default. Set this to false if you'd like to publish all metrics. We maintain a full list of metrics collected for each. Defaults to true.
                      Metrics are reduced by default. Set this to `false` if you'd like to publish all metrics. We maintain a [full list of metrics](https://github.com/grafana/synthetic-monitoring-agent/tree/main/internal/scraper/testdata) collected for each. Defaults to `true`.
                    type: boolean
                  enabled:
                    description: |-
                      (Boolean) Whether to enable the check. Defaults to true.
                      Whether to enable the check. Defaults to `true`.
                    type: boolean
                  frequency:
                    description: |-
                      (Number) How often the check runs in milliseconds (the value is not truly a "frequency" but a "period"). The minimum acceptable value is 1 second (1000 ms), and the maximum is 1 hour (3600000 ms). Defaults to 60000.
                      How often the check runs in milliseconds (the value is not truly a "frequency" but a "period"). The minimum acceptable value is 1 second (1000 ms), and the maximum is 1 hour (3600000 ms). Defaults to `60000`.
                    type: number
                  job:
                    description: |-
                      (String) Name used for job label.
                      Name used for job label.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      specific labels, to the outgoing metrics. The names and values of the labels cannot be empty, and the maximum length is 32 bytes.
                      Custom labels to be included with collected metrics and logs. The maximum number of labels that can be specified per check is 5. These are applied, along with the probe-specific labels, to the outgoing metrics. The names and values of the labels cannot be empty, and the maximum length is 32 bytes.
                    type: object
                    x-kubernetes-map-type: granular
                  probes:
                    description: |-
                      (Set of Number) List of probe location IDs where this target will be checked from.
                      List of probe location IDs where this target will be checked from.
                    items:
                      type: number
                    type: array
                    x-kubernetes-list-type: set
                  settings:
                    description: |-
                      (Block Set, Min: 1, Max: 1) Check settings. Should contain exactly one nested block. (see below for nested schema)
                      Check settings. Should contain exactly one nested block.
                    items:
                      properties:
                        dns:
                          description: |-
                            (Block Set, Max: 1) Settings for DNS check. The target must be a valid hostname (or IP address for PTR records). (see below for nested schema)
                            Settings for DNS check. The target must be a valid hostname (or IP address for `PTR` records).
                          items:
                            properties:
                              ipVersion:
                                description: |-
                                  (String) Options are V4, V6, Any. Specifies whether the corresponding check will be performed using IPv4 or IPv6. The Any value indicates that IPv6 should be used, falling back to IPv4 if that's not available. Defaults to V4.
                                  Options are `V4`, `V6`, `Any`. Specifies whether the corresponding check will be performed using IPv4 or IPv6. The `Any` value indicates that IPv6 should be used, falling back to IPv4 if that's not available. Defaults to `V4`.
                                type: string
                              port:
                                description: |-
                                  (Number) Port to target. Defaults to 53.
                                  Port to target. Defaults to `53`.
                                type: number
                              protocol:
                                description: |-
                                  (String) TCP or UDP. Defaults to UDP.
                                  `TCP` or `UDP`. Defaults to `UDP`.
                                type: string
                              recordType:
                                description: |-
                                  (String) One of ANY, A, AAAA, CNAME, MX, NS, PTR, SOA, SRV, TXT. Defaults to A.
                                  One of `ANY`, `A`, `AAAA`, `CNAME`, `MX`, `NS`, `PTR`, `SOA`, `SRV`, `TXT`. Defaults to `A`.
                                type: string
                              server:
                                description: |-
                                  (String) DNS server address to target. Defaults to 8.8.8.8.
                                  DNS server address to target. Defaults to `8.8.8.8`.
                                type: string
                              sourceIpAddress:
                                description: |-
                                  (String) Source IP address.
                                  Source IP address.
                                type: string
                              validRCodes:
                                description: |-
                                  (Set of String) List of valid response codes. Options include NOERROR, BADALG, BADMODE, BADKEY, BADCOOKIE, BADNAME, BADSIG, BADTIME, BADTRUNC, BADVERS, FORMERR, NOTIMP, NOTAUTH, NOTZONE, NXDOMAIN, NXRRSET, REFUSED, SERVFAIL, YXDOMAIN, YXRRSET.
                                  List of valid response codes. Options include `NOERROR`, `BADALG`, `BADMODE`, `BADKEY`, `BADCOOKIE`, `BADNAME`, `BADSIG`, `BADTIME`, `BADTRUNC`, `BADVERS`, `FORMERR`, `NOTIMP`, `NOTAUTH`, `NOTZONE`, `NXDOMAIN`, `NXRRSET`, `REFUSED`, `SERVFAIL`, `YXDOMAIN`, `YXRRSET`.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              validateAdditionalRrs:
                                description: |-
                                  (Block Set) Validate additional matches. (see below for nested schema)
                                  Validate additional matches.
                                items:
                                  properties:
                                    failIfMatchesRegexp:
                                      description: |-
                                        (Set of String) Fail if value matches regex.
                                        Fail if value matches regex.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                    failIfNotMatchesRegexp:
                                      description: |-
                                        (Set of String) Fail if value does not match regex.
                                        Fail if value does not match regex.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                  type: object
                                type: array
                              validateAnswerRrs:
                                description: |-
                                  (Block Set, Max: 1) Validate response answer. (see below for nested schema)
                                  Validate response answer.
                                items:
                                  properties:
                                    failIfMatchesRegexp:
                                      description: |-
                                        (Set of String) Fail if value matches regex.
                                        Fail if value matches regex.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                    failIfNotMatchesRegexp:
                                      description: |-
                                        (Set of String) Fail if value does not match regex.
                                        Fail if value does not match regex.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                  type: object
                                type: array
                              validateAuthorityRrs:
                                description: |-
                                  (Block Set, Max: 1) Validate response authority. (see below for nested schema)
                                  Validate response authority.
                                items:
                                  properties:
                                    failIfMatchesRegexp:
                                      description: |-
                                        (Set of String) Fail if value matches regex.
                                        Fail if value matches regex.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                    failIfNotMatchesRegexp:
                                      description: |-
                                        (Set of String) Fail if value does not match regex.
                                        Fail if value does not match regex.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                  type: object
                                type: array
                            type: object
                          type: array
                        grpc:
                          description: |-
                            (Block Set, Max: 1) Settings for gRPC Health check. The target must be of the form <host>:<port>, where the host portion must be a valid hostname or IP address. (see below for nested schema)
                            Settings for gRPC Health check. The target must be of the form `<host>:<port>`, where the host portion must be a valid hostname or IP address.
                          items:
                            properties:
                              ipVersion:
                                description: |-
                                  (String) Options are V4, V6, Any. Specifies whether the corresponding check will be performed using IPv4 or IPv6. The Any value indicates that IPv6 should be used, falling back to IPv4 if that's not available. Defaults to V4.
                                  Options are `V4`, `V6`, `Any`. Specifies whether the corresponding check will be performed using IPv4 or IPv6. The `Any` value indicates that IPv6 should be used, falling back to IPv4 if that's not available. Defaults to `V4`.
                                type: string
                              service:
                                description: |-
                                  (String) gRPC service.
                                  gRPC service.
                                type: string
                              tls:
                                description: |-
                                  (Boolean) Whether or not TLS is used when the connection is initiated. Defaults to false.
                                  Whether or not TLS is used when the connection is initiated. Defaults to `false`.
                                type: boolean
                              tlsConfig:
                                description: |-
                                  (Block Set, Max: 1) TLS config. (see below for nested schema)
                                  TLS config.
                                items:
                                  properties:
                                    caCert:
                                      description: |-
                                        (String) CA certificate in PEM format.
                                        CA certificate in PEM format.
                                      type: string
                                    clientCert:
                                      description: |-
                                        (String) Client certificate in PEM format.
                                        Client certificate in PEM format.
                                      type: string
                                    clientKeySecretRef:
                                      description: |-
                                        (String, Sensitive) Client key in PEM format.
                                        Client key in PEM format.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: Name of the secret.
                                          type: string
                                        namespace:
                                          description: Namespace of the secret.
                                          type: string
                                      required:
                                      - key
                                      - name
                                      - namespace
                                      type: object
                                    insecureSkipVerify:
                                      description: |-
                                        (Boolean) Disable target certificate validation. Defaults to false.
                                        Disable target certificate validation. Defaults to `false`.
                                      type: boolean
                                    serverName:
                                      description: |-
                                        (String) Used to verify the hostname for the targets.
                                        Used to verify the hostname for the targets.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        http:
                          description: |-
                            (Block Set, Max: 1) Settings for HTTP check. The target must be a URL (http or https). (see below for nested schema)
                            Settings for HTTP check. The target must be a URL (http or https).
                          items:
                            properties:
                              basicAuth:
                                description: |-
                                  (Block Set, Max: 1) Basic auth settings. (see below for nested schema)
                                  Basic auth settings.
                                items:
                                  properties:
                                    password:
                                      description: |-
                                        (String) Basic auth password.
                                        Basic auth password.
                                      type: string
                                    username:
                                      description: |-
                                        (String) Basic auth username.
                                        Basic auth username.
                                      type: string
                                  type: object
                                type: array
                              bearerToken:
                                description: |-
                                  (String) Token for use with bearer authorization header.
                                  Token for use with bearer authorization header.
                                type: string
                              body:
                                description: |-
                                  (String) The body of the HTTP request used in probe.
                                  The body of the HTTP request used in probe.
                                type: string
                              cacheBustingQueryParamName:
                                description: |-
                                  (String) The name of the query parameter used to prevent the server from using a cached response. Each probe will assign a random value to this parameter each time a request is made.
                                  The name of the query parameter used to prevent the server from using a cached response. Each probe will assign a random value to this parameter each time a request is made.
                                type: string
                              failIfBodyMatchesRegexp:
                                description: |-
                                  (Set of String) List of regexes. If any match the response body, the check will fail.
                                  List of regexes. If any match the response body, the check will fail.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              failIfBodyNotMatchesRegexp:
                                description: |-
                                  (Set of String) List of regexes. If any do not match the response body, the check will fail.
                                  List of regexes. If any do not match the response body, the check will fail.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              failIfHeaderMatchesRegexp:
                                description: |-
                                  (Block Set) Check fails if headers match. (see below for nested schema)
                                  Check fails if headers match.
                                items:
                                  properties:
                                    allowMissing:
                                      description: |-
                                        (Boolean) Allow header to be missing from responses. Defaults to false.
                                        Allow header to be missing from responses. Defaults to `false`.
                                      type: boolean
                                    header:
                                      description: |-
                                        (String) Header name.
                                        Header name.
                                      type: string
                                    regexp:
                                      description: |-
                                        (String) Regex that header value should match.
                                        Regex that header value should match.
                                      type: string
                                  type: object
                                type: array
                              failIfHeaderNotMatchesRegexp:
                                description: |-
                                  (Block Set) Check fails if headers do not match. (see below for nested schema)
                                  Check fails if headers do not match.
                                items:
                                  properties:
                                    allowMissing:
                                      description: |-
                                        (Boolean) Allow header to be missing from responses. Defaults to false.
                                        Allow header to be missing from responses. Defaults to `false`.
                                      type: boolean
                                    header:
                                      description: |-
                                        (String) Header name.
                                        Header name.
                                      type: string
                                    regexp:
                                      description: |-
                                        (String) Regex that header value should match.
                                        Regex that header value should match.
                                      type: string
                                  type: object
                                type: array
                              failIfNotSsl:
                                description: |-
                                  (Boolean) Fail if SSL is not present. Defaults to false.
                                  Fail if SSL is not present. Defaults to `false`.
                                type: boolean
                              failIfSsl:
                                description: |-
                                  (Boolean) Fail if SSL is present. Defaults to false.
                                  Fail if SSL is present. Defaults to `false`.
                                type: boolean
                              headers:
                                description: |-
                                  (Set of String) The HTTP headers set for the probe.
                                  The HTTP headers set for the probe.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              ipVersion:
                                description: |-
                                  (String) Options are V4, V6, Any. Specifies whether the corresponding check will be performed using IPv4 or IPv6. The Any value indicates that IPv6 should be used, falling back to IPv4 if that's not available. Defaults to V4.
                                  Options are `V4`, `V6`, `Any`. Specifies whether the corresponding check will be performed using IPv4 or IPv6. The `Any` value indicates that IPv6 should be used, falling back to IPv4 if that's not available. Defaults to `V4`.
                                type: string
                              method:
                                description: |-
                                  (String) Request method. One of GET, CONNECT, DELETE, HEAD, OPTIONS, POST, PUT, TRACE Defaults to GET.
                                  Request method. One of `GET`, `CONNECT`, `DELETE`, `HEAD`, `OPTIONS`, `POST`, `PUT`, `TRACE` Defaults to `GET`.
                                type: string
                              noFollowRedirects:
                                description: |-
                                  (Boolean) Do not follow redirects. Defaults to false.
                                  Do not follow redirects. Defaults to `false`.
                                type: boolean
                              proxyConnectHeaders:
                                description: |-
                                  (Set of String) The HTTP headers sent to the proxy URL
                                  The HTTP headers sent to the proxy URL
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              proxyUrl:
                                description: |-
                                  (String) Proxy URL.
                                  Proxy URL.
                                type: string
                              tlsConfig:
                                description: |-
                                  (Block Set, Max: 1) TLS config. (see below for nested schema)
                                  TLS config.
                                items:
                                  properties:
                                    caCert:
                                      description: |-
                                        (String) CA certificate in PEM format.
                                        CA certificate in PEM format.
                                      type: string
                                    clientCert:
                                      description: |-
                                        (String) Client certificate in PEM format.
                                        Client certificate in PEM format.
                                      type: string
                                    clientKeySecretRef:
                                      description: |-
                                        (String, Sensitive) Client key in PEM format.
                                        Client key in PEM format.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: Name of the secret.
                                          type: string
                                        namespace:
                                          description: Namespace of the secret.
                                          type: string
                                      required:
                                      - key
                                      - name
                                      - namespace
                                      type: object
                                    insecureSkipVerify:
                                      description: |-
                                        (Boolean) Disable target certificate validation. Defaults to false.
                                        Disable target certificate validation. Defaults to `false`.
                                      type: boolean
                                    serverName:
                                      description: |-
                                        (String) Used to verify the hostname for the targets.
                                        Used to verify the hostname for the targets.
                                      type: string
                                  type: object
                                type: array
                              validHttpVersions:
                                description: |-
                                  (Set of String) List of valid HTTP versions. Options include HTTP/1.0, HTTP/1.1, HTTP/2.0
                                  List of valid HTTP versions. Options include `HTTP/1.0`, `HTTP/1.1`, `HTTP/2.0`
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              validStatusCodes:
                                description: |-
                                  (Set of Number) Accepted status codes. If unset, defaults to 2xx.
                                  Accepted status codes. If unset, defaults to 2xx.
                                items:
                                  type: number
                                type: array
                                x-kubernetes-list-type: set
                            type: object
                          type: array
                        multihttp:
                          description: |-
                            (Block Set, Max: 1) Settings for MultiHTTP check. The target must be a URL (http or https) (see below for nested schema)
                            Settings for MultiHTTP check. The target must be a URL (http or https)
                          items:
                            properties:
                              entries:
                                description: (Block List) (see below for nested schema)
                                items:
                                  properties:
                                    assertions:
                                      description: |-
                                        (Block List) Assertions to make on the request response (see below for nested schema)
                                        Assertions to make on the request response
                                      items:
                                        properties:
                                          condition:
                                            description: |-
                                              (String) The condition of the assertion: NOT_CONTAINS, EQUALS, STARTS_WITH, ENDS_WITH, TYPE_OF, CONTAINS
                                              The condition of the assertion: NOT_CONTAINS, EQUALS, STARTS_WITH, ENDS_WITH, TYPE_OF, CONTAINS
                                            type: string
                                          expression:
                                            description: |-
                                              (String) The expression of the assertion. Should start with $.
                                              The expression of the assertion. Should start with $.
                                            type: string
                                          subject:
                                            description: |-
                                              (String) The subject of the assertion: RESPONSE_HEADERS, HTTP_STATUS_CODE, RESPONSE_BODY
                                              The subject of the assertion: RESPONSE_HEADERS, HTTP_STATUS_CODE, RESPONSE_BODY
                                            type: string
                                          type:
                                            description: |-
                                              (String) The type of assertion to make: TEXT, JSON_PATH_VALUE, JSON_PATH_ASSERTION, REGEX_ASSERTION
                                              The type of assertion to make: TEXT, JSON_PATH_VALUE, JSON_PATH_ASSERTION, REGEX_ASSERTION
                                            type: string
                                          value:
                                            description: |-
                                              (String) The value of the assertion
                                              The value of the assertion
                                            type: string
                                        type: object
                                      type: array
                                    request:
                                      description: |-
                                        (Block Set, Max: 1) An individual MultiHTTP request (see below for nested schema)
                                        An individual MultiHTTP request
                                      items:
                                        properties:
                                          body:
                                            description: |-
                                              (String) The body of the HTTP request used in probe.
                                              The body of the HTTP request used in probe.
                                            items:
                                              properties:
                                                contentEncoding:
                                                  description: |-
                                                    (String) The content encoding of the body
                                                    The content encoding of the body
                                                  type: string
                                                contentType:
                                                  description: |-
                                                    (String) The content type of the body
                                                    The content type of the body
                                                  type: string
                                                payload:
                                                  description: |-
                                                    (String) The body payload
                                                    The body payload
                                                  type: string
                                              type: object
                                            type: array
                                          headers:
                                            description: |-
                                              (Set of String) The HTTP headers set for the probe.
                                              The headers to send with the request
                                            items:
                                              properties:
                                                name:
                                                  description: |-
                                                    (String) Name of the header to send
                                                    Name of the header to send
                                                  type: string
                                                value:
                                                  description: |-
                                                    (String) The value of the assertion
                                                    Value of the header to send
                                                  type: string
                                              type: object
                                            type: array
                                          method:
                                            description: |-
                                              (String) Request method. One of GET, CONNECT, DELETE, HEAD, OPTIONS, POST, PUT, TRACE Defaults to GET.
                                              The HTTP method to use
                                            type: string
                                          queryFields:
                                            description: |-
                                              (Block Set) Query fields to send with the request (see below for nested schema)
                                              Query fields to send with the request
                                            items:
                                              properties:
                                                name:
                                                  description: |-
                                                    (String) Name of the header to send
                                                    Name of the query field to send
                                                  type: string
                                                value:
                                                  description: |-
                                                    (String) The value of the assertion
                                                    Value of the query field to send
                                                  type: string
                                              type: object
                                            type: array
                                          url:
                                            description: |-
                                              (String) The URL for the request
                                              The URL for the request
                                            type: string
                                        type: object
                                      type: array
                                    variables:
                                      description: |-
                                        (Block List) Variables to extract from the request response (see below for nested schema)
                                        Variables to extract from the request response
                                      items:
                                        properties:
                                          attribute:
                                            description: |-
                                              (String) The attribute to use when finding the variable value. Only used when type is CSS_SELECTOR
                                              The attribute to use when finding the variable value. Only used when type is CSS_SELECTOR
                                            type: string
                                          expression:
                                            description: |-
                                              (String) The expression of the assertion. Should start with $.
                                              The expression to when finding the variable. Should start with $. Only use when type is JSON_PATH or REGEX
                                            type: string
                                          name:
                                            description: |-
                                              (String) Name of the header to send
                                              The name of the variable to extract
                                            type: string
                                          type:
                                            description: |-
                                              (String) The type of assertion to make: TEXT, JSON_PATH_VALUE, JSON_PATH_ASSERTION, REGEX_ASSERTION
                                              The method of finding the variable value to extract. JSON_PATH, REGEX, CSS_SELECTOR
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                        ping:
                          description: |-
                            (Block Set, Max: 1) Settings for ping (ICMP) check. The target must be a valid hostname or IP address. (see below for nested schema)
                            Settings for ping (ICMP) check. The target must be a valid hostname or IP address.
                          items:
                            properties:
                              dontFragment:
                                description: |-
                                  bit in the IP-header. Only works with ipV4. Defaults to false.
                                  Set the DF-bit in the IP-header. Only works with ipV4. Defaults to `false`.
                                type: boolean
                              ipVersion:
                                description: |-
                                  (String) Options are V4, V6, Any. Specifies whether the corresponding check will be performed using IPv4 or IPv6. The Any value indicates that IPv6 should be used, falling back to IPv4 if that's not available. Defaults to V4.
                                  Options are `V4`, `V6`, `Any`. Specifies whether the corresponding check will be performed using IPv4 or IPv6. The `Any` value indicates that IPv6 should be used, falling back to IPv4 if that's not available. Defaults to `V4`.
                                type: string
                              payloadSize:
                                description: |-
                                  (Number) Payload size. Defaults to 0.
                                  Payload size. Defaults to `0`.
                                type: number
                              sourceIpAddress:
                                description: |-
                                  (String) Source IP address.
                                  Source IP address.
                                type: string
                            type: object
                          type: array
                        scripted:
                          description: |-
                            cloud/testing/synthetic-monitoring/create-checks/checks/k6/. (see below for nested schema)
                            Settings for scripted check. See https://grafana.com/docs/grafana-cloud/testing/synthetic-monitoring/create-checks/checks/k6/.
                          items:
                            properties:
                              script:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        tcp:
                          description: |-
                            (Block Set, Max: 1) Settings for TCP check. The target must be of the form <host>:<port>, where the host portion must be a valid hostname or IP address. (see below for nested schema)
                            Settings for TCP check. The target must be of the form `<host>:<port>`, where the host portion must be a valid hostname or IP address.
                          items:
                            properties:
                              ipVersion:
                                description: |-
                                  (String) Options are V4, V6, Any. Specifies whether the corresponding check will be performed using IPv4 or IPv6. The Any value indicates that IPv6 should be used, falling back to IPv4 if that's not available. Defaults to V4.
                                  Options are `V4`, `V6`, `Any`. Specifies whether the corresponding check will be performed using IPv4 or IPv6. The `Any` value indicates that IPv6 should be used, falling back to IPv4 if that's not available. Defaults to `V4`.
                                type: string
                              queryResponse:
                                description: |-
                                  (Block Set) The query sent in the TCP probe and the expected associated response. (see below for nested schema)
                                  The query sent in the TCP probe and the expected associated response.
                                items:
                                  properties:
                                    expect:
                                      description: |-
                                        (String) Response to expect.
                                        Response to expect.
                                      type: string
                                    send:
                                      description: |-
                                        (String) Data to send.
                                        Data to send.
                                      type: string
                                    startTls:
                                      description: |-
                                        (Boolean) Upgrade TCP connection to TLS. Defaults to false.
                                        Upgrade TCP connection to TLS. Defaults to `false`.
                                      type: boolean
                                  type: object
                                type: array
                              sourceIpAddress:
                                description: |-
                                  (String) Source IP address.
                                  Source IP address.
                                type: string
                              tls:
                                description: |-
                                  (Boolean) Whether or not TLS is used when the connection is initiated. Defaults to false.
                                  Whether or not TLS is used when the connection is initiated. Defaults to `false`.
                                type: boolean
                              tlsConfig:
                                description: |-
                                  (Block Set, Max: 1) TLS config. (see below for nested schema)
                                  TLS config.
                                items:
                                  properties:
                                    caCert:
                                      description: |-
                                        (String) CA certificate in PEM format.
                                        CA certificate in PEM format.
                                      type: string
                                    clientCert:
                                      description: |-
                                        (String) Client certificate in PEM format.
                                        Client certificate in PEM format.
                                      type: string
                                    clientKeySecretRef:
                                      description: |-
                                        (String, Sensitive) Client key in PEM format.
                                        Client key in PEM format.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: Name of the secret.
                                          type: string
                                        namespace:
                                          description: Namespace of the secret.
                                          type: string
                                      required:
                                      - key
                                      - name
                                      - namespace
                                      type: object
                                    insecureSkipVerify:
                                      description: |-
                                        (Boolean) Disable target certificate validation. Defaults to false.
                                        Disable target certificate validation. Defaults to `false`.
                                      type: boolean
                                    serverName:
                                      description: |-
                                        (String) Used to verify the hostname for the targets.
                                        Used to verify the hostname for the targets.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        traceroute:
                          description: |-
                            (Block Set, Max: 1) Settings for traceroute check. The target must be a valid hostname or IP address (see below for nested schema)
                            Settings for traceroute check. The target must be a valid hostname or IP address
                          items:
                            properties:
                              maxHops:
                                description: |-
                                  (Number) Maximum TTL for the trace Defaults to 64.
                                  Maximum TTL for the trace Defaults to `64`.
                                type: number
                              maxUnknownHops:
                                description: |-
                                  (Number) Maximum number of hosts to travers that give no response Defaults to 15.
                                  Maximum number of hosts to travers that give no response Defaults to `15`.
                                type: number
                              ptrLookup:
                                description: |-
                                  (Boolean) Reverse lookup hostnames from IP addresses Defaults to true.
                                  Reverse lookup hostnames from IP addresses Defaults to `true`.
                                type: boolean
                            type: object
                          type: array
                      type: object
                    type: array
                  target:
                    description: |-
                      (String) Hostname to ping.
                      Hostname to ping.
                    type: string
                  timeout:
                    description: |-
                      (Number) Specifies the maximum running time for the check in milliseconds. The minimum acceptable value is 1 second (1000 ms), and the maximum 10 seconds (10000 ms). Defaults to 3000.
                      Specifies the maximum running time for the check in milliseconds. The minimum acceptable value is 1 second (1000 ms), and the maximum 10 seconds (10000 ms). Defaults to `3000`.
                    type: number
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.job is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.job)
                || (has(self.initProvider) && has(self.initProvider.job))'
            - message: spec.forProvider.probes is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.probes)
                || (has(self.initProvider) && has(self.initProvider.probes))'
            - message: spec.forProvider.settings is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.settings)
                || (has(self.initProvider) && has(self.initProvider.settings))'
            - message: spec.forProvider.target is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.target)
                || (has(self.initProvider) && has(self.initProvider.target))'
          status:
            description: CheckStatus defines the observed state of Check.
            properties:
              atProvider:
                properties:
                  alertSensitivity:
                    description: |-
                      (String) Can be set to none, low, medium, or high to correspond to the check alert levels. Defaults to none.
                      Can be set to `none`, `low`, `medium`, or `high` to correspond to the check [alert levels](https://grafana.com/docs/grafana-cloud/testing/synthetic-monitoring/configure-alerts/synthetic-monitoring-alerting/). Defaults to `none`.
                    type: string
                  basicMetricsOnly:
                    description: |-
                      (Boolean) Metrics are reduced by default. Set this to false if you'd like to publish all metrics. We maintain a full list of metrics collected for each. Defaults to true.
                      Metrics are reduced by default. Set this to `false` if you'd like to publish all metrics. We maintain a [full list of metrics](https://github.com/grafana/synthetic-monitoring-agent/tree/main/internal/scraper/testdata) collected for each. Defaults to `true`.
                    type: boolean
                  enabled:
                    description: |-
                      (Boolean) Whether to enable the check. Defaults to true.
                      Whether to enable the check. Defaults to `true`.
                    type: boolean
                  frequency:
                    description: |-
                      (Number) How often the check runs in milliseconds (the value is not truly a "frequency" but a "period"). The minimum acceptable value is 1 second (1000 ms), and the maximum is 1 hour (3600000 ms). Defaults to 60000.
                      How often the check runs in milliseconds (the value is not truly a "frequency" but a "period"). The minimum acceptable value is 1 second (1000 ms), and the maximum is 1 hour (3600000 ms). Defaults to `60000`.
                    type: number
                  id:
                    description: (String) The ID of the check.
                    type: string
                  job:
                    description: |-
                      (String) Name used for job label.
                      Name used for job label.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      specific labels, to the outgoing metrics. The names and values of the labels cannot be empty, and the maximum length is 32 bytes.
                      Custom labels to be included with collected metrics and logs. The maximum number of labels that can be specified per check is 5. These are applied, along with the probe-specific labels, to the outgoing metrics. The names and values of the labels cannot be empty, and the maximum length is 32 bytes.
                    type: object
                    x-kubernetes-map-type: granular
                  probes:
                    description: |-
                      (Set of Number) List of probe location IDs where this target will be checked from.
                      List of probe location IDs where this target will be checked from.
                    items:
                      type: number
                    type: array
                    x-kubernetes-list-type: set
                  settings:
                    description: |-
                      (Block Set, Min: 1, Max: 1) Check settings. Should contain exactly one nested block. (see below for nested schema)
                      Check settings. Should contain exactly one nested block.
                    items:
                      properties:
                        dns:
                          description: |-
                            (Block Set, Max: 1) Settings for DNS check. The target must be a valid hostname (or IP address for PTR records). (see below for nested schema)
                            Settings for DNS check. The target must be a valid hostname (or IP address for `PTR` records).
                          items:
                            properties:
                              ipVersion:
                                description: |-
                                  (String) Options are V4, V6, Any. Specifies whether the corresponding check will be performed using IPv4 or IPv6. The Any value indicates that IPv6 should be used, falling back to IPv4 if that's not available. Defaults to V4.
                                  Options are `V4`, `V6`, `Any`. Specifies whether the corresponding check will be performed using IPv4 or IPv6. The `Any` value indicates that IPv6 should be used, falling back to IPv4 if that's not available. Defaults to `V4`.
                                type: string
                              port:
                                description: |-
                                  (Number) Port to target. Defaults to 53.
                                  Port to target. Defaults to `53`.
                                type: number
                              protocol:
                                description: |-
                                  (String) TCP or UDP. Defaults to UDP.
                                  `TCP` or `UDP`. Defaults to `UDP`.
                                type: string
                              recordType:
                                description: |-
                                  (String) One of ANY, A, AAAA, CNAME, MX, NS, PTR, SOA, SRV, TXT. Defaults to A.
                                  One of `ANY`, `A`, `AAAA`, `CNAME`, `MX`, `NS`, `PTR`, `SOA`, `SRV`, `TXT`. Defaults to `A`.
                                type: string
                              server:
                                description: |-
                                  (String) DNS server address to target. Defaults to 8.8.8.8.
                                  DNS server address to target. Defaults to `8.8.8.8`.
                                type: string
                              sourceIpAddress:
                                description: |-
                                  (String) Source IP address.
                                  Source IP address.
                                type: string
                              validRCodes:
                                description: |-
                                  (Set of String) List of valid response codes. Options include NOERROR, BADALG, BADMODE, BADKEY, BADCOOKIE, BADNAME, BADSIG, BADTIME, BADTRUNC, BADVERS, FORMERR, NOTIMP, NOTAUTH, NOTZONE, NXDOMAIN, NXRRSET, REFUSED, SERVFAIL, YXDOMAIN, YXRRSET.
                                  List of valid response codes. Options include `NOERROR`, `BADALG`, `BADMODE`, `BADKEY`, `BADCOOKIE`, `BADNAME`, `BADSIG`, `BADTIME`, `BADTRUNC`, `BADVERS`, `FORMERR`, `NOTIMP`, `NOTAUTH`, `NOTZONE`, `NXDOMAIN`, `NXRRSET`, `REFUSED`, `SERVFAIL`, `YXDOMAIN`, `YXRRSET`.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              validateAdditionalRrs:
                                description: |-
                                  (Block Set) Validate additional matches. (see below for nested schema)
                                  Validate additional matches.
                                items:
                                  properties:
                                    failIfMatchesRegexp:
                                      description: |-
                                        (Set of String) Fail if value matches regex.
                                        Fail if value matches regex.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                    failIfNotMatchesRegexp:
                                      description: |-
                                        (Set of String) Fail if value does not match regex.
                                        Fail if value does not match regex.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                  type: object
                                type: array
                              validateAnswerRrs:
                                description: |-
                                  (Block Set, Max: 1) Validate response answer. (see below for nested schema)
                                  Validate response answer.
                                items:
                                  properties:
                                    failIfMatchesRegexp:
                                      description: |-
                                        (Set of String) Fail if value matches regex.
                                        Fail if value matches regex.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                    failIfNotMatchesRegexp:
                                      description: |-
                                        (Set of String) Fail if value does not match regex.
                                        Fail if value does not match regex.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                  type: object
                                type: array
                              validateAuthorityRrs:
                                description: |-
                                  (Block Set, Max: 1) Validate response authority. (see below for nested schema)
                                  Validate response authority.
                                items:
                                  properties:
                                    failIfMatchesRegexp:
                                      description: |-
                                        (Set of String) Fail if value matches regex.
                                        Fail if value matches regex.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                    failIfNotMatchesRegexp:
                                      description: |-
                                        (Set of String) Fail if value does not match regex.
                                        Fail if value does not match regex.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                  type: object
                                type: array
                            type: object
                          type: array
                        grpc:
                          description: |-
                            (Block Set, Max: 1) Settings for gRPC Health check. The target must be of the form <host>:<port>, where the host portion must be a valid hostname or IP address. (see below for nested schema)
                            Settings for gRPC Health check. The target must be of the form `<host>:<port>`, where the host portion must be a valid hostname or IP address.
                          items:
                            properties:
                              ipVersion:
                                description: |-
                                  (String) Options are V4, V6, Any. Specifies whether the corresponding check will be performed using IPv4 or IPv6. The Any value indicates that IPv6 should be used, falling back to IPv4 if that's not available. Defaults to V4.
                                  Options are `V4`, `V6`, `Any`. Specifies whether the corresponding check will be performed using IPv4 or IPv6. The `Any` value indicates that IPv6 should be used, falling back to IPv4 if that's not available. Defaults to `V4`.
                                type: string
                              service:
                                description: |-
                                  (String) gRPC service.
                                  gRPC service.
                                type: string
                              tls:
                                description: |-
                                  (Boolean) Whether or not TLS is used when the connection is initiated. Defaults to false.
                                  Whether or not TLS is used when the connection is initiated. Defaults to `false`.
                                type: boolean
                              tlsConfig:
                                description: |-
                                  (Block Set, Max: 1) TLS config. (see below for nested schema)
                                  TLS config.
                                items:
                                  properties:
                                    caCert:
                                      description: |-
                                        (String) CA certificate in PEM format.
                                        CA certificate in PEM format.
                                      type: string
                                    clientCert:
                                      description: |-
                                        (String) Client certificate in PEM format.
                                        Client certificate in PEM format.
                                      type: string
                                    insecureSkipVerify:
                                      description: |-
                                        (Boolean) Disable target certificate validation. Defaults to false.
                                        Disable target certificate validation. Defaults to `false`.
                                      type: boolean
                                    serverName:
                                      description: |-
                                        (String) Used to verify the hostname for the targets.
                                        Used to verify the hostname for the targets.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        http:
                          description: |-
                            (Block Set, Max: 1) Settings for HTTP check. The target must be a URL (http or https). (see below for nested schema)
                            Settings for HTTP check. The target must be a URL (http or https).
                          items:
                            properties:
                              basicAuth:
                                description: |-
                                  (Block Set, Max: 1) Basic auth settings. (see below for nested schema)
                                  Basic auth settings.
                                items:
                                  properties:
                                    password:
                                      description: |-
                                        (String) Basic auth password.
                                        Basic auth password.
                                      type: string
                                    username:
                                      description: |-
                                        (String) Basic auth username.
                                        Basic auth username.
                                      type: string
                                  type: object
                                type: array
                              bearerToken:
                                description: |-
                                  (String) Token for use with bearer authorization header.
                                  Token for use with bearer authorization header.
                                type: string
                              body:
                                description: |-
                                  (String) The body of the HTTP request used in probe.
                                  The body of the HTTP request used in probe.
                                type: string
                              cacheBustingQueryParamName:
                                description: |-
                                  (String) The name of the query parameter used to prevent the server from using a cached response. Each probe will assign a random value to this parameter each time a request is made.
                                  The name of the query parameter used to prevent the server from using a cached response. Each probe will assign a random value to this parameter each time a request is made.
                                type: string
                              failIfBodyMatchesRegexp:
                                description: |-
                                  (Set of String) List of regexes. If any match the response body, the check will fail.
                                  List of regexes. If any match the response body, the check will fail.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              failIfBodyNotMatchesRegexp:
                                description: |-
                                  (Set of String) List of regexes. If any do not match the response body, the check will fail.
                                  List of regexes. If any do not match the response body, the check will fail.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              failIfHeaderMatchesRegexp:
                                description: |-
                                  (Block Set) Check fails if headers match. (see below for nested schema)
                                  Check fails if headers match.
                                items:
                                  properties:
                                    allowMissing:
                                      description: |-
                                        (Boolean) Allow header to be missing from responses. Defaults to false.
                                        Allow header to be missing from responses. Defaults to `false`.
                                      type: boolean
                                    header:
                                      description: |-
                                        (String) Header name.
                                        Header name.
                                      type: string
                                    regexp:
                                      description: |-
                                        (String) Regex that header value should match.
                                        Regex that header value should match.
                                      type: string
                                  type: object
                                type: array
                              failIfHeaderNotMatchesRegexp:
                                description: |-
                                  (Block Set) Check fails if headers do not match. (see below for nested schema)
                                  Check fails if headers do not match.
                                items:
                                  properties:
                                    allowMissing:
                                      description: |-
                                        (Boolean) Allow header to be missing from responses. Defaults to false.
                                        Allow header to be missing from responses. Defaults to `false`.
                                      type: boolean
                                    header:
                                      description: |-
                                        (String) Header name.
                                        Header name.
                                      type: string
                                    regexp:
                                      description: |-
                                        (String) Regex that header value should match.
                                        Regex that header value should match.
                                      type: string
                                  type: object
                                type: array
                              failIfNotSsl:
                                description: |-
                                  (Boolean) Fail if SSL is not present. Defaults to false.
                                  Fail if SSL is not present. Defaults to `false`.
                                type: boolean
                              failIfSsl:
                                description: |-
                                  (Boolean) Fail if SSL is present. Defaults to false.
                                  Fail if SSL is present. Defaults to `false`.
                                type: boolean
                              headers:
                                description: |-
                                  (Set of String) The HTTP headers set for the probe.
                                  The HTTP headers set for the probe.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              ipVersion:
                                description: |-
                                  (String) Options are V4, V6, Any. Specifies whether the corresponding check will be performed using IPv4 or IPv6. The Any value indicates that IPv6 should be used, falling back to IPv4 if that's not available. Defaults to V4.
                                  Options are `V4`, `V6`, `Any`. Specifies whether the corresponding check will be performed using IPv4 or IPv6. The `Any` value indicates that IPv6 should be used, falling back to IPv4 if that's not available. Defaults to `V4`.
                                type: string
                              method:
                                description: |-
                                  (String) Request method. One of GET, CONNECT, DELETE, HEAD, OPTIONS, POST, PUT, TRACE Defaults to GET.
                                  Request method. One of `GET`, `CONNECT`, `DELETE`, `HEAD`, `OPTIONS`, `POST`, `PUT`, `TRACE` Defaults to `GET`.
                                type: string
                              noFollowRedirects:
                                description: |-
                                  (Boolean) Do not follow redirects. Defaults to false.
                                  Do not follow redirects. Defaults to `false`.
                                type: boolean
                              proxyConnectHeaders:
                                description: |-
                                  (Set of String) The HTTP headers sent to the proxy URL
                                  The HTTP headers sent to the proxy URL
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              proxyUrl:
                                description: |-
                                  (String) Proxy URL.
                                  Proxy URL.
                                type: string
                              tlsConfig:
                                description: |-
                                  (Block Set, Max: 1) TLS config. (see below for nested schema)
                                  TLS config.
                                items:
                                  properties:
                                    caCert:
                                      description: |-
                                        (String) CA certificate in PEM format.
                                        CA certificate in PEM format.
                                      type: string
                                    clientCert:
                                      description: |-
                                        (String) Client certificate in PEM format.
                                        Client certificate in PEM format.
                                      type: string
                                    insecureSkipVerify:
                                      description: |-
                                        (Boolean) Disable target certificate validation. Defaults to false.
                                        Disable target certificate validation. Defaults to `false`.
                                      type: boolean
                                    serverName:
                                      description: |-
                                        (String) Used to verify the hostname for the targets.
                                        Used to verify the hostname for the targets.
                                      type: string
                                  type: object
                                type: array
                              validHttpVersions:
                                description: |-
                                  (Set of String) List of valid HTTP versions. Options include HTTP/1.0, HTTP/1.1, HTTP/2.0
                                  List of valid HTTP versions. Options include `HTTP/1.0`, `HTTP/1.1`, `HTTP/2.0`
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              validStatusCodes:
                                description: |-
                                  (Set of Number) Accepted status codes. If unset, defaults to 2xx.
                                  Accepted status codes. If unset, defaults to 2xx.
                                items:
                                  type: number
                                type: array
                                x-kubernetes-list-type: set
                            type: object
                          type: array
                        multihttp:
                          description: |-
                            (Block Set, Max: 1) Settings for MultiHTTP check. The target must be a URL (http or https) (see below for nested schema)
                            Settings for MultiHTTP check. The target must be a URL (http or https)
                          items:
                            properties:
                              entries:
                                description: (Block List) (see below for nested schema)
                                items:
                                  properties:
                                    assertions:
                                      description: |-
                                        (Block List) Assertions to make on the request response (see below for nested schema)
                                        Assertions to make on the request response
                                      items:
                                        properties:
                                          condition:
                                            description: |-
                                              (String) The condition of the assertion: NOT_CONTAINS, EQUALS, STARTS_WITH, ENDS_WITH, TYPE_OF, CONTAINS
                                              The condition of the assertion: NOT_CONTAINS, EQUALS, STARTS_WITH, ENDS_WITH, TYPE_OF, CONTAINS
                                            type: string
                                          expression:
                                            description: |-
                                              (String) The expression of the assertion. Should start with $.
                                              The expression of the assertion. Should start with $.
                                            type: string
                                          subject:
                                            description: |-
                                              (String) The subject of the assertion: RESPONSE_HEADERS, HTTP_STATUS_CODE, RESPONSE_BODY
                                              The subject of the assertion: RESPONSE_HEADERS, HTTP_STATUS_CODE, RESPONSE_BODY
                                            type: string
                                          type:
                                            description: |-
                                              (String) The type of assertion to make: TEXT, JSON_PATH_VALUE, JSON_PATH_ASSERTION, REGEX_ASSERTION
                                              The type of assertion to make: TEXT, JSON_PATH_VALUE, JSON_PATH_ASSERTION, REGEX_ASSERTION
                                            type: string
                                          value:
                                            description: |-
                                              (String) The value of the assertion
                                              The value of the assertion
                                            type: string
                                        type: object
                                      type: array
                                    request:
                                      description: |-
                                        (Block Set, Max: 1) An individual MultiHTTP request (see below for nested schema)
                                        An individual MultiHTTP request
                                      items:
                                        properties:
                                          body:
                                            description: |-
                                              (String) The body of the HTTP request used in probe.
                                              The body of the HTTP request used in probe.
                                            items:
                                              properties:
                                                contentEncoding:
                                                  description: |-
                                                    (String) The content encoding of the body
                                                    The content encoding of the body
                                                  type: string
                                                contentType:
                                                  description: |-
                                                    (String) The content type of the body
                                                    The content type of the body
                                                  type: string
                                                payload:
                                                  description: |-
                                                    (String) The body payload
                                                    The body payload
                                                  type: string
                                              type: object
                                            type: array
                                          headers:
                                            description: |-
                                              (Set of String) The HTTP headers set for the probe.
                                              The headers to send with the request
                                            items:
                                              properties:
                                                name:
                                                  description: |-
                                                    (String) Name of the header to send
                                                    Name of the header to send
                                                  type: string
                                                value:
                                                  description: |-
                                                    (String) The value of the assertion
                                                    Value of the header to send
                                                  type: string
                                              type: object
                                            type: array
                                          method:
                                            description: |-
                                              (String) Request method. One of GET, CONNECT, DELETE, HEAD, OPTIONS, POST, PUT, TRACE Defaults to GET.
                                              The HTTP method to use
                                            type: string
                                          queryFields:
                                            description: |-
                                              (Block Set) Query fields to send with the request (see below for nested schema)
                                              Query fields to send with the request
                                            items:
                                              properties:
                                                name:
                                                  description: |-
                                                    (String) Name of the header to send
                                                    Name of the query field to send
                                                  type: string
                                                value:
                                                  description: |-
                                                    (String) The value of the assertion
                                                    Value of the query field to send
                                                  type: string
                                              type: object
                                            type: array
                                          url:
                                            description: |-
                                              (String) The URL for the request
                                              The URL for the request
                                            type: string
                                        type: object
                                      type: array
                                    variables:
                                      description: |-
                                        (Block List) Variables to extract from the request response (see below for nested schema)
                                        Variables to extract from the request response
                                      items:
                                        properties:
                                          attribute:
                                            description: |-
                                              (String) The attribute to use when finding the variable value. Only used when type is CSS_SELECTOR
                                              The attribute to use when finding the variable value. Only used when type is CSS_SELECTOR
                                            type: string
                                          expression:
                                            description: |-
                                              (String) The expression of the assertion. Should start with $.
                                              The expression to when finding the variable. Should start with $. Only use when type is JSON_PATH or REGEX
                                            type: string
                                          name:
                                            description: |-
                                              (String) Name of the header to send
                                              The name of the variable to extract
                                            type: string
                                          type:
                                            description: |-
                                              (String) The type of assertion to make: TEXT, JSON_PATH_VALUE, JSON_PATH_ASSERTION, REGEX_ASSERTION
                                              The method of finding the variable value to extract. JSON_PATH, REGEX, CSS_SELECTOR
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                        ping:
                          description: |-
                            (Block Set, Max: 1) Settings for ping (ICMP) check. The target must be a valid hostname or IP address. (see below for nested schema)
                            Settings for ping (ICMP) check. The target must be a valid hostname or IP address.
                          items:
                            properties:
                              dontFragment:
                                description: |-
                                  bit in the IP-header. Only works with ipV4. Defaults to false.
                                  Set the DF-bit in the IP-header. Only works with ipV4. Defaults to `false`.
                                type: boolean
                              ipVersion:
                                description: |-
                                  (String) Options are V4, V6, Any. Specifies whether the corresponding check will be performed using IPv4 or IPv6. The Any value indicates that IPv6 should be used, falling back to IPv4 if that's not available. Defaults to V4.
                                  Options are `V4`, `V6`, `Any`. Specifies whether the corresponding check will be performed using IPv4 or IPv6. The `Any` value indicates that IPv6 should be used, falling back to IPv4 if that's not available. Defaults to `V4`.
                                type: string
                              payloadSize:
                                description: |-
                                  (Number) Payload size. Defaults to 0.
                                  Payload size. Defaults to `0`.
                                type: number
                              sourceIpAddress:
                                description: |-
                                  (String) Source IP address.
                                  Source IP address.
                                type: string
                            type: object
                          type: array
                        scripted:
                          description: |-
                            cloud/testing/synthetic-monitoring/create-checks/checks/k6/. (see below for nested schema)
                            Settings for scripted check. See https://grafana.com/docs/grafana-cloud/testing/synthetic-monitoring/create-checks/checks/k6/.
                          items:
                            properties:
                              script:
                                description: (String)
                                type: string
                            type: object
                          type: array
                        tcp:
                          description: |-
                            (Block Set, Max: 1) Settings for TCP check. The target must be of the form <host>:<port>, where the host portion must be a valid hostname or IP address. (see below for nested schema)
                            Settings for TCP check. The target must be of the form `<host>:<port>`, where the host portion must be a valid hostname or IP address.
                          items:
                            properties:
                              ipVersion:
                                description: |-
                                  (String) Options are V4, V6, Any. Specifies whether the corresponding check will be performed using IPv4 or IPv6. The Any value indicates that IPv6 should be used, falling back to IPv4 if that's not available. Defaults to V4.
                                  Options are `V4`, `V6`, `Any`. Specifies whether the corresponding check will be performed using IPv4 or IPv6. The `Any` value indicates that IPv6 should be used, falling back to IPv4 if that's not available. Defaults to `V4`.
                                type: string
                              queryResponse:
                                description: |-
                                  (Block Set) The query sent in the TCP probe and the expected associated response. (see below for nested schema)
                                  The query sent in the TCP probe and the expected associated response.
                                items:
                                  properties:
                                    expect:
                                      description: |-
                                        (String) Response to expect.
                                        Response to expect.
                                      type: string
                                    send:
                                      description: |-
                                        (String) Data to send.
                                        Data to send.
                                      type: string
                                    startTls:
                                      description: |-
                                        (Boolean) Upgrade TCP connection to TLS. Defaults to false.
                                        Upgrade TCP connection to TLS. Defaults to `false`.
                                      type: boolean
                                  type: object
                                type: array
                              sourceIpAddress:
                                description: |-
                                  (String) Source IP address.
                                  Source IP address.
                                type: string
                              tls:
                                description: |-
                                  (Boolean) Whether or not TLS is used when the connection is initiated. Defaults to false.
                                  Whether or not TLS is used when the connection is initiated. Defaults to `false`.
                                type: boolean
                              tlsConfig:
                                description: |-
                                  (Block Set, Max: 1) TLS config. (see below for nested schema)
                                  TLS config.
                                items:
                                  properties:
                                    caCert:
                                      description: |-
                                        (String) CA certificate in PEM format.
                                        CA certificate in PEM format.
                                      type: string
                                    clientCert:
                                      description: |-
                                        (String) Client certificate in PEM format.
                                        Client certificate in PEM format.
                                      type: string
                                    insecureSkipVerify:
                                      description: |-
                                        (Boolean) Disable target certificate validation. Defaults to false.
                                        Disable target certificate validation. Defaults to `false`.
                                      type: boolean
                                    serverName:
                                      description: |-
                                        (String) Used to verify the hostname for the targets.
                                        Used to verify the hostname for the targets.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        traceroute:
                          description: |-
                            (Block Set, Max: 1) Settings for traceroute check. The target must be a valid hostname or IP address (see below for nested schema)
                            Settings for traceroute check. The target must be a valid hostname or IP address
                          items:
                            properties:
                              maxHops:
                                description: |-
                                  (Number) Maximum TTL for the trace Defaults to 64.
                                  Maximum TTL for the trace Defaults to `64`.
                                type: number
                              maxUnknownHops:
                                description: |-
                                  (Number) Maximum number of hosts to travers that give no response Defaults to 15.
                                  Maximum number of hosts to travers that give no response Defaults to `15`.
                                type: number
                              ptrLookup:
                                description: |-
                                  (Boolean) Reverse lookup hostnames from IP addresses Defaults to true.
                                  Reverse lookup hostnames from IP addresses Defaults to `true`.
                                type: boolean
                            type: object
                          type: array
                      type: object
                    type: array
                  target:
                    description: |-
                      (String) Hostname to ping.
                      Hostname to ping.
                    type: string
                  tenantId:
                    description: |-
                      (Number) The tenant ID of the check.
                      The tenant ID of the check.
                    type: number
                  timeout:
                    description: |-
                      (Number) Specifies the maximum running time for the check in milliseconds. The minimum acceptable value is 1 second (1000 ms), and the maximum 10 seconds (10000 ms). Defaults to 3000.
                      Specifies the maximum running time for the check in milliseconds. The minimum acceptable value is 1 second (1000 ms), and the maximum 10 seconds (10000 ms). Defaults to `3000`.
                    type: number
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: installations.sm.grafana.crossplane.io
spec:
  group: sm.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: Installation
    listKind: InstallationList
    plural: installations
    singular: installation
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'Installation is the Schema for the Installations API. Sets up
          Synthetic Monitoring on a Grafana cloud stack and generates a token. Once
          a Grafana Cloud stack is created, a user can either use this resource or
          go into the UI to install synthetic monitoring. This resource cannot be
          imported but it can be used on an existing Synthetic Monitoring installation
          without issues. Note that this resource must be used on a provider configured
          with Grafana Cloud credentials. Official documentation https://grafana.com/docs/grafana-cloud/testing/synthetic-monitoring/set-up/API
          documentation https://github.com/grafana/synthetic-monitoring-api-go-client/blob/main/docs/API.md#apiv1registerinstall
          Required access policy scopes: stacks:read'
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: InstallationSpec defines the desired state of Installation
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  cloudStackRef:
                    description: Reference to a Stack in cloud to populate stackId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  cloudStackSelector:
                    description: Selector for a Stack in cloud to populate stackId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  metricsPublisherKeySecretRef:
                    description: |-
                      (String, Sensitive) The Grafana Cloud access policy with the following scopes: stacks:read, metrics:write, logs:write, traces:write. This is used to publish metrics and logs to Grafana Cloud stack.
                      The [Grafana Cloud access policy](https://grafana.com/docs/grafana-cloud/account-management/authentication-and-permissions/access-policies/) with the following scopes: `stacks:read`, `metrics:write`, `logs:write`, `traces:write`. This is used to publish metrics and logs to Grafana Cloud stack.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  stackId:
                    description: |-
                      (String) The ID or slug of the stack to install SM on.
                      The ID or slug of the stack to install SM on.
                    type: string
                  stackSmApiUrl:
                    description: |-
                      cloud/testing/synthetic-monitoring/set-up/set-up-private-probes/#probe-api-server-url. A static mapping exists in the provider but it may not contain all the regions. If it does contain the stack's region, this field is computed automatically and readable.
                      The URL of the SM API to install SM on. This depends on the stack region, find the list of API URLs here: https://grafana.com/docs/grafana-cloud/testing/synthetic-monitoring/set-up/set-up-private-probes/#probe-api-server-url. A static mapping exists in the provider but it may not contain all the regions. If it does contain the stack's region, this field is computed automatically and readable.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  cloudStackRef:
                    description: Reference to a Stack in cloud to populate stackId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  cloudStackSelector:
                    description: Selector for a Stack in cloud to populate stackId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  metricsPublisherKeySecretRef:
                    description: |-
                      (String, Sensitive) The Grafana Cloud access policy with the following scopes: stacks:read, metrics:write, logs:write, traces:write. This is used to publish metrics and logs to Grafana Cloud stack.
                      The [Grafana Cloud access policy](https://grafana.com/docs/grafana-cloud/account-management/authentication-and-permissions/access-policies/) with the following scopes: `stacks:read`, `metrics:write`, `logs:write`, `traces:write`. This is used to publish metrics and logs to Grafana Cloud stack.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  stackId:
                    description: |-
                      (String) The ID or slug of the stack to install SM on.
                      The ID or slug of the stack to install SM on.
                    type: string
                  stackSmApiUrl:
                    description: |-
                      cloud/testing/synthetic-monitoring/set-up/set-up-private-probes/#probe-api-server-url. A static mapping exists in the provider but it may not contain all the regions. If it does contain the stack's region, this field is computed automatically and readable.
                      The URL of the SM API to install SM on. This depends on the stack region, find the list of API URLs here: https://grafana.com/docs/grafana-cloud/testing/synthetic-monitoring/set-up/set-up-private-probes/#probe-api-server-url. A static mapping exists in the provider but it may not contain all the regions. If it does contain the stack's region, this field is computed automatically and readable.
                    type: string
                required:
                - metricsPublisherKeySecretRef
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.metricsPublisherKeySecretRef is a required
                parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.metricsPublisherKeySecretRef)'
          status:
            description: InstallationStatus defines the observed state of Installation.
            properties:
              atProvider:
                properties:
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  smAccessToken:
                    description: |-
                      (String) Generated token to access the SM API.
                      Generated token to access the SM API.
                    type: string
                  stackId:
                    description: |-
                      (String) The ID or slug of the stack to install SM on.
                      The ID or slug of the stack to install SM on.
                    type: string
                  stackSmApiUrl:
                    description: |-
                      cloud/testing/synthetic-monitoring/set-up/set-up-private-probes/#probe-api-server-url. A static mapping exists in the provider but it may not contain all the regions. If it does contain the stack's region, this field is computed automatically and readable.
                      The URL of the SM API to install SM on. This depends on the stack region, find the list of API URLs here: https://grafana.com/docs/grafana-cloud/testing/synthetic-monitoring/set-up/set-up-private-probes/#probe-api-server-url. A static mapping exists in the provider but it may not contain all the regions. If it does contain the stack's region, this field is computed automatically and readable.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: probes.sm.grafana.crossplane.io
spec:
  group: sm.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: Probe
    listKind: ProbeList
    plural: probes
    singular: probe
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Probe is the Schema for the Probes API. Besides the public probes
          run by Grafana Labs, you can also install your own private probes. These
          are only accessible to you and only write data to your Grafana Cloud account.
          Private probes are instances of the open source Grafana Synthetic Monitoring
          Agent. Official documentation https://grafana.com/docs/grafana-cloud/testing/synthetic-monitoring/set-up/set-up-private-probes/
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ProbeSpec defines the desired state of Probe
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  disableScriptedChecks:
                    description: |-
                      (Boolean) Disables scripted checks for this probe. Defaults to false.
                      Disables scripted checks for this probe. Defaults to `false`.
                    type: boolean
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      (Map of String) Custom labels to be included with collected metrics and logs.
                      Custom labels to be included with collected metrics and logs.
                    type: object
                    x-kubernetes-map-type: granular
                  latitude:
                    description: |-
                      (Number) Latitude coordinates.
                      Latitude coordinates.
                    type: number
                  longitude:
                    description: |-
                      (Number) Longitude coordinates.
                      Longitude coordinates.
                    type: number
                  name:
                    description: |-
                      (String) Name of the probe.
                      Name of the probe.
                    type: string
                  public:
                    description: |-
                      (Boolean) Public probes are run by Grafana Labs and can be used by all users. Only Grafana Labs managed public probes will be set to true. Defaults to false.
                      Public probes are run by Grafana Labs and can be used by all users. Only Grafana Labs managed public probes will be set to `true`. Defaults to `false`.
                    type: boolean
                  region:
                    description: |-
                      (String) Region of the probe.
                      Region of the probe.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  disableScriptedChecks:
                    description: |-
                      (Boolean) Disables scripted checks for this probe. Defaults to false.
                      Disables scripted checks for this probe. Defaults to `false`.
                    type: boolean
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      (Map of String) Custom labels to be included with collected metrics and logs.
                      Custom labels to be included with collected metrics and logs.
                    type: object
                    x-kubernetes-map-type: granular
                  latitude:
                    description: |-
                      (Number) Latitude coordinates.
                      Latitude coordinates.
                    type: number
                  longitude:
                    description: |-
                      (Number) Longitude coordinates.
                      Longitude coordinates.
                    type: number
                  name:
                    description: |-
                      (String) Name of the probe.
                      Name of the probe.
                    type: string
                  public:
                    description: |-
                      (Boolean) Public probes are run by Grafana Labs and can be used by all users. Only Grafana Labs managed public probes will be set to true. Defaults to false.
                      Public probes are run by Grafana Labs and can be used by all users. Only Grafana Labs managed public probes will be set to `true`. Defaults to `false`.
                    type: boolean
                  region:
                    description: |-
                      (String) Region of the probe.
                      Region of the probe.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.latitude is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.latitude)
                || (has(self.initProvider) && has(self.initProvider.latitude))'
            - message: spec.forProvider.longitude is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.longitude)
                || (has(self.initProvider) && has(self.initProvider.longitude))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.region is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.region)
                || (has(self.initProvider) && has(self.initProvider.region))'
          status:
            description: ProbeStatus defines the observed state of Probe.
            properties:
              atProvider:
                properties:
                  disableScriptedChecks:
                    description: |-
                      (Boolean) Disables scripted checks for this probe. Defaults to false.
                      Disables scripted checks for this probe. Defaults to `false`.
                    type: boolean
                  id:
                    description: (String) The ID of the probe.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      (Map of String) Custom labels to be included with collected metrics and logs.
                      Custom labels to be included with collected metrics and logs.
                    type: object
                    x-kubernetes-map-type: granular
                  latitude:
                    description: |-
                      (Number) Latitude coordinates.
                      Latitude coordinates.
                    type: number
                  longitude:
                    description: |-
                      (Number) Longitude coordinates.
                      Longitude coordinates.
                    type: number
                  name:
                    description: |-
                      (String) Name of the probe.
                      Name of the probe.
                    type: string
                  public:
                    description: |-
                      (Boolean) Public probes are run by Grafana Labs and can be used by all users. Only Grafana Labs managed public probes will be set to true. Defaults to false.
                      Public probes are run by Grafana Labs and can be used by all users. Only Grafana Labs managed public probes will be set to `true`. Defaults to `false`.
                    type: boolean
                  region:
                    description: |-
                      (String) Region of the probe.
                      Region of the probe.
                    type: string
                  tenantId:
                    description: |-
                      (Number) The tenant ID of the probe.
                      The tenant ID of the probe.
                    type: number
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
